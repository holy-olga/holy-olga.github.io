import{g as n0,R as Cg,j as dT}from"./index-B23h02GT.js";const Pc="/assets/5-sec-rule-CZ1MsJUU.jpg",Dc="/assets/colours-of-pomegranate-CKnZuZJf.jpg",cd="/assets/elsa-von-freytag-BBKmejLr.jpg",po="/assets/food-altar-CyzUluKP.jpg",ka="/assets/holy_olga_budapest-DJqL6g-7.jpg",Lc="/assets/Immaculate_Heart_of_Mary-C7z7pCck.jpg",fT="/assets/irma-1-BwFlE-yB.jpg",ud="/assets/irma-jelenes-1-BQx01Nw5.jpg",Ic="/assets/irma-jelenes-2-DmgYWz6C.jpg",Uc="/assets/erik-matrai-B7Y0_oY5.jpg",Fc="/assets/krumpli-Buc7s31H.jpg",Bc="/assets/lady-gaga-DD-xeqb2.jpg",Ga="/assets/MattiaPreti-SantaVeronicaConIlVelo-kkwr7Shw.jpg",hd="/assets/monstrancia-Cnth1y80.jpg",dd="/assets/sacred-and-profane-BPKZiAVp.jpg",Oc="/assets/sacred-heart-DFILUxwM.jpg",fd="/assets/skyspace-zumtobel-CRS3fHMM.jpg",kc="/assets/window-BMg3pF-C.jpg",pT="main",Xr="rect",st="text",En="image",Ng="empty",Me="white",pn="cyan";var pd={nodes:[{id:"IRMA5SECONDS",group:pT,img:fT},{id:"Profane",group:Xr},{id:"eating",group:st},{id:"Profane/eating/dropping beats/5 seconds rule",group:st,text:"5 seconds rule"},{id:Pc,group:En,img:Pc,text:"fallen bites floor mosaic (Roman age)"},{id:"fallen morsels",group:st},{id:"Profane/eating/fallen morsels/Altars",text:"Altars",group:Xr},{id:po,text:"foodAltar_jpg",group:En,img:po},{id:"sacred arts",group:st},{id:Ic,group:En,img:Ic},{id:"ca_sa_sa_pa_aa_ih",group:Ng},{id:"street art",group:st},{id:"public art",group:st},{id:"applied art",group:st},{id:"installation history",group:st},{id:"Contemporary Art",group:Xr},{id:"collective memory",group:st},{id:"applied art/merchandise",group:st,text:"merchandise"},{id:"coloring book",group:st},{id:"pins",group:st},{id:"holy images",group:st},{id:"ginger bread",group:st},{id:"tablecloth",group:st},{id:"design",group:st},{id:"jewelleries",group:st},{id:"style",group:st},{id:"The sign in society",group:st},{id:"webpage",group:st},{id:"woven textile",group:st},{id:"character",group:st},{id:"altar",group:st},{id:kc,group:En,img:kc},{id:"James Turell",group:st},{id:fd,group:En,img:fd},{id:"Erik Mátrai",group:st},{id:Uc,group:En,img:Uc},{id:"Elsa von Freytag-Loringhoven",group:st},{id:cd,group:En,img:cd},{id:"János Sugár",group:st},{id:hd,group:En,img:hd,text:"Monstrancia Modell: Narcissus in the black hole"},{id:"re_st_sd_hl",group:Ng},{id:"Religion",group:Xr},{id:"Saint",group:Xr},{id:"Sacred",group:Xr},{id:"Holy",group:Xr},{id:"baroque",group:st},{id:"Religion/baroque/Altars",text:"Altars",group:Xr},{id:"subtopic",group:st},{id:ud,group:En,img:ud},{id:Oc,group:En,img:Oc,text:"Sacred heart"},{id:"non ascetic",group:st},{id:"space",group:st},{id:"sacrificial place",group:st},{id:"time",group:st},{id:"5 seconds",group:st},{id:"Saint/time/5 seconds/moment",group:st,text:"moment"},{id:"EMBODIMENT",group:st},{id:Lc,group:En,img:Lc,text:"Iconography"},{id:dd,group:En,img:dd,text:"Mircea Eliade: Sacred and profane"},{id:Dc,group:En,img:Dc,text:"Sergei Parajanov: The Colour of Pomegranates"},{id:Ga,group:En,img:Ga,text:"veil of veronica"},{id:"Holy/merchandise",group:st,text:"merchandise"},{id:ka,group:En,img:ka,text:"Holy Olga"},{id:"holy shit",group:st},{id:Bc,group:En,img:Bc,text:"Lady Gaga"},{id:Fc,group:En,img:Fc},{id:"Holy/holy shit/5 seconds rule",group:st,text:"5 seconds rule"},{id:"Holy/holy shit/5 seconds rule/moment",group:st,text:"moment"},{id:"Free Will",group:st}],links:[{source:"IRMA5SECONDS",target:"Profane",group:Me},{source:"Profane",target:"eating",group:Me},{source:"eating",target:"Profane/eating/dropping beats/5 seconds rule",group:Me,text:"dropping beats"},{source:"Profane/eating/dropping beats/5 seconds rule",target:Pc,group:Me},{source:"eating",target:"fallen morsels",group:Me},{source:"fallen morsels",target:"Profane/eating/fallen morsels/Altars",group:Me},{source:"Profane/eating/fallen morsels/Altars",target:po,group:Me},{source:"Profane/eating/fallen morsels/Altars",target:"sacred arts",group:Me},{source:"ca_sa_sa_pa_aa_ih",target:"sacred arts",group:Me},{source:"ca_sa_sa_pa_aa_ih",target:"street art",group:Me},{source:"ca_sa_sa_pa_aa_ih",target:"public art",group:Me},{source:"ca_sa_sa_pa_aa_ih",target:"applied art",group:Me},{source:"ca_sa_sa_pa_aa_ih",target:"installation history",group:Me},{source:"street art",target:Ic,group:Me},{source:"sacred arts",target:Ic,group:Me},{source:"Contemporary Art",target:"ca_sa_sa_pa_aa_ih",group:Me},{source:"IRMA5SECONDS",target:"Contemporary Art",group:Me},{source:"public art",target:"collective memory",group:Me},{source:"applied art",target:"applied art/merchandise",group:Me},{source:"applied art/merchandise",target:"coloring book",group:Me},{source:"applied art/merchandise",target:"pins",group:Me},{source:"applied art/merchandise",target:"holy images",group:Me},{source:"applied art/merchandise",target:"ginger bread",group:Me},{source:"applied art/merchandise",target:"tablecloth",group:Me},{source:"applied art",target:"design",group:Me},{source:"design",target:"jewelleries",group:Me},{source:"design",target:"style",group:Me},{source:"design",target:"The sign in society",group:Me},{source:"design",target:"webpage",group:Me},{source:"design",target:"woven textile",group:Me},{source:"design",target:"character",group:Me},{source:"installation history",target:"altar",group:Me},{source:"altar",target:kc,group:Me},{source:"installation history",target:"James Turell",group:Me},{source:"James Turell",target:fd,group:Me},{source:"installation history",target:"Erik Mátrai",group:Me},{source:"Erik Mátrai",target:Uc,group:Me},{source:"installation history",target:"Elsa von Freytag-Loringhoven",group:Me},{source:"Elsa von Freytag-Loringhoven",target:cd,group:Me},{source:"installation history",target:"János Sugár",group:Me},{source:"János Sugár",target:hd,group:Me},{source:"IRMA5SECONDS",target:"re_st_sd_hl",group:Me},{source:"re_st_sd_hl",target:"Religion",group:Me},{source:"re_st_sd_hl",target:"Saint",group:Me},{source:"re_st_sd_hl",target:"Sacred",group:Me},{source:"re_st_sd_hl",target:"Holy",group:Me},{source:"Religion",target:"baroque",group:Me},{source:"baroque",target:"Religion/baroque/Altars",group:Me},{source:"baroque",target:"subtopic",group:Me},{source:"subtopic",target:ud,group:Me},{source:"subtopic",target:Oc,group:Me},{source:"Religion",target:"non ascetic",group:Me},{source:"Saint",target:"space",group:Me},{source:"space",target:"sacrificial place",group:Me},{source:"Saint",target:"time",group:Me},{source:"time",target:"5 seconds",group:Me},{source:"5 seconds",target:"Saint/time/5 seconds/moment",group:Me},{source:"Saint",target:"EMBODIMENT",group:Me},{source:"EMBODIMENT",target:Lc,group:Me},{source:"Sacred",target:dd,group:Me},{source:"Holy",target:Dc,group:Me},{source:"Holy",target:Ga,group:Me},{source:"Holy",target:"Holy/merchandise",group:Me},{source:"Holy/merchandise",target:ka,group:Me},{source:"Holy",target:"holy shit",group:Me},{source:"holy shit",target:Bc,group:Me},{source:"holy shit",target:Fc,group:Me},{source:"holy shit",target:"Holy/holy shit/5 seconds rule",group:Me},{source:"Holy/holy shit/5 seconds rule",target:"Holy/holy shit/5 seconds rule/moment",group:Me},{source:"Holy/holy shit/5 seconds rule",target:"Free Will",group:Me},{source:"Profane/eating/dropping beats/5 seconds rule",target:"5 seconds",group:pn,arrow:[!0,!0]},{source:Pc,target:"fallen morsels",group:pn,arrow:[!0,!0]},{source:"fallen morsels",target:"Holy",group:pn,arrow:[!0,!0]},{source:"fallen morsels",target:Fc,group:pn,arrow:[!0,!0]},{source:"Profane/eating/fallen morsels/Altars",target:"Holy",group:pn,arrow:[!0,!0]},{source:po,target:"non ascetic",group:pn,arrow:[!0,!0]},{source:po,target:"Religion/baroque/Altars",group:pn,arrow:[!0,!0]},{source:po,target:"Religion",group:pn,arrow:[!0,!1]},{source:"sacred arts",target:Ga,group:pn,arrow:[!0,!0]},{source:"holy images",target:Oc,group:pn,arrow:[!0,!0]},{source:"applied art/merchandise",target:Lc,group:pn,arrow:[!0,!0]},{source:"jewelleries",target:"IRMA5SECONDS",group:pn,arrow:[!0,!0],text:"correlation"},{source:"style",target:ka,group:pn,arrow:[!0,!0]},{source:"style",target:Dc,group:pn,arrow:[!0,!0]},{source:"The sign in society",target:Bc,group:pn,arrow:[!0,!0]},{source:"woven textile",target:Ga,group:pn,arrow:[!0,!0]},{source:"character",target:ka,group:pn,arrow:[!0,!0]},{source:Uc,target:"sacrificial place",group:pn,arrow:[!0,!1]},{source:kc,target:"Holy",group:pn,arrow:[!0,!0]}]};/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ra="175",An={ROTATE:0,DOLLY:1,PAN:2},Dr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},i0=0,Jf=1,r0=2,mT=0,Vp=1,gT=2,vi=3,ri=0,It=1,Vn=2,si=0,Pi=1,ta=2,na=3,ia=4,Xo=5,In=100,Hp=101,Wp=102,s0=103,o0=104,Er=200,$p=201,qp=202,jp=203,Ul=204,Fl=205,Xp=206,Yp=207,Kp=208,Zp=209,Qp=210,_T=211,vT=212,yT=213,xT=214,Bl=0,Ol=1,kl=2,fs=3,Gl=4,zl=5,Vl=6,Hl=7,fc=0,a0=1,l0=2,oi=0,c0=1,u0=2,h0=3,d0=4,bT=5,f0=6,p0=7,Jp=300,Ii=301,Ui=302,ps=303,ms=304,eo=306,to=1e3,lr=1001,no=1002,Bt=1003,em=1004,Lr=1005,en=1006,Yo=1007,Jn=1008,Zt=1009,Xs=1010,Ys=1011,Ki=1012,Sn=1013,Lt=1014,Jt=1015,Fn=1016,Th=1017,Mh=1018,xi=1020,Eh=35902,tm=1021,pc=1022,Qt=1023,nm=1024,im=1025,bi=1026,Si=1027,mc=1028,Ca=1029,io=1030,Na=1031,ST=1032,Pa=1033,Ks=33776,ls=33777,cs=33778,us=33779,Wl=35840,$l=35841,ql=35842,jl=35843,Xl=36196,ra=37492,sa=37496,oa=37808,aa=37809,la=37810,ca=37811,ua=37812,ha=37813,da=37814,fa=37815,pa=37816,ma=37817,ga=37818,_a=37819,va=37820,ya=37821,Zs=36492,ep=36494,tp=36495,rm=36283,Yl=36284,Kl=36285,Zl=36286,TT=3200,MT=3201,Gr=0,m0=1,yi="",Ie="srgb",hr="srgb-linear",Ju="linear",Et="srgb",ET=0,Fs=7680,wT=7681,AT=7682,RT=7683,CT=34055,NT=34056,PT=5386,DT=512,LT=513,IT=514,UT=515,FT=516,BT=517,OT=518,np=519,sm=512,wh=513,om=514,Ah=515,am=516,lm=517,cm=518,um=519,eh=35044,Vo=35048,Pg="300 es",ei=2e3,gs=2001;class Wr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const r=n[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Dg=1234567;const Ml=Math.PI/180,ro=180/Math.PI;function Fr(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pn[i&255]+Pn[i>>8&255]+Pn[i>>16&255]+Pn[i>>24&255]+"-"+Pn[e&255]+Pn[e>>8&255]+"-"+Pn[e>>16&15|64]+Pn[e>>24&255]+"-"+Pn[t&63|128]+Pn[t>>8&255]+"-"+Pn[t>>16&255]+Pn[t>>24&255]+Pn[n&255]+Pn[n>>8&255]+Pn[n>>16&255]+Pn[n>>24&255]).toLowerCase()}function it(i,e,t){return Math.max(e,Math.min(t,i))}function hm(i,e){return(i%e+e)%e}function kT(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function GT(i,e,t){return i!==e?(t-i)/(e-i):0}function El(i,e,t){return(1-t)*i+t*e}function zT(i,e,t,n){return El(i,e,1-Math.exp(-t*n))}function VT(i,e=1){return e-Math.abs(hm(i,e*2)-e)}function HT(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function WT(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function $T(i,e){return i+Math.floor(Math.random()*(e-i+1))}function qT(i,e){return i+Math.random()*(e-i)}function jT(i){return i*(.5-Math.random())}function XT(i){i!==void 0&&(Dg=i);let e=Dg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function YT(i){return i*Ml}function KT(i){return i*ro}function ZT(i){return(i&i-1)===0&&i!==0}function QT(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function JT(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function eM(i,e,t,n,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),d=o((e-n)/2),f=s((n-e)/2),p=o((n-e)/2);switch(r){case"XYX":i.set(a*u,l*h,l*d,a*c);break;case"YZY":i.set(l*d,a*u,l*h,a*c);break;case"ZXZ":i.set(l*h,l*d,a*u,a*c);break;case"XZX":i.set(a*u,l*p,l*f,a*c);break;case"YXY":i.set(l*f,a*u,l*p,a*c);break;case"ZYZ":i.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Hn(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function nt(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const th={DEG2RAD:Ml,RAD2DEG:ro,generateUUID:Fr,clamp:it,euclideanModulo:hm,mapLinear:kT,inverseLerp:GT,lerp:El,damp:zT,pingpong:VT,smoothstep:HT,smootherstep:WT,randInt:$T,randFloat:qT,randFloatSpread:jT,seededRandom:XT,degToRad:YT,radToDeg:KT,isPowerOfTwo:ZT,ceilPowerOfTwo:QT,floorPowerOfTwo:JT,setQuaternionFromProperEuler:eM,normalize:nt,denormalize:Hn};class ae{constructor(e=0,t=0){ae.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=it(this.x,e.x,t.x),this.y=it(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=it(this.x,e,t),this.y=it(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(it(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(it(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Xe{constructor(e,t,n,r,s,o,a,l,c){Xe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,a,l,c)}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],_=r[0],g=r[3],m=r[6],v=r[1],x=r[4],y=r[7],T=r[2],b=r[5],M=r[8];return s[0]=o*_+a*v+l*T,s[3]=o*g+a*x+l*b,s[6]=o*m+a*y+l*M,s[1]=c*_+u*v+h*T,s[4]=c*g+u*x+h*b,s[7]=c*m+u*y+h*M,s[2]=d*_+f*v+p*T,s[5]=d*g+f*x+p*b,s[8]=d*m+f*y+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,p=t*h+n*d+r*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return e[0]=h*_,e[1]=(r*c-u*n)*_,e[2]=(a*n-r*o)*_,e[3]=d*_,e[4]=(u*t-r*l)*_,e[5]=(r*s-a*t)*_,e[6]=f*_,e[7]=(n*l-c*t)*_,e[8]=(o*t-n*s)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(md.makeScale(e,t)),this}rotate(e){return this.premultiply(md.makeRotation(-e)),this}translate(e,t){return this.premultiply(md.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const md=new Xe;function dm(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function Ql(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function g0(){const i=Ql("canvas");return i.style.display="block",i}const Lg={};function Qi(i){i in Lg||(Lg[i]=!0,console.warn(i))}function tM(i,e,t){return new Promise(function(n,r){function s(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:r();break;case i.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function nM(i){const e=i.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function iM(i){const e=i.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Ig=new Xe().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ug=new Xe().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function rM(){const i={enabled:!0,workingColorSpace:hr,spaces:{},convert:function(r,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===Et&&(r.r=Br(r.r),r.g=Br(r.g),r.b=Br(r.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Et&&(r.r=Ko(r.r),r.g=Ko(r.g),r.b=Ko(r.b))),r},fromWorkingColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},toWorkingColorSpace:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===yi?Ju:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,o){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[hr]:{primaries:e,whitePoint:n,transfer:Ju,toXYZ:Ig,fromXYZ:Ug,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Ie},outputColorSpaceConfig:{drawingBufferColorSpace:Ie}},[Ie]:{primaries:e,whitePoint:n,transfer:Et,toXYZ:Ig,fromXYZ:Ug,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Ie}}}),i}const lt=rM();function Br(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Ko(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let mo;class sM{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{mo===void 0&&(mo=Ql("canvas")),mo.width=e.width,mo.height=e.height;const r=mo.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),n=mo}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ql("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Br(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Br(t[n]/255)*255):t[n]=Br(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let oM=0;class fm{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:oM++}),this.uuid=Fr(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(gd(r[o].image)):s.push(gd(r[o]))}else s=gd(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function gd(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?sM.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let aM=0;class dn extends Wr{constructor(e=dn.DEFAULT_IMAGE,t=dn.DEFAULT_MAPPING,n=lr,r=lr,s=en,o=Jn,a=Qt,l=Zt,c=dn.DEFAULT_ANISOTROPY,u=yi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:aM++}),this.uuid=Fr(),this.name="",this.source=new fm(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ae(0,0),this.repeat=new ae(1,1),this.center=new ae(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Xe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Jp)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case to:e.x=e.x-Math.floor(e.x);break;case lr:e.x=e.x<0?0:1;break;case no:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case to:e.y=e.y-Math.floor(e.y);break;case lr:e.y=e.y<0?0:1;break;case no:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}dn.DEFAULT_IMAGE=null;dn.DEFAULT_MAPPING=Jp;dn.DEFAULT_ANISOTROPY=1;class We{constructor(e=0,t=0,n=0,r=1){We.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],_=l[2],g=l[6],m=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,y=(f+1)/2,T=(m+1)/2,b=(u+d)/4,M=(h+_)/4,w=(p+g)/4;return x>y&&x>T?x<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(x),r=b/n,s=M/n):y>T?y<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),n=b/r,s=w/r):T<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(T),n=M/s,r=w/s),this.set(n,r,s,t),this}let v=Math.sqrt((g-p)*(g-p)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(v)<.001&&(v=1),this.x=(g-p)/v,this.y=(h-_)/v,this.z=(d-u)/v,this.w=Math.acos((c+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=it(this.x,e.x,t.x),this.y=it(this.y,e.y,t.y),this.z=it(this.z,e.z,t.z),this.w=it(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=it(this.x,e,t),this.y=it(this.y,e,t),this.z=it(this.z,e,t),this.w=it(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(it(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ao extends Wr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new We(0,0,e,t),this.scissorTest=!1,this.viewport=new We(0,0,e,t);const r={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:en,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new dn(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new fm(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class _s extends ao{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class pm extends dn{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Bt,this.minFilter=Bt,this.wrapR=lr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class lM extends dn{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Bt,this.minFilter=Bt,this.wrapR=lr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ji{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],h=n[r+3];const d=s[o+0],f=s[o+1],p=s[o+2],_=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=_;return}if(h!==_||l!==d||c!==f||u!==p){let g=1-a;const m=l*d+c*f+u*p+h*_,v=m>=0?1:-1,x=1-m*m;if(x>Number.EPSILON){const T=Math.sqrt(x),b=Math.atan2(T,m*v);g=Math.sin(g*b)/T,a=Math.sin(a*b)/T}const y=a*v;if(l=l*g+d*y,c=c*g+f*y,u=u*g+p*y,h=h*g+_*y,g===1-a){const T=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=T,c*=T,u*=T,h*=T}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],h=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*f-c*d,e[t+1]=l*p+u*d+c*h-a*f,e[t+2]=c*p+u*f+a*d-l*h,e[t+3]=u*p-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),h=a(s/2),d=l(n/2),f=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-r)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(r+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(s-c)/f,this._x=(r+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-r)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(it(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*r+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=r*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(e=0,t=0,n=0){N.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Fg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Fg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*r-a*n),u=2*(a*t-s*r),h=2*(s*n-o*t);return this.x=t+l*c+o*h-a*u,this.y=n+l*u+a*c-s*h,this.z=r+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=it(this.x,e.x,t.x),this.y=it(this.y,e.y,t.y),this.z=it(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=it(this.x,e,t),this.y=it(this.y,e,t),this.z=it(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(it(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return _d.copy(this).projectOnVector(e),this.sub(_d)}reflect(e){return this.sub(_d.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(it(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _d=new N,Fg=new Ji;class lo{constructor(e=new N(1/0,1/0,1/0),t=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Gi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Gi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Gi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Gi):Gi.fromBufferAttribute(s,o),Gi.applyMatrix4(e.matrixWorld),this.expandByPoint(Gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Gc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Gc.copy(n.boundingBox)),Gc.applyMatrix4(e.matrixWorld),this.union(Gc)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Gi),Gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(za),zc.subVectors(this.max,za),go.subVectors(e.a,za),_o.subVectors(e.b,za),vo.subVectors(e.c,za),Yr.subVectors(_o,go),Kr.subVectors(vo,_o),As.subVectors(go,vo);let t=[0,-Yr.z,Yr.y,0,-Kr.z,Kr.y,0,-As.z,As.y,Yr.z,0,-Yr.x,Kr.z,0,-Kr.x,As.z,0,-As.x,-Yr.y,Yr.x,0,-Kr.y,Kr.x,0,-As.y,As.x,0];return!vd(t,go,_o,vo,zc)||(t=[1,0,0,0,1,0,0,0,1],!vd(t,go,_o,vo,zc))?!1:(Vc.crossVectors(Yr,Kr),t=[Vc.x,Vc.y,Vc.z],vd(t,go,_o,vo,zc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(vr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),vr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),vr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),vr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),vr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),vr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),vr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),vr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(vr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const vr=[new N,new N,new N,new N,new N,new N,new N,new N],Gi=new N,Gc=new lo,go=new N,_o=new N,vo=new N,Yr=new N,Kr=new N,As=new N,za=new N,zc=new N,Vc=new N,Rs=new N;function vd(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Rs.fromArray(i,s);const a=r.x*Math.abs(Rs.x)+r.y*Math.abs(Rs.y)+r.z*Math.abs(Rs.z),l=e.dot(Rs),c=t.dot(Rs),u=n.dot(Rs);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const cM=new lo,Va=new N,yd=new N;class gc{constructor(e=new N,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):cM.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Va.subVectors(e,this.center);const t=Va.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(Va,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(yd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Va.copy(e.center).add(yd)),this.expandByPoint(Va.copy(e.center).sub(yd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const yr=new N,xd=new N,Hc=new N,Zr=new N,bd=new N,Wc=new N,Sd=new N;class Rh{constructor(e=new N,t=new N(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,yr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=yr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(yr.copy(this.origin).addScaledVector(this.direction,t),yr.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){xd.copy(e).add(t).multiplyScalar(.5),Hc.copy(t).sub(e).normalize(),Zr.copy(this.origin).sub(xd);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Hc),a=Zr.dot(this.direction),l=-Zr.dot(Hc),c=Zr.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=s*u,h>=0)if(d>=-p)if(d<=p){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(xd).addScaledVector(Hc,d),f}intersectSphere(e,t){yr.subVectors(e.center,this.origin);const n=yr.dot(this.direction),r=yr.dot(yr)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,r=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,r=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>r||((s>n||isNaN(n))&&(n=s),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,yr)!==null}intersectTriangle(e,t,n,r,s){bd.subVectors(t,e),Wc.subVectors(n,e),Sd.crossVectors(bd,Wc);let o=this.direction.dot(Sd),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Zr.subVectors(this.origin,e);const l=a*this.direction.dot(Wc.crossVectors(Zr,Wc));if(l<0)return null;const c=a*this.direction.dot(bd.cross(Zr));if(c<0||l+c>o)return null;const u=-a*Zr.dot(Sd);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ft{constructor(e,t,n,r,s,o,a,l,c,u,h,d,f,p,_,g){ft.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,a,l,c,u,h,d,f,p,_,g)}set(e,t,n,r,s,o,a,l,c,u,h,d,f,p,_,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=s,m[5]=o,m[9]=a,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ft().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/yo.setFromMatrixColumn(e,0).length(),s=1/yo.setFromMatrixColumn(e,1).length(),o=1/yo.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=f+p*c,t[5]=d-_*c,t[9]=-a*l,t[2]=_-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,f=l*h,p=c*u,_=c*h;t[0]=d+_*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-p,t[6]=_+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,f=l*h,p=c*u,_=c*h;t[0]=d-_*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=l*u,t[4]=p*c-f,t[8]=d*c+_,t[1]=l*h,t[5]=_*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,_=a*c;t[0]=l*u,t[4]=_-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=f*h+p,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,_=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(uM,e,hM)}lookAt(e,t,n){const r=this.elements;return di.subVectors(e,t),di.lengthSq()===0&&(di.z=1),di.normalize(),Qr.crossVectors(n,di),Qr.lengthSq()===0&&(Math.abs(n.z)===1?di.x+=1e-4:di.z+=1e-4,di.normalize(),Qr.crossVectors(n,di)),Qr.normalize(),$c.crossVectors(di,Qr),r[0]=Qr.x,r[4]=$c.x,r[8]=di.x,r[1]=Qr.y,r[5]=$c.y,r[9]=di.y,r[2]=Qr.z,r[6]=$c.z,r[10]=di.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],_=n[6],g=n[10],m=n[14],v=n[3],x=n[7],y=n[11],T=n[15],b=r[0],M=r[4],w=r[8],E=r[12],S=r[1],C=r[5],I=r[9],k=r[13],D=r[2],L=r[6],B=r[10],te=r[14],q=r[3],fe=r[7],Y=r[11],ne=r[15];return s[0]=o*b+a*S+l*D+c*q,s[4]=o*M+a*C+l*L+c*fe,s[8]=o*w+a*I+l*B+c*Y,s[12]=o*E+a*k+l*te+c*ne,s[1]=u*b+h*S+d*D+f*q,s[5]=u*M+h*C+d*L+f*fe,s[9]=u*w+h*I+d*B+f*Y,s[13]=u*E+h*k+d*te+f*ne,s[2]=p*b+_*S+g*D+m*q,s[6]=p*M+_*C+g*L+m*fe,s[10]=p*w+_*I+g*B+m*Y,s[14]=p*E+_*k+g*te+m*ne,s[3]=v*b+x*S+y*D+T*q,s[7]=v*M+x*C+y*L+T*fe,s[11]=v*w+x*I+y*B+T*Y,s[15]=v*E+x*k+y*te+T*ne,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],_=e[7],g=e[11],m=e[15];return p*(+s*l*h-r*c*h-s*a*d+n*c*d+r*a*f-n*l*f)+_*(+t*l*f-t*c*d+s*o*d-r*o*f+r*c*u-s*l*u)+g*(+t*c*h-t*a*f-s*o*h+n*o*f+s*a*u-n*c*u)+m*(-r*a*u-t*l*h+t*a*d+r*o*h-n*o*d+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],_=e[13],g=e[14],m=e[15],v=h*g*c-_*d*c+_*l*f-a*g*f-h*l*m+a*d*m,x=p*d*c-u*g*c-p*l*f+o*g*f+u*l*m-o*d*m,y=u*_*c-p*h*c+p*a*f-o*_*f-u*a*m+o*h*m,T=p*h*l-u*_*l-p*a*d+o*_*d+u*a*g-o*h*g,b=t*v+n*x+r*y+s*T;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;return e[0]=v*M,e[1]=(_*d*s-h*g*s-_*r*f+n*g*f+h*r*m-n*d*m)*M,e[2]=(a*g*s-_*l*s+_*r*c-n*g*c-a*r*m+n*l*m)*M,e[3]=(h*l*s-a*d*s-h*r*c+n*d*c+a*r*f-n*l*f)*M,e[4]=x*M,e[5]=(u*g*s-p*d*s+p*r*f-t*g*f-u*r*m+t*d*m)*M,e[6]=(p*l*s-o*g*s-p*r*c+t*g*c+o*r*m-t*l*m)*M,e[7]=(o*d*s-u*l*s+u*r*c-t*d*c-o*r*f+t*l*f)*M,e[8]=y*M,e[9]=(p*h*s-u*_*s-p*n*f+t*_*f+u*n*m-t*h*m)*M,e[10]=(o*_*s-p*a*s+p*n*c-t*_*c-o*n*m+t*a*m)*M,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*f-t*a*f)*M,e[12]=T*M,e[13]=(u*_*r-p*h*r+p*n*d-t*_*d-u*n*g+t*h*g)*M,e[14]=(p*a*r-o*_*r-p*n*l+t*_*l+o*n*g-t*a*g)*M,e[15]=(o*h*r-u*a*r+u*n*l-t*h*l-o*n*d+t*a*d)*M,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,p=s*h,_=o*u,g=o*h,m=a*h,v=l*c,x=l*u,y=l*h,T=n.x,b=n.y,M=n.z;return r[0]=(1-(_+m))*T,r[1]=(f+y)*T,r[2]=(p-x)*T,r[3]=0,r[4]=(f-y)*b,r[5]=(1-(d+m))*b,r[6]=(g+v)*b,r[7]=0,r[8]=(p+x)*M,r[9]=(g-v)*M,r[10]=(1-(d+_))*M,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=yo.set(r[0],r[1],r[2]).length();const o=yo.set(r[4],r[5],r[6]).length(),a=yo.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],zi.copy(this);const c=1/s,u=1/o,h=1/a;return zi.elements[0]*=c,zi.elements[1]*=c,zi.elements[2]*=c,zi.elements[4]*=u,zi.elements[5]*=u,zi.elements[6]*=u,zi.elements[8]*=h,zi.elements[9]*=h,zi.elements[10]*=h,t.setFromRotationMatrix(zi),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o,a=ei){const l=this.elements,c=2*s/(t-e),u=2*s/(n-r),h=(t+e)/(t-e),d=(n+r)/(n-r);let f,p;if(a===ei)f=-(o+s)/(o-s),p=-2*o*s/(o-s);else if(a===gs)f=-o/(o-s),p=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,r,s,o,a=ei){const l=this.elements,c=1/(t-e),u=1/(n-r),h=1/(o-s),d=(t+e)*c,f=(n+r)*u;let p,_;if(a===ei)p=(o+s)*h,_=-2*h;else if(a===gs)p=s*h,_=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=_,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const yo=new N,zi=new ft,uM=new N(0,0,0),hM=new N(1,1,1),Qr=new N,$c=new N,di=new N,Bg=new ft,Og=new Ji;class ai{constructor(e=0,t=0,n=0,r=ai.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],d=r[6],f=r[10];switch(t){case"XYZ":this._y=Math.asin(it(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-it(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(it(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-it(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(it(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-it(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Bg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Bg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Og.setFromEuler(this),this.setFromQuaternion(Og,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ai.DEFAULT_ORDER="XYZ";class mm{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let dM=0;const kg=new N,xo=new Ji,xr=new ft,qc=new N,Ha=new N,fM=new N,pM=new Ji,Gg=new N(1,0,0),zg=new N(0,1,0),Vg=new N(0,0,1),Hg={type:"added"},mM={type:"removed"},bo={type:"childadded",child:null},Td={type:"childremoved",child:null};class nn extends Wr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:dM++}),this.uuid=Fr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=nn.DEFAULT_UP.clone();const e=new N,t=new ai,n=new Ji,r=new N(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ft},normalMatrix:{value:new Xe}}),this.matrix=new ft,this.matrixWorld=new ft,this.matrixAutoUpdate=nn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=nn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new mm,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return xo.setFromAxisAngle(e,t),this.quaternion.multiply(xo),this}rotateOnWorldAxis(e,t){return xo.setFromAxisAngle(e,t),this.quaternion.premultiply(xo),this}rotateX(e){return this.rotateOnAxis(Gg,e)}rotateY(e){return this.rotateOnAxis(zg,e)}rotateZ(e){return this.rotateOnAxis(Vg,e)}translateOnAxis(e,t){return kg.copy(e).applyQuaternion(this.quaternion),this.position.add(kg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Gg,e)}translateY(e){return this.translateOnAxis(zg,e)}translateZ(e){return this.translateOnAxis(Vg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(xr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?qc.copy(e):qc.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Ha.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?xr.lookAt(Ha,qc,this.up):xr.lookAt(qc,Ha,this.up),this.quaternion.setFromRotationMatrix(xr),r&&(xr.extractRotation(r.matrixWorld),xo.setFromRotationMatrix(xr),this.quaternion.premultiply(xo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Hg),bo.child=e,this.dispatchEvent(bo),bo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(mM),Td.child=e,this.dispatchEvent(Td),Td.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),xr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),xr.multiply(e.parent.matrixWorld)),e.applyMatrix4(xr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Hg),bo.child=e,this.dispatchEvent(bo),bo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ha,e,fM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ha,pM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}nn.DEFAULT_UP=new N(0,1,0);nn.DEFAULT_MATRIX_AUTO_UPDATE=!0;nn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Vi=new N,br=new N,Md=new N,Sr=new N,So=new N,To=new N,Wg=new N,Ed=new N,wd=new N,Ad=new N,Rd=new We,Cd=new We,Nd=new We;class Ci{constructor(e=new N,t=new N,n=new N){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Vi.subVectors(e,t),r.cross(Vi);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){Vi.subVectors(r,t),br.subVectors(n,t),Md.subVectors(e,t);const o=Vi.dot(Vi),a=Vi.dot(br),l=Vi.dot(Md),c=br.dot(br),u=br.dot(Md),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Sr)===null?!1:Sr.x>=0&&Sr.y>=0&&Sr.x+Sr.y<=1}static getInterpolation(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,Sr)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Sr.x),l.addScaledVector(o,Sr.y),l.addScaledVector(a,Sr.z),l)}static getInterpolatedAttribute(e,t,n,r,s,o){return Rd.setScalar(0),Cd.setScalar(0),Nd.setScalar(0),Rd.fromBufferAttribute(e,t),Cd.fromBufferAttribute(e,n),Nd.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(Rd,s.x),o.addScaledVector(Cd,s.y),o.addScaledVector(Nd,s.z),o}static isFrontFacing(e,t,n,r){return Vi.subVectors(n,t),br.subVectors(e,t),Vi.cross(br).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Vi.subVectors(this.c,this.b),br.subVectors(this.a,this.b),Vi.cross(br).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ci.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ci.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return Ci.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return Ci.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ci.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;So.subVectors(r,n),To.subVectors(s,n),Ed.subVectors(e,n);const l=So.dot(Ed),c=To.dot(Ed);if(l<=0&&c<=0)return t.copy(n);wd.subVectors(e,r);const u=So.dot(wd),h=To.dot(wd);if(u>=0&&h<=u)return t.copy(r);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(So,o);Ad.subVectors(e,s);const f=So.dot(Ad),p=To.dot(Ad);if(p>=0&&f<=p)return t.copy(s);const _=f*c-l*p;if(_<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(To,a);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return Wg.subVectors(s,r),a=(h-u)/(h-u+(f-p)),t.copy(r).addScaledVector(Wg,a);const m=1/(g+_+d);return o=_*m,a=d*m,t.copy(n).addScaledVector(So,o).addScaledVector(To,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const _0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Jr={h:0,s:0,l:0},jc={h:0,s:0,l:0};function Pd(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ie){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,lt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=lt.workingColorSpace){return this.r=e,this.g=t,this.b=n,lt.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=lt.workingColorSpace){if(e=hm(e,1),t=it(t,0,1),n=it(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Pd(o,s,e+1/3),this.g=Pd(o,s,e),this.b=Pd(o,s,e-1/3)}return lt.toWorkingColorSpace(this,r),this}setStyle(e,t=Ie){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Ie){const n=_0[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Br(e.r),this.g=Br(e.g),this.b=Br(e.b),this}copyLinearToSRGB(e){return this.r=Ko(e.r),this.g=Ko(e.g),this.b=Ko(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ie){return lt.fromWorkingColorSpace(Dn.copy(this),e),Math.round(it(Dn.r*255,0,255))*65536+Math.round(it(Dn.g*255,0,255))*256+Math.round(it(Dn.b*255,0,255))}getHexString(e=Ie){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=lt.workingColorSpace){lt.fromWorkingColorSpace(Dn.copy(this),t);const n=Dn.r,r=Dn.g,s=Dn.b,o=Math.max(n,r,s),a=Math.min(n,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-n)/h+2;break;case s:l=(n-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=lt.workingColorSpace){return lt.fromWorkingColorSpace(Dn.copy(this),t),e.r=Dn.r,e.g=Dn.g,e.b=Dn.b,e}getStyle(e=Ie){lt.fromWorkingColorSpace(Dn.copy(this),e);const t=Dn.r,n=Dn.g,r=Dn.b;return e!==Ie?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(Jr),this.setHSL(Jr.h+e,Jr.s+t,Jr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Jr),e.getHSL(jc);const n=El(Jr.h,jc.h,t),r=El(Jr.s,jc.s,t),s=El(Jr.l,jc.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Dn=new Le;Le.NAMES=_0;let gM=0;class Bn extends Wr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:gM++}),this.uuid=Fr(),this.name="",this.type="Material",this.blending=Pi,this.side=ri,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ul,this.blendDst=Fl,this.blendEquation=In,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Le(0,0,0),this.blendAlpha=0,this.depthFunc=fs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=np,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Fs,this.stencilZFail=Fs,this.stencilZPass=Fs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Pi&&(n.blending=this.blending),this.side!==ri&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Ul&&(n.blendSrc=this.blendSrc),this.blendDst!==Fl&&(n.blendDst=this.blendDst),this.blendEquation!==In&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==fs&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==np&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Fs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Fs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Fs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class or extends Bn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ai,this.combine=fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Rr=_M();function _M(){const i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,r[l]=24,r[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,r[l]=-c-1,r[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,r[l]=13,r[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,r[l]=24,r[l|256]=24):(n[l]=31744,n[l|256]=64512,r[l]=13,r[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;!(c&8388608);)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:o,offsetTable:a}}function fi(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=it(i,-65504,65504),Rr.floatView[0]=i;const e=Rr.uint32View[0],t=e>>23&511;return Rr.baseTable[t]+((e&8388607)>>Rr.shiftTable[t])}function Xc(i){const e=i>>10;return Rr.uint32View[0]=Rr.mantissaTable[Rr.offsetTable[e]+(i&1023)]+Rr.exponentTable[e],Rr.floatView[0]}const ln=new N,Yc=new ae;let vM=0;class Rn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:vM++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=eh,this.updateRanges=[],this.gpuType=Jt,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Yc.fromBufferAttribute(this,t),Yc.applyMatrix3(e),this.setXY(t,Yc.x,Yc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.applyMatrix3(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.applyMatrix4(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.applyNormalMatrix(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.transformDirection(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=nt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array),s=nt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==eh&&(e.usage=this.usage),e}}class gm extends Rn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class _m extends Rn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class v0 extends Rn{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Xc(this.array[e*this.itemSize]);return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=fi(t),this}getY(e){let t=Xc(this.array[e*this.itemSize+1]);return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=fi(t),this}getZ(e){let t=Xc(this.array[e*this.itemSize+2]);return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=fi(t),this}getW(e){let t=Xc(this.array[e*this.itemSize+3]);return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=fi(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array)),this.array[e+0]=fi(t),this.array[e+1]=fi(n),this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array)),this.array[e+0]=fi(t),this.array[e+1]=fi(n),this.array[e+2]=fi(r),this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array),s=nt(s,this.array)),this.array[e+0]=fi(t),this.array[e+1]=fi(n),this.array[e+2]=fi(r),this.array[e+3]=fi(s),this}}class rn extends Rn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let yM=0;const wi=new ft,Dd=new nn,Mo=new N,pi=new lo,Wa=new lo,xn=new N;class On extends Wr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:yM++}),this.uuid=Fr(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(dm(e)?_m:gm)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Xe().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return wi.makeRotationFromQuaternion(e),this.applyMatrix4(wi),this}rotateX(e){return wi.makeRotationX(e),this.applyMatrix4(wi),this}rotateY(e){return wi.makeRotationY(e),this.applyMatrix4(wi),this}rotateZ(e){return wi.makeRotationZ(e),this.applyMatrix4(wi),this}translate(e,t,n){return wi.makeTranslation(e,t,n),this.applyMatrix4(wi),this}scale(e,t,n){return wi.makeScale(e,t,n),this.applyMatrix4(wi),this}lookAt(e){return Dd.lookAt(e),Dd.updateMatrix(),this.applyMatrix4(Dd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mo).negate(),this.translate(Mo.x,Mo.y,Mo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let r=0,s=e.length;r<s;r++){const o=e[r];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new rn(n,3))}else{const n=Math.min(e.length,t.count);for(let r=0;r<n;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new lo);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];pi.setFromBufferAttribute(s),this.morphTargetsRelative?(xn.addVectors(this.boundingBox.min,pi.min),this.boundingBox.expandByPoint(xn),xn.addVectors(this.boundingBox.max,pi.max),this.boundingBox.expandByPoint(xn)):(this.boundingBox.expandByPoint(pi.min),this.boundingBox.expandByPoint(pi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gc);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new N,1/0);return}if(e){const n=this.boundingSphere.center;if(pi.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Wa.setFromBufferAttribute(a),this.morphTargetsRelative?(xn.addVectors(pi.min,Wa.min),pi.expandByPoint(xn),xn.addVectors(pi.max,Wa.max),pi.expandByPoint(xn)):(pi.expandByPoint(Wa.min),pi.expandByPoint(Wa.max))}pi.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)xn.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(xn));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)xn.fromBufferAttribute(a,c),l&&(Mo.fromBufferAttribute(e,c),xn.add(Mo)),r=Math.max(r,n.distanceToSquared(xn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rn(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let w=0;w<n.count;w++)a[w]=new N,l[w]=new N;const c=new N,u=new N,h=new N,d=new ae,f=new ae,p=new ae,_=new N,g=new N;function m(w,E,S){c.fromBufferAttribute(n,w),u.fromBufferAttribute(n,E),h.fromBufferAttribute(n,S),d.fromBufferAttribute(s,w),f.fromBufferAttribute(s,E),p.fromBufferAttribute(s,S),u.sub(c),h.sub(c),f.sub(d),p.sub(d);const C=1/(f.x*p.y-p.x*f.y);isFinite(C)&&(_.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(C),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(C),a[w].add(_),a[E].add(_),a[S].add(_),l[w].add(g),l[E].add(g),l[S].add(g))}let v=this.groups;v.length===0&&(v=[{start:0,count:e.count}]);for(let w=0,E=v.length;w<E;++w){const S=v[w],C=S.start,I=S.count;for(let k=C,D=C+I;k<D;k+=3)m(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const x=new N,y=new N,T=new N,b=new N;function M(w){T.fromBufferAttribute(r,w),b.copy(T);const E=a[w];x.copy(E),x.sub(T.multiplyScalar(T.dot(E))).normalize(),y.crossVectors(b,E);const C=y.dot(l[w])<0?-1:1;o.setXYZW(w,x.x,x.y,x.z,C)}for(let w=0,E=v.length;w<E;++w){const S=v[w],C=S.start,I=S.count;for(let k=C,D=C+I;k<D;k+=3)M(e.getX(k+0)),M(e.getX(k+1)),M(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Rn(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const r=new N,s=new N,o=new N,a=new N,l=new N,c=new N,u=new N,h=new N;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,_),c.fromBufferAttribute(n,g),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(_,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)r.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)xn.fromBufferAttribute(e,t),xn.normalize(),e.setXYZ(t,xn.x,xn.y,xn.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let _=0,g=l.length;_<g;_++){a.isInterleavedBufferAttribute?f=l[_]*a.data.stride+a.offset:f=l[_]*u;for(let m=0;m<u;m++)d[p++]=c[f++]}return new Rn(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new On,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=e(d,n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const $g=new ft,Cs=new Rh,Kc=new gc,qg=new N,Zc=new N,Qc=new N,Jc=new N,Ld=new N,eu=new N,jg=new N,tu=new N;class tn extends nn{constructor(e=new On,t=new or){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){eu.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(Ld.fromBufferAttribute(h,e),o?eu.addScaledVector(Ld,u):eu.addScaledVector(Ld.sub(t),u))}t.add(eu)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Kc.copy(n.boundingSphere),Kc.applyMatrix4(s),Cs.copy(e.ray).recast(e.near),!(Kc.containsPoint(Cs.origin)===!1&&(Cs.intersectSphere(Kc,qg)===null||Cs.origin.distanceToSquared(qg)>(e.far-e.near)**2))&&($g.copy(s).invert(),Cs.copy(e.ray).applyMatrix4($g),!(n.boundingBox!==null&&Cs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Cs)))}_computeIntersections(e,t,n){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],v=Math.max(g.start,f.start),x=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let y=v,T=x;y<T;y+=3){const b=a.getX(y),M=a.getX(y+1),w=a.getX(y+2);r=nu(this,m,e,n,c,u,h,b,M,w),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=g.materialIndex,t.push(r))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const v=a.getX(g),x=a.getX(g+1),y=a.getX(g+2);r=nu(this,o,e,n,c,u,h,v,x,y),r&&(r.faceIndex=Math.floor(g/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],v=Math.max(g.start,f.start),x=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let y=v,T=x;y<T;y+=3){const b=y,M=y+1,w=y+2;r=nu(this,m,e,n,c,u,h,b,M,w),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=g.materialIndex,t.push(r))}}else{const p=Math.max(0,f.start),_=Math.min(l.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const v=g,x=g+1,y=g+2;r=nu(this,o,e,n,c,u,h,v,x,y),r&&(r.faceIndex=Math.floor(g/3),t.push(r))}}}}function xM(i,e,t,n,r,s,o,a){let l;if(e.side===It?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side===ri,a),l===null)return null;tu.copy(a),tu.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(tu);return c<t.near||c>t.far?null:{distance:c,point:tu.clone(),object:i}}function nu(i,e,t,n,r,s,o,a,l,c){i.getVertexPosition(a,Zc),i.getVertexPosition(l,Qc),i.getVertexPosition(c,Jc);const u=xM(i,e,t,n,Zc,Qc,Jc,jg);if(u){const h=new N;Ci.getBarycoord(jg,Zc,Qc,Jc,h),r&&(u.uv=Ci.getInterpolatedAttribute(r,a,l,c,h,new ae)),s&&(u.uv1=Ci.getInterpolatedAttribute(s,a,l,c,h,new ae)),o&&(u.normal=Ci.getInterpolatedAttribute(o,a,l,c,h,new N),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new N,materialIndex:0};Ci.getNormal(Zc,Qc,Jc,d.normal),u.face=d,u.barycoord=h}return u}class co extends On{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,r,o,2),p("x","z","y",1,-1,e,n,-t,r,o,3),p("x","y","z",1,-1,e,t,n,r,s,4),p("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new rn(c,3)),this.setAttribute("normal",new rn(u,3)),this.setAttribute("uv",new rn(h,2));function p(_,g,m,v,x,y,T,b,M,w,E){const S=y/M,C=T/w,I=y/2,k=T/2,D=b/2,L=M+1,B=w+1;let te=0,q=0;const fe=new N;for(let Y=0;Y<B;Y++){const ne=Y*C-k;for(let ve=0;ve<L;ve++){const Be=ve*S-I;fe[_]=Be*v,fe[g]=ne*x,fe[m]=D,c.push(fe.x,fe.y,fe.z),fe[_]=0,fe[g]=0,fe[m]=b>0?1:-1,u.push(fe.x,fe.y,fe.z),h.push(ve/M),h.push(1-Y/w),te+=1}}for(let Y=0;Y<w;Y++)for(let ne=0;ne<M;ne++){const ve=d+ne+L*Y,Be=d+ne+L*(Y+1),O=d+(ne+1)+L*(Y+1),$=d+(ne+1)+L*Y;l.push(ve,Be,$),l.push(Be,O,$),q+=6}a.addGroup(f,q,E),f+=q,d+=te}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new co(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function xa(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function zn(i){const e={};for(let t=0;t<i.length;t++){const n=xa(i[t]);for(const r in n)e[r]=n[r]}return e}function bM(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function y0(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:lt.workingColorSpace}const x0={clone:xa,merge:zn};var SM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,TM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class dr extends Bn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=SM,this.fragmentShader=TM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=xa(e.uniforms),this.uniformsGroups=bM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class vm extends nn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ft,this.projectionMatrix=new ft,this.projectionMatrixInverse=new ft,this.coordinateSystem=ei}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const es=new N,Xg=new ae,Yg=new ae;class Tn extends vm{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ro*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ml*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ro*2*Math.atan(Math.tan(Ml*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){es.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(es.x,es.y).multiplyScalar(-e/es.z),es.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(es.x,es.y).multiplyScalar(-e/es.z)}getViewSize(e,t){return this.getViewBounds(e,Xg,Yg),t.subVectors(Yg,Xg)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ml*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Eo=-90,wo=1;class b0 extends nn{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Tn(Eo,wo,e,t);r.layers=this.layers,this.add(r);const s=new Tn(Eo,wo,e,t);s.layers=this.layers,this.add(s);const o=new Tn(Eo,wo,e,t);o.layers=this.layers,this.add(o);const a=new Tn(Eo,wo,e,t);a.layers=this.layers,this.add(a);const l=new Tn(Eo,wo,e,t);l.layers=this.layers,this.add(l);const c=new Tn(Eo,wo,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===ei)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===gs)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,o),e.setRenderTarget(n,2,r),e.render(t,a),e.setRenderTarget(n,3,r),e.render(t,l),e.setRenderTarget(n,4,r),e.render(t,c),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,r),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Ch extends dn{constructor(e=[],t=Ii,n,r,s,o,a,l,c,u){super(e,t,n,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class S0 extends _s{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new Ch(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:en}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new co(5,5,5),s=new dr({name:"CubemapFromEquirect",uniforms:xa(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:It,blending:si});s.uniforms.tEquirect.value=t;const o=new tn(r,s),a=t.minFilter;return t.minFilter===Jn&&(t.minFilter=en),new b0(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,r=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}let js=class extends nn{constructor(){super(),this.isGroup=!0,this.type="Group"}};const MM={type:"move"};class Gu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new js,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new js,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new js,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const _ of e.hand.values()){const g=t.getJointPose(_,n),m=this._getHandJoint(c,_);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(MM)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new js;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Nh extends nn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ai,this.environmentIntensity=1,this.environmentRotation=new ai,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class ym{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=eh,this.updateRanges=[],this.version=0,this.uuid=Fr()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Fr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Fr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Gn=new N;class Jl{constructor(e,t,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.applyMatrix4(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.applyNormalMatrix(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.transformDirection(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=nt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Hn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Hn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Hn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Hn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),n=nt(n,this.array),r=nt(r,this.array),s=nt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new Rn(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Jl(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ph extends Bn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ao;const $a=new N,Ro=new N,Co=new N,No=new ae,qa=new ae,T0=new ft,iu=new N,ja=new N,ru=new N,Kg=new ae,Id=new ae,Zg=new ae;class M0 extends nn{constructor(e=new Ph){if(super(),this.isSprite=!0,this.type="Sprite",Ao===void 0){Ao=new On;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new ym(t,5);Ao.setIndex([0,1,2,0,2,3]),Ao.setAttribute("position",new Jl(n,3,0,!1)),Ao.setAttribute("uv",new Jl(n,2,3,!1))}this.geometry=Ao,this.material=e,this.center=new ae(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ro.setFromMatrixScale(this.matrixWorld),T0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Co.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ro.multiplyScalar(-Co.z);const n=this.material.rotation;let r,s;n!==0&&(s=Math.cos(n),r=Math.sin(n));const o=this.center;su(iu.set(-.5,-.5,0),Co,o,Ro,r,s),su(ja.set(.5,-.5,0),Co,o,Ro,r,s),su(ru.set(.5,.5,0),Co,o,Ro,r,s),Kg.set(0,0),Id.set(1,0),Zg.set(1,1);let a=e.ray.intersectTriangle(iu,ja,ru,!1,$a);if(a===null&&(su(ja.set(-.5,.5,0),Co,o,Ro,r,s),Id.set(0,1),a=e.ray.intersectTriangle(iu,ru,ja,!1,$a),a===null))return;const l=e.ray.origin.distanceTo($a);l<e.near||l>e.far||t.push({distance:l,point:$a.clone(),uv:Ci.getInterpolation($a,iu,ja,ru,Kg,Id,Zg,new ae),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function su(i,e,t,n,r,s){No.subVectors(i,t).addScalar(.5).multiply(n),r!==void 0?(qa.x=s*No.x-r*No.y,qa.y=r*No.x+s*No.y):qa.copy(No),i.copy(e),i.x+=qa.x,i.y+=qa.y,i.applyMatrix4(T0)}class EM extends dn{constructor(e=null,t=1,n=1,r,s,o,a,l,c=Bt,u=Bt,h,d){super(null,o,a,l,c,u,r,s,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class wM extends Rn{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ud=new N,AM=new N,RM=new Xe;class ji{constructor(e=new N(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=Ud.subVectors(n,t).cross(AM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Ud),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||RM.getNormalMatrix(e),r=this.coplanarPoint(Ud).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ns=new gc,ou=new N;class Dh{constructor(e=new ji,t=new ji,n=new ji,r=new ji,s=new ji,o=new ji){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ei){const n=this.planes,r=e.elements,s=r[0],o=r[1],a=r[2],l=r[3],c=r[4],u=r[5],h=r[6],d=r[7],f=r[8],p=r[9],_=r[10],g=r[11],m=r[12],v=r[13],x=r[14],y=r[15];if(n[0].setComponents(l-s,d-c,g-f,y-m).normalize(),n[1].setComponents(l+s,d+c,g+f,y+m).normalize(),n[2].setComponents(l+o,d+u,g+p,y+v).normalize(),n[3].setComponents(l-o,d-u,g-p,y-v).normalize(),n[4].setComponents(l-a,d-h,g-_,y-x).normalize(),t===ei)n[5].setComponents(l+a,d+h,g+_,y+x).normalize();else if(t===gs)n[5].setComponents(a,h,_,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ns.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ns.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ns)}intersectsSprite(e){return Ns.center.set(0,0,0),Ns.radius=.7071067811865476,Ns.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ns)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(ou.x=r.normal.x>0?e.max.x:e.min.x,ou.y=r.normal.y>0?e.max.y:e.min.y,ou.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(ou)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Lh extends Bn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const nh=new N,ih=new N,Qg=new ft,Xa=new Rh,au=new gc,Fd=new N,Jg=new N;class CM extends nn{constructor(e=new On,t=new Lh){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)nh.fromBufferAttribute(t,r-1),ih.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=nh.distanceTo(ih);e.setAttribute("lineDistance",new rn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),au.copy(n.boundingSphere),au.applyMatrix4(r),au.radius+=s,e.ray.intersectsSphere(au)===!1)return;Qg.copy(r).invert(),Xa.copy(e.ray).applyMatrix4(Qg);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,u=n.index,d=n.attributes.position;if(u!==null){const f=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=c){const m=u.getX(_),v=u.getX(_+1),x=lu(this,e,Xa,l,m,v,_);x&&t.push(x)}if(this.isLineLoop){const _=u.getX(p-1),g=u.getX(f),m=lu(this,e,Xa,l,_,g,p-1);m&&t.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=c){const m=lu(this,e,Xa,l,_,_+1,_);m&&t.push(m)}if(this.isLineLoop){const _=lu(this,e,Xa,l,p-1,f,p-1);_&&t.push(_)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function lu(i,e,t,n,r,s,o){const a=i.geometry.attributes.position;if(nh.fromBufferAttribute(a,r),ih.fromBufferAttribute(a,s),t.distanceSqToSegment(nh,ih,Fd,Jg)>n)return;Fd.applyMatrix4(i.matrixWorld);const c=e.ray.origin.distanceTo(Fd);if(!(c<e.near||c>e.far))return{distance:c,point:Jg.clone().applyMatrix4(i.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:i}}class NM extends Bn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class PM extends dn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Bt,this.minFilter=Bt,this.generateMipmaps=!1,this.needsUpdate=!0}}class DM extends dn{constructor(e,t,n,r,s,o,a,l,c){super(e,t,n,r,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Di extends dn{constructor(e,t,n=Lt,r,s,o,a=Bt,l=Bt,c,u=bi){if(u!==bi&&u!==Si)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new fm(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class $r{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let r=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=n[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,n[r]===o)return r/(s-1);const u=n[r],d=n[r+1]-u,f=(o-u)/d;return(r+f)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new ae:new N);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new N,r=[],s=[],o=[],a=new N,l=new ft;for(let f=0;f<=e;f++){const p=f/e;r[f]=this.getTangentAt(p,new N)}s[0]=new N,o[0]=new N;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),d=Math.abs(r[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(r[f-1],r[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(it(r[f-1].dot(r[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(r[f],s[f])}if(t===!0){let f=Math.acos(it(s[0].dot(s[e]),-1,1));f/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],f*p)),o[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class E0 extends $r{constructor(e=0,t=0,n=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new ae){const n=t,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class LM extends E0{constructor(e,t,n,r,s,o){super(e,t,n,n,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function xm(){let i=0,e=0,t=0,n=0;function r(s,o,a,l){i=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let d=(o-s)/c-(a-s)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,r(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return i+e*s+t*o+n*a}}}const cu=new N,Bd=new xm,Od=new xm,kd=new xm;class IM extends $r{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new N){const n=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(cu.subVectors(r[0],r[1]).add(r[0]),c=cu);const h=r[a%s],d=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(cu.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=cu),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),_=Math.pow(h.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(u),f);_<1e-4&&(_=1),p<1e-4&&(p=_),g<1e-4&&(g=_),Bd.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,_,g),Od.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,_,g),kd.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,_,g)}else this.curveType==="catmullrom"&&(Bd.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),Od.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),kd.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(Bd.calc(l),Od.calc(l),kd.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new N().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function e_(i,e,t,n,r){const s=(n-e)*.5,o=(r-t)*.5,a=i*i,l=i*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*i+t}function UM(i,e){const t=1-i;return t*t*e}function FM(i,e){return 2*(1-i)*i*e}function BM(i,e){return i*i*e}function wl(i,e,t,n){return UM(i,e)+FM(i,t)+BM(i,n)}function OM(i,e){const t=1-i;return t*t*t*e}function kM(i,e){const t=1-i;return 3*t*t*i*e}function GM(i,e){return 3*(1-i)*i*i*e}function zM(i,e){return i*i*i*e}function Al(i,e,t,n,r){return OM(i,e)+kM(i,t)+GM(i,n)+zM(i,r)}class VM extends $r{constructor(e=new ae,t=new ae,n=new ae,r=new ae){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new ae){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Al(e,r.x,s.x,o.x,a.x),Al(e,r.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class w0 extends $r{constructor(e=new N,t=new N,n=new N,r=new N){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new N){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Al(e,r.x,s.x,o.x,a.x),Al(e,r.y,s.y,o.y,a.y),Al(e,r.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class HM extends $r{constructor(e=new ae,t=new ae){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ae){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ae){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class WM extends $r{constructor(e=new N,t=new N){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new N){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $M extends $r{constructor(e=new ae,t=new ae,n=new ae){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ae){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(wl(e,r.x,s.x,o.x),wl(e,r.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class bm extends $r{constructor(e=new N,t=new N,n=new N){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new N){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(wl(e,r.x,s.x,o.x),wl(e,r.y,s.y,o.y),wl(e,r.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qM extends $r{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ae){const n=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return n.set(e_(a,l.x,c.x,u.x,h.x),e_(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new ae().fromArray(r))}return this}}var jM=Object.freeze({__proto__:null,ArcCurve:LM,CatmullRomCurve3:IM,CubicBezierCurve:VM,CubicBezierCurve3:w0,EllipseCurve:E0,LineCurve:HM,LineCurve3:WM,QuadraticBezierCurve:$M,QuadraticBezierCurve3:bm,SplineCurve:qM});class _c extends On{constructor(e=1,t=1,n=1,r=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],d=[],f=[];let p=0;const _=[],g=n/2;let m=0;v(),o===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new rn(h,3)),this.setAttribute("normal",new rn(d,3)),this.setAttribute("uv",new rn(f,2));function v(){const y=new N,T=new N;let b=0;const M=(t-e)/n;for(let w=0;w<=s;w++){const E=[],S=w/s,C=S*(t-e)+e;for(let I=0;I<=r;I++){const k=I/r,D=k*l+a,L=Math.sin(D),B=Math.cos(D);T.x=C*L,T.y=-S*n+g,T.z=C*B,h.push(T.x,T.y,T.z),y.set(L,M,B).normalize(),d.push(y.x,y.y,y.z),f.push(k,1-S),E.push(p++)}_.push(E)}for(let w=0;w<r;w++)for(let E=0;E<s;E++){const S=_[E][w],C=_[E+1][w],I=_[E+1][w+1],k=_[E][w+1];(e>0||E!==0)&&(u.push(S,C,k),b+=3),(t>0||E!==s-1)&&(u.push(C,I,k),b+=3)}c.addGroup(m,b,0),m+=b}function x(y){const T=p,b=new ae,M=new N;let w=0;const E=y===!0?e:t,S=y===!0?1:-1;for(let I=1;I<=r;I++)h.push(0,g*S,0),d.push(0,S,0),f.push(.5,.5),p++;const C=p;for(let I=0;I<=r;I++){const D=I/r*l+a,L=Math.cos(D),B=Math.sin(D);M.x=E*B,M.y=g*S,M.z=E*L,h.push(M.x,M.y,M.z),d.push(0,S,0),b.x=L*.5+.5,b.y=B*.5*S+.5,f.push(b.x,b.y),p++}for(let I=0;I<r;I++){const k=T+I,D=C+I;y===!0?u.push(D,D+1,k):u.push(D+1,D,k),w+=3}c.addGroup(m,w,y===!0?1:2),m+=w}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _c(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Sm extends _c{constructor(e=1,t=1,n=32,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Sm(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class vc extends On{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,h=e/a,d=t/l,f=[],p=[],_=[],g=[];for(let m=0;m<u;m++){const v=m*d-o;for(let x=0;x<c;x++){const y=x*h-s;p.push(y,-v,0),_.push(0,0,1),g.push(x/a),g.push(1-m/l)}}for(let m=0;m<l;m++)for(let v=0;v<a;v++){const x=v+c*m,y=v+c*(m+1),T=v+1+c*(m+1),b=v+1+c*m;f.push(x,y,b),f.push(y,T,b)}this.setIndex(f),this.setAttribute("position",new rn(p,3)),this.setAttribute("normal",new rn(_,3)),this.setAttribute("uv",new rn(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vc(e.width,e.height,e.widthSegments,e.heightSegments)}}class Da extends On{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new N,d=new N,f=[],p=[],_=[],g=[];for(let m=0;m<=n;m++){const v=[],x=m/n;let y=0;m===0&&o===0?y=.5/t:m===n&&l===Math.PI&&(y=-.5/t);for(let T=0;T<=t;T++){const b=T/t;h.x=-e*Math.cos(r+b*s)*Math.sin(o+x*a),h.y=e*Math.cos(o+x*a),h.z=e*Math.sin(r+b*s)*Math.sin(o+x*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),g.push(b+y,1-x),v.push(c++)}u.push(v)}for(let m=0;m<n;m++)for(let v=0;v<t;v++){const x=u[m][v+1],y=u[m][v],T=u[m+1][v],b=u[m+1][v+1];(m!==0||o>0)&&f.push(x,y,b),(m!==n-1||l<Math.PI)&&f.push(y,T,b)}this.setIndex(f),this.setAttribute("position",new rn(p,3)),this.setAttribute("normal",new rn(_,3)),this.setAttribute("uv",new rn(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Da(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Tm extends On{constructor(e=new bm(new N(-1,-1,0),new N(-1,1,0),new N(1,1,0)),t=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new N,l=new N,c=new ae;let u=new N;const h=[],d=[],f=[],p=[];_(),this.setIndex(p),this.setAttribute("position",new rn(h,3)),this.setAttribute("normal",new rn(d,3)),this.setAttribute("uv",new rn(f,2));function _(){for(let x=0;x<t;x++)g(x);g(s===!1?t:0),v(),m()}function g(x){u=e.getPointAt(x/t,u);const y=o.normals[x],T=o.binormals[x];for(let b=0;b<=r;b++){const M=b/r*Math.PI*2,w=Math.sin(M),E=-Math.cos(M);l.x=E*y.x+w*T.x,l.y=E*y.y+w*T.y,l.z=E*y.z+w*T.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function m(){for(let x=1;x<=t;x++)for(let y=1;y<=r;y++){const T=(r+1)*(x-1)+(y-1),b=(r+1)*x+(y-1),M=(r+1)*x+y,w=(r+1)*(x-1)+y;p.push(T,b,w),p.push(b,M,w)}}function v(){for(let x=0;x<=t;x++)for(let y=0;y<=r;y++)c.x=x/t,c.y=y/r,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Tm(new jM[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class XM extends Bn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class A0 extends Bn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ai,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class YM extends A0{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ae(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return it(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class KM extends Bn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ai,this.combine=fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ZM extends Bn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class QM extends Bn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Mm extends Bn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ai,this.combine=fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class JM extends Bn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=TT,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class eE extends Bn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class tE extends Bn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class nE extends Lh{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const t_={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class iE{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const f=c[h],p=c[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null}}}const rE=new iE;class Em{constructor(e){this.manager=e!==void 0?e:rE,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Em.DEFAULT_MATERIAL_NAME="__DEFAULT";class sE extends Em{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=t_.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Ql("img");function l(){u(),t_.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class R0 extends Em{constructor(e){super(e)}load(e,t,n,r){const s=new dn,o=new sE(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class uo extends nn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class oE extends uo{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(nn.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Gd=new ft,n_=new N,i_=new N;class wm{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ae(512,512),this.map=null,this.mapPass=null,this.matrix=new ft,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Dh,this._frameExtents=new ae(1,1),this._viewportCount=1,this._viewports=[new We(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;n_.setFromMatrixPosition(e.matrixWorld),t.position.copy(n_),i_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i_),t.updateMatrixWorld(),Gd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Gd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class aE extends wm{constructor(){super(new Tn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=ro*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class C0 extends uo{constructor(e,t,n=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(nn.DEFAULT_UP),this.updateMatrix(),this.target=new nn,this.distance=n,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new aE}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const r_=new ft,Ya=new N,zd=new N;class lE extends wm{constructor(){super(new Tn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ae(4,2),this._viewportCount=6,this._viewports=[new We(2,1,1,1),new We(0,1,1,1),new We(3,1,1,1),new We(1,1,1,1),new We(3,0,1,1),new We(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ya.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ya),zd.copy(n.position),zd.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(zd),n.updateMatrixWorld(),r.makeTranslation(-Ya.x,-Ya.y,-Ya.z),r_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r_)}}class cE extends uo{constructor(e,t,n=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new lE}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class yc extends vm{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class uE extends wm{constructor(){super(new yc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class N0 extends uo{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(nn.DEFAULT_UP),this.updateMatrix(),this.target=new nn,this.shadow=new uE}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class P0 extends uo{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class hE extends uo{constructor(e,t,n=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class dE{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new N)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const n=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-r*r)}}class fE extends uo{constructor(e=new dE,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class D0 extends Tn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class L0{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=s_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=s_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function s_(){return performance.now()}class pE extends ym{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const o_=new ft;class I0{constructor(e,t,n=0,r=1/0){this.ray=new Rh(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new mm,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return o_.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(o_),this}intersectObject(e,t=!0,n=[]){return ip(e,this,n,t),n.sort(a_),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)ip(e[r],this,n,t);return n.sort(a_),n}}function a_(i,e){return i.distance-e.distance}function ip(i,e,t,n){let r=!0;if(i.layers.test(e.layers)&&i.raycast(e,t)===!1&&(r=!1),r===!0&&n===!0){const s=i.children;for(let o=0,a=s.length;o<a;o++)ip(s[o],e,t,!0)}}class l_{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=it(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(it(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Ih{constructor(e,t,n,r){Ih.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,r)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,r){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=r,this}}class Uh extends Wr{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function c_(i,e,t,n){const r=mE(n);switch(t){case tm:return i*e;case nm:return i*e;case im:return i*e*2;case mc:return i*e/r.components*r.byteLength;case Ca:return i*e/r.components*r.byteLength;case io:return i*e*2/r.components*r.byteLength;case Na:return i*e*2/r.components*r.byteLength;case pc:return i*e*3/r.components*r.byteLength;case Qt:return i*e*4/r.components*r.byteLength;case Pa:return i*e*4/r.components*r.byteLength;case Ks:case ls:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case cs:case us:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case $l:case jl:return Math.max(i,16)*Math.max(e,8)/4;case Wl:case ql:return Math.max(i,8)*Math.max(e,8)/2;case Xl:case ra:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case sa:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case oa:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case aa:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case la:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case ca:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case ua:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case ha:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case da:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case fa:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case pa:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case ma:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case ga:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case _a:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case va:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case ya:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case Zs:case ep:case tp:return Math.ceil(i/4)*Math.ceil(e/4)*16;case rm:case Yl:return Math.ceil(i/4)*Math.ceil(e/4)*8;case Kl:case Zl:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function mE(i){switch(i){case Zt:case Xs:return{byteLength:1,components:1};case Ki:case Ys:case Fn:return{byteLength:2,components:1};case Th:case Mh:return{byteLength:2,components:4};case Lt:case Sn:case Jt:return{byteLength:4,components:1};case Eh:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ra}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ra);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function U0(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function gE(i){const e=new WeakMap;function t(a,l){const c=a.array,u=a.usage,h=c.byteLength,d=i.createBuffer();i.bindBuffer(l,d),i.bufferData(l,c,u),a.onUploadCallback();let f;if(c instanceof Float32Array)f=i.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=i.HALF_FLOAT:f=i.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=i.SHORT;else if(c instanceof Uint32Array)f=i.UNSIGNED_INT;else if(c instanceof Int32Array)f=i.INT;else if(c instanceof Int8Array)f=i.BYTE;else if(c instanceof Uint8Array)f=i.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,l,c){const u=l.array,h=l.updateRanges;if(i.bindBuffer(c,a),h.length===0)i.bufferSubData(c,0,u);else{h.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<h.length;f++){const p=h[d],_=h[f];_.start<=p.start+p.count+1?p.count=Math.max(p.count,_.start+_.count-p.start):(++d,h[d]=_)}h.length=d+1;for(let f=0,p=h.length;f<p;f++){const _=h[f];i.bufferSubData(c,_.start*u.BYTES_PER_ELEMENT,u,_.start,_.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(i.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:r,remove:s,update:o}}var _E=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,vE=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,yE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,xE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,bE=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,SE=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,TE=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,ME=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,EE=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,wE=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,AE=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,RE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,CE=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,NE=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,PE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,DE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,LE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,IE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,UE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,FE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,BE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,OE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,kE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,GE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,zE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,VE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,HE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,WE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,$E=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,qE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,jE="gl_FragColor = linearToOutputTexel( gl_FragColor );",XE=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,YE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,KE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,ZE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,QE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,JE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ew=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,tw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,nw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,iw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,rw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,sw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ow=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,aw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,cw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,uw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,hw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,dw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,pw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,mw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,gw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,_w=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,vw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,yw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xw=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,bw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Sw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Tw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Mw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ew=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ww=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Aw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Rw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Cw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Nw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Pw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Dw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Lw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Iw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Uw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Fw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Bw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ow=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,kw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Gw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,zw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Vw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Hw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Ww=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,$w=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,qw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,jw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Xw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Yw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Kw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Zw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Qw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Jw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,eA=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,tA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,nA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,iA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,rA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,sA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,oA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,aA=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,lA=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,cA=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,uA=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,hA=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,dA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,fA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,pA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,mA=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const gA=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_A=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yA=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,bA=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,SA=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,TA=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,MA=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,EA=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,wA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,AA=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,RA=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,CA=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,NA=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,PA=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DA=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,LA=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IA=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,UA=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FA=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,BA=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,OA=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kA=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GA=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,zA=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VA=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,HA=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,WA=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,$A=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,qA=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jA=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,XA=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,YA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,at={alphahash_fragment:_E,alphahash_pars_fragment:vE,alphamap_fragment:yE,alphamap_pars_fragment:xE,alphatest_fragment:bE,alphatest_pars_fragment:SE,aomap_fragment:TE,aomap_pars_fragment:ME,batching_pars_vertex:EE,batching_vertex:wE,begin_vertex:AE,beginnormal_vertex:RE,bsdfs:CE,iridescence_fragment:NE,bumpmap_pars_fragment:PE,clipping_planes_fragment:DE,clipping_planes_pars_fragment:LE,clipping_planes_pars_vertex:IE,clipping_planes_vertex:UE,color_fragment:FE,color_pars_fragment:BE,color_pars_vertex:OE,color_vertex:kE,common:GE,cube_uv_reflection_fragment:zE,defaultnormal_vertex:VE,displacementmap_pars_vertex:HE,displacementmap_vertex:WE,emissivemap_fragment:$E,emissivemap_pars_fragment:qE,colorspace_fragment:jE,colorspace_pars_fragment:XE,envmap_fragment:YE,envmap_common_pars_fragment:KE,envmap_pars_fragment:ZE,envmap_pars_vertex:QE,envmap_physical_pars_fragment:cw,envmap_vertex:JE,fog_vertex:ew,fog_pars_vertex:tw,fog_fragment:nw,fog_pars_fragment:iw,gradientmap_pars_fragment:rw,lightmap_pars_fragment:sw,lights_lambert_fragment:ow,lights_lambert_pars_fragment:aw,lights_pars_begin:lw,lights_toon_fragment:uw,lights_toon_pars_fragment:hw,lights_phong_fragment:dw,lights_phong_pars_fragment:fw,lights_physical_fragment:pw,lights_physical_pars_fragment:mw,lights_fragment_begin:gw,lights_fragment_maps:_w,lights_fragment_end:vw,logdepthbuf_fragment:yw,logdepthbuf_pars_fragment:xw,logdepthbuf_pars_vertex:bw,logdepthbuf_vertex:Sw,map_fragment:Tw,map_pars_fragment:Mw,map_particle_fragment:Ew,map_particle_pars_fragment:ww,metalnessmap_fragment:Aw,metalnessmap_pars_fragment:Rw,morphinstance_vertex:Cw,morphcolor_vertex:Nw,morphnormal_vertex:Pw,morphtarget_pars_vertex:Dw,morphtarget_vertex:Lw,normal_fragment_begin:Iw,normal_fragment_maps:Uw,normal_pars_fragment:Fw,normal_pars_vertex:Bw,normal_vertex:Ow,normalmap_pars_fragment:kw,clearcoat_normal_fragment_begin:Gw,clearcoat_normal_fragment_maps:zw,clearcoat_pars_fragment:Vw,iridescence_pars_fragment:Hw,opaque_fragment:Ww,packing:$w,premultiplied_alpha_fragment:qw,project_vertex:jw,dithering_fragment:Xw,dithering_pars_fragment:Yw,roughnessmap_fragment:Kw,roughnessmap_pars_fragment:Zw,shadowmap_pars_fragment:Qw,shadowmap_pars_vertex:Jw,shadowmap_vertex:eA,shadowmask_pars_fragment:tA,skinbase_vertex:nA,skinning_pars_vertex:iA,skinning_vertex:rA,skinnormal_vertex:sA,specularmap_fragment:oA,specularmap_pars_fragment:aA,tonemapping_fragment:lA,tonemapping_pars_fragment:cA,transmission_fragment:uA,transmission_pars_fragment:hA,uv_pars_fragment:dA,uv_pars_vertex:fA,uv_vertex:pA,worldpos_vertex:mA,background_vert:gA,background_frag:_A,backgroundCube_vert:vA,backgroundCube_frag:yA,cube_vert:xA,cube_frag:bA,depth_vert:SA,depth_frag:TA,distanceRGBA_vert:MA,distanceRGBA_frag:EA,equirect_vert:wA,equirect_frag:AA,linedashed_vert:RA,linedashed_frag:CA,meshbasic_vert:NA,meshbasic_frag:PA,meshlambert_vert:DA,meshlambert_frag:LA,meshmatcap_vert:IA,meshmatcap_frag:UA,meshnormal_vert:FA,meshnormal_frag:BA,meshphong_vert:OA,meshphong_frag:kA,meshphysical_vert:GA,meshphysical_frag:zA,meshtoon_vert:VA,meshtoon_frag:HA,points_vert:WA,points_frag:$A,shadow_vert:qA,shadow_frag:jA,sprite_vert:XA,sprite_frag:YA},ye={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Xe}},envmap:{envMap:{value:null},envMapRotation:{value:new Xe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Xe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Xe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Xe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Xe},normalScale:{value:new ae(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Xe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Xe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Xe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Xe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0},uvTransform:{value:new Xe}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new ae(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}}},sr={basic:{uniforms:zn([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.fog]),vertexShader:at.meshbasic_vert,fragmentShader:at.meshbasic_frag},lambert:{uniforms:zn([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,ye.lights,{emissive:{value:new Le(0)}}]),vertexShader:at.meshlambert_vert,fragmentShader:at.meshlambert_frag},phong:{uniforms:zn([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,ye.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:at.meshphong_vert,fragmentShader:at.meshphong_frag},standard:{uniforms:zn([ye.common,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.roughnessmap,ye.metalnessmap,ye.fog,ye.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag},toon:{uniforms:zn([ye.common,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.gradientmap,ye.fog,ye.lights,{emissive:{value:new Le(0)}}]),vertexShader:at.meshtoon_vert,fragmentShader:at.meshtoon_frag},matcap:{uniforms:zn([ye.common,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,{matcap:{value:null}}]),vertexShader:at.meshmatcap_vert,fragmentShader:at.meshmatcap_frag},points:{uniforms:zn([ye.points,ye.fog]),vertexShader:at.points_vert,fragmentShader:at.points_frag},dashed:{uniforms:zn([ye.common,ye.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:at.linedashed_vert,fragmentShader:at.linedashed_frag},depth:{uniforms:zn([ye.common,ye.displacementmap]),vertexShader:at.depth_vert,fragmentShader:at.depth_frag},normal:{uniforms:zn([ye.common,ye.bumpmap,ye.normalmap,ye.displacementmap,{opacity:{value:1}}]),vertexShader:at.meshnormal_vert,fragmentShader:at.meshnormal_frag},sprite:{uniforms:zn([ye.sprite,ye.fog]),vertexShader:at.sprite_vert,fragmentShader:at.sprite_frag},background:{uniforms:{uvTransform:{value:new Xe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:at.background_vert,fragmentShader:at.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Xe}},vertexShader:at.backgroundCube_vert,fragmentShader:at.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:at.cube_vert,fragmentShader:at.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:at.equirect_vert,fragmentShader:at.equirect_frag},distanceRGBA:{uniforms:zn([ye.common,ye.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:at.distanceRGBA_vert,fragmentShader:at.distanceRGBA_frag},shadow:{uniforms:zn([ye.lights,ye.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:at.shadow_vert,fragmentShader:at.shadow_frag}};sr.physical={uniforms:zn([sr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Xe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Xe},clearcoatNormalScale:{value:new ae(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Xe},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Xe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Xe},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Xe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Xe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Xe},transmissionSamplerSize:{value:new ae},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Xe},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Xe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Xe},anisotropyVector:{value:new ae},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Xe}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag};const uu={r:0,b:0,g:0},Ps=new ai,KA=new ft;function ZA(i,e,t,n,r,s,o){const a=new Le(0);let l=s===!0?0:1,c,u,h=null,d=0,f=null;function p(x){let y=x.isScene===!0?x.background:null;return y&&y.isTexture&&(y=(x.backgroundBlurriness>0?t:e).get(y)),y}function _(x){let y=!1;const T=p(x);T===null?m(a,l):T&&T.isColor&&(m(T,1),y=!0);const b=i.xr.getEnvironmentBlendMode();b==="additive"?n.buffers.color.setClear(0,0,0,1,o):b==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||y)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function g(x,y){const T=p(y);T&&(T.isCubeTexture||T.mapping===eo)?(u===void 0&&(u=new tn(new co(1,1,1),new dr({name:"BackgroundCubeMaterial",uniforms:xa(sr.backgroundCube.uniforms),vertexShader:sr.backgroundCube.vertexShader,fragmentShader:sr.backgroundCube.fragmentShader,side:It,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(b,M,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),Ps.copy(y.backgroundRotation),Ps.x*=-1,Ps.y*=-1,Ps.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(Ps.y*=-1,Ps.z*=-1),u.material.uniforms.envMap.value=T,u.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(KA.makeRotationFromEuler(Ps)),u.material.toneMapped=lt.getTransfer(T.colorSpace)!==Et,(h!==T||d!==T.version||f!==i.toneMapping)&&(u.material.needsUpdate=!0,h=T,d=T.version,f=i.toneMapping),u.layers.enableAll(),x.unshift(u,u.geometry,u.material,0,0,null)):T&&T.isTexture&&(c===void 0&&(c=new tn(new vc(2,2),new dr({name:"BackgroundMaterial",uniforms:xa(sr.background.uniforms),vertexShader:sr.background.vertexShader,fragmentShader:sr.background.fragmentShader,side:ri,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=T,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=lt.getTransfer(T.colorSpace)!==Et,T.matrixAutoUpdate===!0&&T.updateMatrix(),c.material.uniforms.uvTransform.value.copy(T.matrix),(h!==T||d!==T.version||f!==i.toneMapping)&&(c.material.needsUpdate=!0,h=T,d=T.version,f=i.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function m(x,y){x.getRGB(uu,y0(i)),n.buffers.color.setClear(uu.r,uu.g,uu.b,y,o)}function v(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(x,y=1){a.set(x),l=y,m(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,m(a,l)},render:_,addToRenderList:g,dispose:v}}function QA(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=d(null);let s=r,o=!1;function a(S,C,I,k,D){let L=!1;const B=h(k,I,C);s!==B&&(s=B,c(s.object)),L=f(S,k,I,D),L&&p(S,k,I,D),D!==null&&e.update(D,i.ELEMENT_ARRAY_BUFFER),(L||o)&&(o=!1,y(S,C,I,k),D!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(D).buffer))}function l(){return i.createVertexArray()}function c(S){return i.bindVertexArray(S)}function u(S){return i.deleteVertexArray(S)}function h(S,C,I){const k=I.wireframe===!0;let D=n[S.id];D===void 0&&(D={},n[S.id]=D);let L=D[C.id];L===void 0&&(L={},D[C.id]=L);let B=L[k];return B===void 0&&(B=d(l()),L[k]=B),B}function d(S){const C=[],I=[],k=[];for(let D=0;D<t;D++)C[D]=0,I[D]=0,k[D]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:C,enabledAttributes:I,attributeDivisors:k,object:S,attributes:{},index:null}}function f(S,C,I,k){const D=s.attributes,L=C.attributes;let B=0;const te=I.getAttributes();for(const q in te)if(te[q].location>=0){const Y=D[q];let ne=L[q];if(ne===void 0&&(q==="instanceMatrix"&&S.instanceMatrix&&(ne=S.instanceMatrix),q==="instanceColor"&&S.instanceColor&&(ne=S.instanceColor)),Y===void 0||Y.attribute!==ne||ne&&Y.data!==ne.data)return!0;B++}return s.attributesNum!==B||s.index!==k}function p(S,C,I,k){const D={},L=C.attributes;let B=0;const te=I.getAttributes();for(const q in te)if(te[q].location>=0){let Y=L[q];Y===void 0&&(q==="instanceMatrix"&&S.instanceMatrix&&(Y=S.instanceMatrix),q==="instanceColor"&&S.instanceColor&&(Y=S.instanceColor));const ne={};ne.attribute=Y,Y&&Y.data&&(ne.data=Y.data),D[q]=ne,B++}s.attributes=D,s.attributesNum=B,s.index=k}function _(){const S=s.newAttributes;for(let C=0,I=S.length;C<I;C++)S[C]=0}function g(S){m(S,0)}function m(S,C){const I=s.newAttributes,k=s.enabledAttributes,D=s.attributeDivisors;I[S]=1,k[S]===0&&(i.enableVertexAttribArray(S),k[S]=1),D[S]!==C&&(i.vertexAttribDivisor(S,C),D[S]=C)}function v(){const S=s.newAttributes,C=s.enabledAttributes;for(let I=0,k=C.length;I<k;I++)C[I]!==S[I]&&(i.disableVertexAttribArray(I),C[I]=0)}function x(S,C,I,k,D,L,B){B===!0?i.vertexAttribIPointer(S,C,I,D,L):i.vertexAttribPointer(S,C,I,k,D,L)}function y(S,C,I,k){_();const D=k.attributes,L=I.getAttributes(),B=C.defaultAttributeValues;for(const te in L){const q=L[te];if(q.location>=0){let fe=D[te];if(fe===void 0&&(te==="instanceMatrix"&&S.instanceMatrix&&(fe=S.instanceMatrix),te==="instanceColor"&&S.instanceColor&&(fe=S.instanceColor)),fe!==void 0){const Y=fe.normalized,ne=fe.itemSize,ve=e.get(fe);if(ve===void 0)continue;const Be=ve.buffer,O=ve.type,$=ve.bytesPerElement,ce=O===i.INT||O===i.UNSIGNED_INT||fe.gpuType===Sn;if(fe.isInterleavedBufferAttribute){const re=fe.data,we=re.stride,ze=fe.offset;if(re.isInstancedInterleavedBuffer){for(let Ae=0;Ae<q.locationSize;Ae++)m(q.location+Ae,re.meshPerAttribute);S.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=re.meshPerAttribute*re.count)}else for(let Ae=0;Ae<q.locationSize;Ae++)g(q.location+Ae);i.bindBuffer(i.ARRAY_BUFFER,Be);for(let Ae=0;Ae<q.locationSize;Ae++)x(q.location+Ae,ne/q.locationSize,O,Y,we*$,(ze+ne/q.locationSize*Ae)*$,ce)}else{if(fe.isInstancedBufferAttribute){for(let re=0;re<q.locationSize;re++)m(q.location+re,fe.meshPerAttribute);S.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let re=0;re<q.locationSize;re++)g(q.location+re);i.bindBuffer(i.ARRAY_BUFFER,Be);for(let re=0;re<q.locationSize;re++)x(q.location+re,ne/q.locationSize,O,Y,ne*$,ne/q.locationSize*re*$,ce)}}else if(B!==void 0){const Y=B[te];if(Y!==void 0)switch(Y.length){case 2:i.vertexAttrib2fv(q.location,Y);break;case 3:i.vertexAttrib3fv(q.location,Y);break;case 4:i.vertexAttrib4fv(q.location,Y);break;default:i.vertexAttrib1fv(q.location,Y)}}}}v()}function T(){w();for(const S in n){const C=n[S];for(const I in C){const k=C[I];for(const D in k)u(k[D].object),delete k[D];delete C[I]}delete n[S]}}function b(S){if(n[S.id]===void 0)return;const C=n[S.id];for(const I in C){const k=C[I];for(const D in k)u(k[D].object),delete k[D];delete C[I]}delete n[S.id]}function M(S){for(const C in n){const I=n[C];if(I[S.id]===void 0)continue;const k=I[S.id];for(const D in k)u(k[D].object),delete k[D];delete I[S.id]}}function w(){E(),o=!0,s!==r&&(s=r,c(s.object))}function E(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:w,resetDefaultState:E,dispose:T,releaseStatesOfGeometry:b,releaseStatesOfProgram:M,initAttributes:_,enableAttribute:g,disableUnusedAttributes:v}}function JA(i,e,t){let n;function r(c){n=c}function s(c,u){i.drawArrays(n,c,u),t.update(u,n,1)}function o(c,u,h){h!==0&&(i.drawArraysInstanced(n,c,u,h),t.update(u,n,h))}function a(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];t.update(f,n,1)}function l(c,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,c,0,u,0,d,0,h);let p=0;for(let _=0;_<h;_++)p+=u[_]*d[_];t.update(p,n,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function eR(i,e,t,n){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");r=i.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(M){return!(M!==Qt&&n.convert(M)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const w=M===Fn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==Zt&&n.convert(M)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==Jt&&!w)}function l(M){if(M==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),p=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=i.getParameter(i.MAX_TEXTURE_SIZE),g=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),m=i.getParameter(i.MAX_VERTEX_ATTRIBS),v=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),x=i.getParameter(i.MAX_VARYING_VECTORS),y=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),T=p>0,b=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:_,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:v,maxVaryings:x,maxFragmentUniforms:y,vertexTextures:T,maxSamples:b}}function tR(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new ji,a=new Xe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||r;return r=d,n=h.length,f},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,_=h.clipIntersection,g=h.clipShadows,m=i.get(h);if(!r||p===null||p.length===0||s&&!g)s?u(null):c();else{const v=s?0:n,x=v*4;let y=m.clippingState||null;l.value=y,y=u(p,d,x,f);for(let T=0;T!==x;++T)y[T]=t[T];m.clippingState=y,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,p){const _=h!==null?h.length:0;let g=null;if(_!==0){if(g=l.value,p!==!0||g===null){const m=f+_*4,v=d.matrixWorldInverse;a.getNormalMatrix(v),(g===null||g.length<m)&&(g=new Float32Array(m));for(let x=0,y=f;x!==_;++x,y+=4)o.copy(h[x]).applyMatrix4(v,a),o.normal.toArray(g,y),g[y+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function nR(i){let e=new WeakMap;function t(o,a){return a===ps?o.mapping=Ii:a===ms&&(o.mapping=Ui),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===ps||a===ms)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new S0(l.height);return c.fromEquirectangularTexture(i,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const Ho=4,u_=[.125,.215,.35,.446,.526,.582],zs=20,Vd=new yc,h_=new Le;let Hd=null,Wd=0,$d=0,qd=!1;const Bs=(1+Math.sqrt(5))/2,Po=1/Bs,d_=[new N(-Bs,Po,0),new N(Bs,Po,0),new N(-Po,0,Bs),new N(Po,0,Bs),new N(0,Bs,-Po),new N(0,Bs,Po),new N(-1,1,-1),new N(1,1,-1),new N(-1,1,1),new N(1,1,1)],iR=new N;let f_=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100,s={}){const{size:o=256,position:a=iR}=s;Hd=this._renderer.getRenderTarget(),Wd=this._renderer.getActiveCubeFace(),$d=this._renderer.getActiveMipmapLevel(),qd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,n,r,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=g_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=m_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Hd,Wd,$d),this._renderer.xr.enabled=qd,e.scissorTest=!1,hu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ii||e.mapping===Ui?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Hd=this._renderer.getRenderTarget(),Wd=this._renderer.getActiveCubeFace(),$d=this._renderer.getActiveMipmapLevel(),qd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:en,minFilter:en,generateMipmaps:!1,type:Fn,format:Qt,colorSpace:hr,depthBuffer:!1},r=p_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=p_(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=rR(s)),this._blurMaterial=sR(s,e,t)}return r}_compileMaterial(e){const t=new tn(this._lodPlanes[0],e);this._renderer.compile(t,Vd)}_sceneToCubeUV(e,t,n,r,s){const l=new Tn(90,1,t,n),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(h_),h.toneMapping=oi,h.autoClear=!1;const p=new or({name:"PMREM.Background",side:It,depthWrite:!1,depthTest:!1}),_=new tn(new co,p);let g=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,g=!0):(p.color.copy(h_),g=!0);for(let v=0;v<6;v++){const x=v%3;x===0?(l.up.set(0,c[v],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[v],s.y,s.z)):x===1?(l.up.set(0,0,c[v]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[v],s.z)):(l.up.set(0,c[v],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[v]));const y=this._cubeSize;hu(r,x*y,v>2?y:0,y,y),h.setRenderTarget(r),g&&h.render(_,l),h.render(e,l)}_.geometry.dispose(),_.material.dispose(),h.toneMapping=f,h.autoClear=d,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Ii||e.mapping===Ui;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=g_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=m_());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new tn(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;hu(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,Vd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=d_[(r-s-1)%d_.length];this._blur(e,s-1,s,o,a)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new tn(this._lodPlanes[r],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*zs-1),_=s/p,g=isFinite(s)?1+Math.floor(u*_):zs;g>zs&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${zs}`);const m=[];let v=0;for(let M=0;M<zs;++M){const w=M/_,E=Math.exp(-w*w/2);m.push(E),M===0?v+=E:M<g&&(v+=2*E)}for(let M=0;M<m.length;M++)m[M]=m[M]/v;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=p,d.mipInt.value=x-n;const y=this._sizeLods[r],T=3*y*(r>x-Ho?r-x+Ho:0),b=4*(this._cubeSize-y);hu(t,T,b,3*y,2*y),l.setRenderTarget(t),l.render(h,Vd)}};function rR(i){const e=[],t=[],n=[];let r=i;const s=i-Ho+1+u_.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>i-Ho?l=u_[o-i+Ho-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,_=3,g=2,m=1,v=new Float32Array(_*p*f),x=new Float32Array(g*p*f),y=new Float32Array(m*p*f);for(let b=0;b<f;b++){const M=b%3*2/3-1,w=b>2?0:-1,E=[M,w,0,M+2/3,w,0,M+2/3,w+1,0,M,w,0,M+2/3,w+1,0,M,w+1,0];v.set(E,_*p*b),x.set(d,g*p*b);const S=[b,b,b,b,b,b];y.set(S,m*p*b)}const T=new On;T.setAttribute("position",new Rn(v,_)),T.setAttribute("uv",new Rn(x,g)),T.setAttribute("faceIndex",new Rn(y,m)),e.push(T),r>Ho&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function p_(i,e,t){const n=new _s(i,e,t);return n.texture.mapping=eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function hu(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function sR(i,e,t){const n=new Float32Array(zs),r=new N(0,1,0);return new dr({name:"SphericalGaussianBlur",defines:{n:zs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Am(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:si,depthTest:!1,depthWrite:!1})}function m_(){return new dr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Am(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:si,depthTest:!1,depthWrite:!1})}function g_(){return new dr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Am(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:si,depthTest:!1,depthWrite:!1})}function Am(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function oR(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===ps||l===ms,u=l===Ii||l===Ui;if(c||u){let h=e.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new f_(i)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return c&&f&&f.height>0||u&&f&&r(f)?(t===null&&(t=new f_(i)),h=c?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",s),h.texture):null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function aR(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&Qi("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function lR(i,e,t,n){const r={},s=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete r[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return r[d.id]===!0||(d.addEventListener("dispose",o),r[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const f in d)e.update(d[f],i.ARRAY_BUFFER)}function c(h){const d=[],f=h.index,p=h.attributes.position;let _=0;if(f!==null){const v=f.array;_=f.version;for(let x=0,y=v.length;x<y;x+=3){const T=v[x+0],b=v[x+1],M=v[x+2];d.push(T,b,b,M,M,T)}}else if(p!==void 0){const v=p.array;_=p.version;for(let x=0,y=v.length/3-1;x<y;x+=3){const T=x+0,b=x+1,M=x+2;d.push(T,b,b,M,M,T)}}else return;const g=new(dm(d)?_m:gm)(d,1);g.version=_;const m=s.get(h);m&&e.remove(m),s.set(h,g)}function u(h){const d=s.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function cR(i,e,t){let n;function r(d){n=d}let s,o;function a(d){s=d.type,o=d.bytesPerElement}function l(d,f){i.drawElements(n,f,s,d*o),t.update(f,n,1)}function c(d,f,p){p!==0&&(i.drawElementsInstanced(n,f,s,d*o,p),t.update(f,n,p))}function u(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,s,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];t.update(g,n,1)}function h(d,f,p,_){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)c(d[m]/o,f[m],_[m]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,s,d,0,_,0,p);let m=0;for(let v=0;v<p;v++)m+=f[v]*_[v];t.update(m,n,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function uR(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=a*(s/3);break;case i.LINES:t.lines+=a*(s/2);break;case i.LINE_STRIP:t.lines+=a*(s-1);break;case i.LINE_LOOP:t.lines+=a*s;break;case i.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function hR(i,e,t){const n=new WeakMap,r=new We;function s(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=n.get(a);if(d===void 0||d.count!==h){let E=function(){M.dispose(),n.delete(a),a.removeEventListener("dispose",E)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,_=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],m=a.morphAttributes.normal||[],v=a.morphAttributes.color||[];let x=0;f===!0&&(x=1),p===!0&&(x=2),_===!0&&(x=3);let y=a.attributes.position.count*x,T=1;y>e.maxTextureSize&&(T=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const b=new Float32Array(y*T*4*h),M=new pm(b,y,T,h);M.type=Jt,M.needsUpdate=!0;const w=x*4;for(let S=0;S<h;S++){const C=g[S],I=m[S],k=v[S],D=y*T*4*S;for(let L=0;L<C.count;L++){const B=L*w;f===!0&&(r.fromBufferAttribute(C,L),b[D+B+0]=r.x,b[D+B+1]=r.y,b[D+B+2]=r.z,b[D+B+3]=0),p===!0&&(r.fromBufferAttribute(I,L),b[D+B+4]=r.x,b[D+B+5]=r.y,b[D+B+6]=r.z,b[D+B+7]=0),_===!0&&(r.fromBufferAttribute(k,L),b[D+B+8]=r.x,b[D+B+9]=r.y,b[D+B+10]=r.z,b[D+B+11]=k.itemSize===4?r.w:1)}}d={count:h,texture:M,size:new ae(y,T)},n.set(a,d),a.addEventListener("dispose",E)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let f=0;for(let _=0;_<c.length;_++)f+=c[_];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(i,"morphTargetBaseInfluence",p),l.getUniforms().setValue(i,"morphTargetInfluences",c)}l.getUniforms().setValue(i,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(i,"morphTargetsTextureSize",d.size)}return{update:s}}function dR(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,i.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,i.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;r.get(d)!==c&&(d.update(),r.set(d,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const F0=new dn,__=new Di(1,1),B0=new pm,O0=new lM,k0=new Ch,v_=[],y_=[],x_=new Float32Array(16),b_=new Float32Array(9),S_=new Float32Array(4);function La(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=v_[r];if(s===void 0&&(s=new Float32Array(r),v_[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function _n(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function vn(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function Fh(i,e){let t=y_[e];t===void 0&&(t=new Int32Array(e),y_[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function fR(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function pR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(_n(t,e))return;i.uniform2fv(this.addr,e),vn(t,e)}}function mR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(_n(t,e))return;i.uniform3fv(this.addr,e),vn(t,e)}}function gR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(_n(t,e))return;i.uniform4fv(this.addr,e),vn(t,e)}}function _R(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(_n(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),vn(t,e)}else{if(_n(t,n))return;S_.set(n),i.uniformMatrix2fv(this.addr,!1,S_),vn(t,n)}}function vR(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(_n(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),vn(t,e)}else{if(_n(t,n))return;b_.set(n),i.uniformMatrix3fv(this.addr,!1,b_),vn(t,n)}}function yR(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(_n(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),vn(t,e)}else{if(_n(t,n))return;x_.set(n),i.uniformMatrix4fv(this.addr,!1,x_),vn(t,n)}}function xR(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function bR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(_n(t,e))return;i.uniform2iv(this.addr,e),vn(t,e)}}function SR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(_n(t,e))return;i.uniform3iv(this.addr,e),vn(t,e)}}function TR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(_n(t,e))return;i.uniform4iv(this.addr,e),vn(t,e)}}function MR(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function ER(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(_n(t,e))return;i.uniform2uiv(this.addr,e),vn(t,e)}}function wR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(_n(t,e))return;i.uniform3uiv(this.addr,e),vn(t,e)}}function AR(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(_n(t,e))return;i.uniform4uiv(this.addr,e),vn(t,e)}}function RR(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);let s;this.type===i.SAMPLER_2D_SHADOW?(__.compareFunction=Ah,s=__):s=F0,t.setTexture2D(e||s,r)}function CR(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||O0,r)}function NR(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||k0,r)}function PR(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||B0,r)}function DR(i){switch(i){case 5126:return fR;case 35664:return pR;case 35665:return mR;case 35666:return gR;case 35674:return _R;case 35675:return vR;case 35676:return yR;case 5124:case 35670:return xR;case 35667:case 35671:return bR;case 35668:case 35672:return SR;case 35669:case 35673:return TR;case 5125:return MR;case 36294:return ER;case 36295:return wR;case 36296:return AR;case 35678:case 36198:case 36298:case 36306:case 35682:return RR;case 35679:case 36299:case 36307:return CR;case 35680:case 36300:case 36308:case 36293:return NR;case 36289:case 36303:case 36311:case 36292:return PR}}function LR(i,e){i.uniform1fv(this.addr,e)}function IR(i,e){const t=La(e,this.size,2);i.uniform2fv(this.addr,t)}function UR(i,e){const t=La(e,this.size,3);i.uniform3fv(this.addr,t)}function FR(i,e){const t=La(e,this.size,4);i.uniform4fv(this.addr,t)}function BR(i,e){const t=La(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function OR(i,e){const t=La(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function kR(i,e){const t=La(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function GR(i,e){i.uniform1iv(this.addr,e)}function zR(i,e){i.uniform2iv(this.addr,e)}function VR(i,e){i.uniform3iv(this.addr,e)}function HR(i,e){i.uniform4iv(this.addr,e)}function WR(i,e){i.uniform1uiv(this.addr,e)}function $R(i,e){i.uniform2uiv(this.addr,e)}function qR(i,e){i.uniform3uiv(this.addr,e)}function jR(i,e){i.uniform4uiv(this.addr,e)}function XR(i,e,t){const n=this.cache,r=e.length,s=Fh(t,r);_n(n,s)||(i.uniform1iv(this.addr,s),vn(n,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||F0,s[o])}function YR(i,e,t){const n=this.cache,r=e.length,s=Fh(t,r);_n(n,s)||(i.uniform1iv(this.addr,s),vn(n,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||O0,s[o])}function KR(i,e,t){const n=this.cache,r=e.length,s=Fh(t,r);_n(n,s)||(i.uniform1iv(this.addr,s),vn(n,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||k0,s[o])}function ZR(i,e,t){const n=this.cache,r=e.length,s=Fh(t,r);_n(n,s)||(i.uniform1iv(this.addr,s),vn(n,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||B0,s[o])}function QR(i){switch(i){case 5126:return LR;case 35664:return IR;case 35665:return UR;case 35666:return FR;case 35674:return BR;case 35675:return OR;case 35676:return kR;case 5124:case 35670:return GR;case 35667:case 35671:return zR;case 35668:case 35672:return VR;case 35669:case 35673:return HR;case 5125:return WR;case 36294:return $R;case 36295:return qR;case 36296:return jR;case 35678:case 36198:case 36298:case 36306:case 35682:return XR;case 35679:case 36299:case 36307:return YR;case 35680:case 36300:case 36308:case 36293:return KR;case 36289:case 36303:case 36311:case 36292:return ZR}}class JR{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=DR(t.type)}}class eC{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=QR(t.type)}}class tC{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const jd=/(\w+)(\])?(\[|\.)?/g;function T_(i,e){i.seq.push(e),i.map[e.id]=e}function nC(i,e,t){const n=i.name,r=n.length;for(jd.lastIndex=0;;){const s=jd.exec(n),o=jd.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){T_(t,c===void 0?new JR(a,i,e):new eC(a,i,e));break}else{let h=t.map[a];h===void 0&&(h=new tC(a),T_(t,h)),t=h}}}class zu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);nC(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function M_(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const iC=37297;let rC=0;function sC(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const E_=new Xe;function oC(i){lt._getMatrix(E_,lt.workingColorSpace,i);const e=`mat3( ${E_.elements.map(t=>t.toFixed(4))} )`;switch(lt.getTransfer(i)){case Ju:return[e,"LinearTransferOETF"];case Et:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function w_(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+sC(i.getShaderSource(e),o)}else return r}function aC(i,e){const t=oC(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function lC(i,e){let t;switch(e){case c0:t="Linear";break;case u0:t="Reinhard";break;case h0:t="Cineon";break;case d0:t="ACESFilmic";break;case f0:t="AgX";break;case p0:t="Neutral";break;case bT:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const du=new N;function cC(){lt.getLuminanceCoefficients(du);const i=du.x.toFixed(4),e=du.y.toFixed(4),t=du.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function uC(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ml).join(`
`)}function hC(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function dC(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===i.FLOAT_MAT2&&(a=2),s.type===i.FLOAT_MAT3&&(a=3),s.type===i.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function ml(i){return i!==""}function A_(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function R_(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const fC=/^[ \t]*#include +<([\w\d./]+)>/gm;function rp(i){return i.replace(fC,mC)}const pC=new Map;function mC(i,e){let t=at[e];if(t===void 0){const n=pC.get(e);if(n!==void 0)t=at[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return rp(t)}const gC=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function C_(i){return i.replace(gC,_C)}function _C(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function N_(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function vC(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Vp?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===gT?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===vi&&(e="SHADOWMAP_TYPE_VSM"),e}function yC(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Ii:case Ui:e="ENVMAP_TYPE_CUBE";break;case eo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function xC(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Ui:e="ENVMAP_MODE_REFRACTION";break}return e}function bC(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case fc:e="ENVMAP_BLENDING_MULTIPLY";break;case a0:e="ENVMAP_BLENDING_MIX";break;case l0:e="ENVMAP_BLENDING_ADD";break}return e}function SC(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function TC(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=vC(t),c=yC(t),u=xC(t),h=bC(t),d=SC(t),f=uC(t),p=hC(s),_=r.createProgram();let g,m,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(ml).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(ml).join(`
`),m.length>0&&(m+=`
`)):(g=[N_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ml).join(`
`),m=[N_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==oi?"#define TONE_MAPPING":"",t.toneMapping!==oi?at.tonemapping_pars_fragment:"",t.toneMapping!==oi?lC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",at.colorspace_pars_fragment,aC("linearToOutputTexel",t.outputColorSpace),cC(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ml).join(`
`)),o=rp(o),o=A_(o,t),o=R_(o,t),a=rp(a),a=A_(a,t),a=R_(a,t),o=C_(o),a=C_(a),t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===Pg?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Pg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const x=v+g+o,y=v+m+a,T=M_(r,r.VERTEX_SHADER,x),b=M_(r,r.FRAGMENT_SHADER,y);r.attachShader(_,T),r.attachShader(_,b),t.index0AttributeName!==void 0?r.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_);function M(C){if(i.debug.checkShaderErrors){const I=r.getProgramInfoLog(_).trim(),k=r.getShaderInfoLog(T).trim(),D=r.getShaderInfoLog(b).trim();let L=!0,B=!0;if(r.getProgramParameter(_,r.LINK_STATUS)===!1)if(L=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,_,T,b);else{const te=w_(r,T,"vertex"),q=w_(r,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(_,r.VALIDATE_STATUS)+`

Material Name: `+C.name+`
Material Type: `+C.type+`

Program Info Log: `+I+`
`+te+`
`+q)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(k===""||D==="")&&(B=!1);B&&(C.diagnostics={runnable:L,programLog:I,vertexShader:{log:k,prefix:g},fragmentShader:{log:D,prefix:m}})}r.deleteShader(T),r.deleteShader(b),w=new zu(r,_),E=dC(r,_)}let w;this.getUniforms=function(){return w===void 0&&M(this),w};let E;this.getAttributes=function(){return E===void 0&&M(this),E};let S=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return S===!1&&(S=r.getProgramParameter(_,iC)),S},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=rC++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=T,this.fragmentShader=b,this}let MC=0;class EC{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new wC(e),t.set(e,n)),n}}class wC{constructor(e){this.id=MC++,this.code=e,this.usedTimes=0}}function AC(i,e,t,n,r,s,o){const a=new mm,l=new EC,c=new Set,u=[],h=r.logarithmicDepthBuffer,d=r.vertexTextures;let f=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(E){return c.add(E),E===0?"uv":`uv${E}`}function g(E,S,C,I,k){const D=I.fog,L=k.geometry,B=E.isMeshStandardMaterial?I.environment:null,te=(E.isMeshStandardMaterial?t:e).get(E.envMap||B),q=te&&te.mapping===eo?te.image.height:null,fe=p[E.type];E.precision!==null&&(f=r.getMaxPrecision(E.precision),f!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",f,"instead."));const Y=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,ne=Y!==void 0?Y.length:0;let ve=0;L.morphAttributes.position!==void 0&&(ve=1),L.morphAttributes.normal!==void 0&&(ve=2),L.morphAttributes.color!==void 0&&(ve=3);let Be,O,$,ce;if(fe){const Rt=sr[fe];Be=Rt.vertexShader,O=Rt.fragmentShader}else Be=E.vertexShader,O=E.fragmentShader,l.update(E),$=l.getVertexShaderID(E),ce=l.getFragmentShaderID(E);const re=i.getRenderTarget(),we=i.state.buffers.depth.getReversed(),ze=k.isInstancedMesh===!0,Ae=k.isBatchedMesh===!0,mt=!!E.map,At=!!E.matcap,et=!!te,U=!!E.aoMap,qt=!!E.lightMap,ut=!!E.bumpMap,ht=!!E.normalMap,ke=!!E.displacementMap,Ot=!!E.emissiveMap,Oe=!!E.metalnessMap,P=!!E.roughnessMap,A=E.anisotropy>0,W=E.clearcoat>0,se=E.dispersion>0,ue=E.iridescence>0,ie=E.sheen>0,Fe=E.transmission>0,be=A&&!!E.anisotropyMap,Ce=W&&!!E.clearcoatMap,gt=W&&!!E.clearcoatNormalMap,me=W&&!!E.clearcoatRoughnessMap,Ne=ue&&!!E.iridescenceMap,$e=ue&&!!E.iridescenceThicknessMap,Ye=ie&&!!E.sheenColorMap,Pe=ie&&!!E.sheenRoughnessMap,pt=!!E.specularMap,ot=!!E.specularColorMap,Ut=!!E.specularIntensityMap,G=Fe&&!!E.transmissionMap,Se=Fe&&!!E.thicknessMap,J=!!E.gradientMap,oe=!!E.alphaMap,Ee=E.alphaTest>0,Te=!!E.alphaHash,rt=!!E.extensions;let Yt=oi;E.toneMapped&&(re===null||re.isXRRenderTarget===!0)&&(Yt=i.toneMapping);const Nn={shaderID:fe,shaderType:E.type,shaderName:E.name,vertexShader:Be,fragmentShader:O,defines:E.defines,customVertexShaderID:$,customFragmentShaderID:ce,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:f,batching:Ae,batchingColor:Ae&&k._colorsTexture!==null,instancing:ze,instancingColor:ze&&k.instanceColor!==null,instancingMorph:ze&&k.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:re===null?i.outputColorSpace:re.isXRRenderTarget===!0?re.texture.colorSpace:hr,alphaToCoverage:!!E.alphaToCoverage,map:mt,matcap:At,envMap:et,envMapMode:et&&te.mapping,envMapCubeUVHeight:q,aoMap:U,lightMap:qt,bumpMap:ut,normalMap:ht,displacementMap:d&&ke,emissiveMap:Ot,normalMapObjectSpace:ht&&E.normalMapType===m0,normalMapTangentSpace:ht&&E.normalMapType===Gr,metalnessMap:Oe,roughnessMap:P,anisotropy:A,anisotropyMap:be,clearcoat:W,clearcoatMap:Ce,clearcoatNormalMap:gt,clearcoatRoughnessMap:me,dispersion:se,iridescence:ue,iridescenceMap:Ne,iridescenceThicknessMap:$e,sheen:ie,sheenColorMap:Ye,sheenRoughnessMap:Pe,specularMap:pt,specularColorMap:ot,specularIntensityMap:Ut,transmission:Fe,transmissionMap:G,thicknessMap:Se,gradientMap:J,opaque:E.transparent===!1&&E.blending===Pi&&E.alphaToCoverage===!1,alphaMap:oe,alphaTest:Ee,alphaHash:Te,combine:E.combine,mapUv:mt&&_(E.map.channel),aoMapUv:U&&_(E.aoMap.channel),lightMapUv:qt&&_(E.lightMap.channel),bumpMapUv:ut&&_(E.bumpMap.channel),normalMapUv:ht&&_(E.normalMap.channel),displacementMapUv:ke&&_(E.displacementMap.channel),emissiveMapUv:Ot&&_(E.emissiveMap.channel),metalnessMapUv:Oe&&_(E.metalnessMap.channel),roughnessMapUv:P&&_(E.roughnessMap.channel),anisotropyMapUv:be&&_(E.anisotropyMap.channel),clearcoatMapUv:Ce&&_(E.clearcoatMap.channel),clearcoatNormalMapUv:gt&&_(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:me&&_(E.clearcoatRoughnessMap.channel),iridescenceMapUv:Ne&&_(E.iridescenceMap.channel),iridescenceThicknessMapUv:$e&&_(E.iridescenceThicknessMap.channel),sheenColorMapUv:Ye&&_(E.sheenColorMap.channel),sheenRoughnessMapUv:Pe&&_(E.sheenRoughnessMap.channel),specularMapUv:pt&&_(E.specularMap.channel),specularColorMapUv:ot&&_(E.specularColorMap.channel),specularIntensityMapUv:Ut&&_(E.specularIntensityMap.channel),transmissionMapUv:G&&_(E.transmissionMap.channel),thicknessMapUv:Se&&_(E.thicknessMap.channel),alphaMapUv:oe&&_(E.alphaMap.channel),vertexTangents:!!L.attributes.tangent&&(ht||A),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!L.attributes.uv&&(mt||oe),fog:!!D,useFog:E.fog===!0,fogExp2:!!D&&D.isFogExp2,flatShading:E.flatShading===!0,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:h,reverseDepthBuffer:we,skinning:k.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:ne,morphTextureStride:ve,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numLightProbes:S.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:E.dithering,shadowMapEnabled:i.shadowMap.enabled&&C.length>0,shadowMapType:i.shadowMap.type,toneMapping:Yt,decodeVideoTexture:mt&&E.map.isVideoTexture===!0&&lt.getTransfer(E.map.colorSpace)===Et,decodeVideoTextureEmissive:Ot&&E.emissiveMap.isVideoTexture===!0&&lt.getTransfer(E.emissiveMap.colorSpace)===Et,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===Vn,flipSided:E.side===It,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionClipCullDistance:rt&&E.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(rt&&E.extensions.multiDraw===!0||Ae)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:E.customProgramCacheKey()};return Nn.vertexUv1s=c.has(1),Nn.vertexUv2s=c.has(2),Nn.vertexUv3s=c.has(3),c.clear(),Nn}function m(E){const S=[];if(E.shaderID?S.push(E.shaderID):(S.push(E.customVertexShaderID),S.push(E.customFragmentShaderID)),E.defines!==void 0)for(const C in E.defines)S.push(C),S.push(E.defines[C]);return E.isRawShaderMaterial===!1&&(v(S,E),x(S,E),S.push(i.outputColorSpace)),S.push(E.customProgramCacheKey),S.join()}function v(E,S){E.push(S.precision),E.push(S.outputColorSpace),E.push(S.envMapMode),E.push(S.envMapCubeUVHeight),E.push(S.mapUv),E.push(S.alphaMapUv),E.push(S.lightMapUv),E.push(S.aoMapUv),E.push(S.bumpMapUv),E.push(S.normalMapUv),E.push(S.displacementMapUv),E.push(S.emissiveMapUv),E.push(S.metalnessMapUv),E.push(S.roughnessMapUv),E.push(S.anisotropyMapUv),E.push(S.clearcoatMapUv),E.push(S.clearcoatNormalMapUv),E.push(S.clearcoatRoughnessMapUv),E.push(S.iridescenceMapUv),E.push(S.iridescenceThicknessMapUv),E.push(S.sheenColorMapUv),E.push(S.sheenRoughnessMapUv),E.push(S.specularMapUv),E.push(S.specularColorMapUv),E.push(S.specularIntensityMapUv),E.push(S.transmissionMapUv),E.push(S.thicknessMapUv),E.push(S.combine),E.push(S.fogExp2),E.push(S.sizeAttenuation),E.push(S.morphTargetsCount),E.push(S.morphAttributeCount),E.push(S.numDirLights),E.push(S.numPointLights),E.push(S.numSpotLights),E.push(S.numSpotLightMaps),E.push(S.numHemiLights),E.push(S.numRectAreaLights),E.push(S.numDirLightShadows),E.push(S.numPointLightShadows),E.push(S.numSpotLightShadows),E.push(S.numSpotLightShadowsWithMaps),E.push(S.numLightProbes),E.push(S.shadowMapType),E.push(S.toneMapping),E.push(S.numClippingPlanes),E.push(S.numClipIntersection),E.push(S.depthPacking)}function x(E,S){a.disableAll(),S.supportsVertexTextures&&a.enable(0),S.instancing&&a.enable(1),S.instancingColor&&a.enable(2),S.instancingMorph&&a.enable(3),S.matcap&&a.enable(4),S.envMap&&a.enable(5),S.normalMapObjectSpace&&a.enable(6),S.normalMapTangentSpace&&a.enable(7),S.clearcoat&&a.enable(8),S.iridescence&&a.enable(9),S.alphaTest&&a.enable(10),S.vertexColors&&a.enable(11),S.vertexAlphas&&a.enable(12),S.vertexUv1s&&a.enable(13),S.vertexUv2s&&a.enable(14),S.vertexUv3s&&a.enable(15),S.vertexTangents&&a.enable(16),S.anisotropy&&a.enable(17),S.alphaHash&&a.enable(18),S.batching&&a.enable(19),S.dispersion&&a.enable(20),S.batchingColor&&a.enable(21),E.push(a.mask),a.disableAll(),S.fog&&a.enable(0),S.useFog&&a.enable(1),S.flatShading&&a.enable(2),S.logarithmicDepthBuffer&&a.enable(3),S.reverseDepthBuffer&&a.enable(4),S.skinning&&a.enable(5),S.morphTargets&&a.enable(6),S.morphNormals&&a.enable(7),S.morphColors&&a.enable(8),S.premultipliedAlpha&&a.enable(9),S.shadowMapEnabled&&a.enable(10),S.doubleSided&&a.enable(11),S.flipSided&&a.enable(12),S.useDepthPacking&&a.enable(13),S.dithering&&a.enable(14),S.transmission&&a.enable(15),S.sheen&&a.enable(16),S.opaque&&a.enable(17),S.pointsUvs&&a.enable(18),S.decodeVideoTexture&&a.enable(19),S.decodeVideoTextureEmissive&&a.enable(20),S.alphaToCoverage&&a.enable(21),E.push(a.mask)}function y(E){const S=p[E.type];let C;if(S){const I=sr[S];C=x0.clone(I.uniforms)}else C=E.uniforms;return C}function T(E,S){let C;for(let I=0,k=u.length;I<k;I++){const D=u[I];if(D.cacheKey===S){C=D,++C.usedTimes;break}}return C===void 0&&(C=new TC(i,S,E,s),u.push(C)),C}function b(E){if(--E.usedTimes===0){const S=u.indexOf(E);u[S]=u[u.length-1],u.pop(),E.destroy()}}function M(E){l.remove(E)}function w(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:y,acquireProgram:T,releaseProgram:b,releaseShaderCache:M,programs:u,dispose:w}}function RC(){let i=new WeakMap;function e(o){return i.has(o)}function t(o){let a=i.get(o);return a===void 0&&(a={},i.set(o,a)),a}function n(o){i.delete(o)}function r(o,a,l){i.get(o)[a]=l}function s(){i=new WeakMap}return{has:e,get:t,remove:n,update:r,dispose:s}}function CC(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function P_(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function D_(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(h,d,f,p,_,g){let m=i[e];return m===void 0?(m={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:_,group:g},i[e]=m):(m.id=h.id,m.object=h,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=h.renderOrder,m.z=_,m.group=g),e++,m}function a(h,d,f,p,_,g){const m=o(h,d,f,p,_,g);f.transmission>0?n.push(m):f.transparent===!0?r.push(m):t.push(m)}function l(h,d,f,p,_,g){const m=o(h,d,f,p,_,g);f.transmission>0?n.unshift(m):f.transparent===!0?r.unshift(m):t.unshift(m)}function c(h,d){t.length>1&&t.sort(h||CC),n.length>1&&n.sort(d||P_),r.length>1&&r.sort(d||P_)}function u(){for(let h=e,d=i.length;h<d;h++){const f=i[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function NC(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new D_,i.set(n,[o])):r>=s.length?(o=new D_,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function PC(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new N,color:new Le};break;case"SpotLight":t={position:new N,direction:new N,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new N,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new N,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new N,halfWidth:new N,halfHeight:new N};break}return i[e.id]=t,t}}}function DC(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let LC=0;function IC(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function UC(i){const e=new PC,t=DC(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new N);const r=new N,s=new ft,o=new ft;function a(c){let u=0,h=0,d=0;for(let E=0;E<9;E++)n.probe[E].set(0,0,0);let f=0,p=0,_=0,g=0,m=0,v=0,x=0,y=0,T=0,b=0,M=0;c.sort(IC);for(let E=0,S=c.length;E<S;E++){const C=c[E],I=C.color,k=C.intensity,D=C.distance,L=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)u+=I.r*k,h+=I.g*k,d+=I.b*k;else if(C.isLightProbe){for(let B=0;B<9;B++)n.probe[B].addScaledVector(C.sh.coefficients[B],k);M++}else if(C.isDirectionalLight){const B=e.get(C);if(B.color.copy(C.color).multiplyScalar(C.intensity),C.castShadow){const te=C.shadow,q=t.get(C);q.shadowIntensity=te.intensity,q.shadowBias=te.bias,q.shadowNormalBias=te.normalBias,q.shadowRadius=te.radius,q.shadowMapSize=te.mapSize,n.directionalShadow[f]=q,n.directionalShadowMap[f]=L,n.directionalShadowMatrix[f]=C.shadow.matrix,v++}n.directional[f]=B,f++}else if(C.isSpotLight){const B=e.get(C);B.position.setFromMatrixPosition(C.matrixWorld),B.color.copy(I).multiplyScalar(k),B.distance=D,B.coneCos=Math.cos(C.angle),B.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),B.decay=C.decay,n.spot[_]=B;const te=C.shadow;if(C.map&&(n.spotLightMap[T]=C.map,T++,te.updateMatrices(C),C.castShadow&&b++),n.spotLightMatrix[_]=te.matrix,C.castShadow){const q=t.get(C);q.shadowIntensity=te.intensity,q.shadowBias=te.bias,q.shadowNormalBias=te.normalBias,q.shadowRadius=te.radius,q.shadowMapSize=te.mapSize,n.spotShadow[_]=q,n.spotShadowMap[_]=L,y++}_++}else if(C.isRectAreaLight){const B=e.get(C);B.color.copy(I).multiplyScalar(k),B.halfWidth.set(C.width*.5,0,0),B.halfHeight.set(0,C.height*.5,0),n.rectArea[g]=B,g++}else if(C.isPointLight){const B=e.get(C);if(B.color.copy(C.color).multiplyScalar(C.intensity),B.distance=C.distance,B.decay=C.decay,C.castShadow){const te=C.shadow,q=t.get(C);q.shadowIntensity=te.intensity,q.shadowBias=te.bias,q.shadowNormalBias=te.normalBias,q.shadowRadius=te.radius,q.shadowMapSize=te.mapSize,q.shadowCameraNear=te.camera.near,q.shadowCameraFar=te.camera.far,n.pointShadow[p]=q,n.pointShadowMap[p]=L,n.pointShadowMatrix[p]=C.shadow.matrix,x++}n.point[p]=B,p++}else if(C.isHemisphereLight){const B=e.get(C);B.skyColor.copy(C.color).multiplyScalar(k),B.groundColor.copy(C.groundColor).multiplyScalar(k),n.hemi[m]=B,m++}}g>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=ye.LTC_FLOAT_1,n.rectAreaLTC2=ye.LTC_FLOAT_2):(n.rectAreaLTC1=ye.LTC_HALF_1,n.rectAreaLTC2=ye.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=d;const w=n.hash;(w.directionalLength!==f||w.pointLength!==p||w.spotLength!==_||w.rectAreaLength!==g||w.hemiLength!==m||w.numDirectionalShadows!==v||w.numPointShadows!==x||w.numSpotShadows!==y||w.numSpotMaps!==T||w.numLightProbes!==M)&&(n.directional.length=f,n.spot.length=_,n.rectArea.length=g,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=v,n.directionalShadowMap.length=v,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=v,n.pointShadowMatrix.length=x,n.spotLightMatrix.length=y+T-b,n.spotLightMap.length=T,n.numSpotLightShadowsWithMaps=b,n.numLightProbes=M,w.directionalLength=f,w.pointLength=p,w.spotLength=_,w.rectAreaLength=g,w.hemiLength=m,w.numDirectionalShadows=v,w.numPointShadows=x,w.numSpotShadows=y,w.numSpotMaps=T,w.numLightProbes=M,n.version=LC++)}function l(c,u){let h=0,d=0,f=0,p=0,_=0;const g=u.matrixWorldInverse;for(let m=0,v=c.length;m<v;m++){const x=c[m];if(x.isDirectionalLight){const y=n.directional[h];y.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(g),h++}else if(x.isSpotLight){const y=n.spot[f];y.position.setFromMatrixPosition(x.matrixWorld),y.position.applyMatrix4(g),y.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(g),f++}else if(x.isRectAreaLight){const y=n.rectArea[p];y.position.setFromMatrixPosition(x.matrixWorld),y.position.applyMatrix4(g),o.identity(),s.copy(x.matrixWorld),s.premultiply(g),o.extractRotation(s),y.halfWidth.set(x.width*.5,0,0),y.halfHeight.set(0,x.height*.5,0),y.halfWidth.applyMatrix4(o),y.halfHeight.applyMatrix4(o),p++}else if(x.isPointLight){const y=n.point[d];y.position.setFromMatrixPosition(x.matrixWorld),y.position.applyMatrix4(g),d++}else if(x.isHemisphereLight){const y=n.hemi[_];y.direction.setFromMatrixPosition(x.matrixWorld),y.direction.transformDirection(g),_++}}}return{setup:a,setupView:l,state:n}}function L_(i){const e=new UC(i),t=[],n=[];function r(u){c.camera=u,t.length=0,n.length=0}function s(u){t.push(u)}function o(u){n.push(u)}function a(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function FC(i){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let a;return o===void 0?(a=new L_(i),e.set(r,[a])):s>=o.length?(a=new L_(i),o.push(a)):a=o[s],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const BC=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,OC=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function kC(i,e,t){let n=new Dh;const r=new ae,s=new ae,o=new We,a=new JM({depthPacking:MT}),l=new eE,c={},u=t.maxTextureSize,h={[ri]:It,[It]:ri,[Vn]:Vn},d=new dr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ae},radius:{value:4}},vertexShader:BC,fragmentShader:OC}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new On;p.setAttribute("position",new Rn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new tn(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Vp;let m=this.type;this.render=function(b,M,w){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||b.length===0)return;const E=i.getRenderTarget(),S=i.getActiveCubeFace(),C=i.getActiveMipmapLevel(),I=i.state;I.setBlending(si),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);const k=m!==vi&&this.type===vi,D=m===vi&&this.type!==vi;for(let L=0,B=b.length;L<B;L++){const te=b[L],q=te.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",te,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;r.copy(q.mapSize);const fe=q.getFrameExtents();if(r.multiply(fe),s.copy(q.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/fe.x),r.x=s.x*fe.x,q.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/fe.y),r.y=s.y*fe.y,q.mapSize.y=s.y)),q.map===null||k===!0||D===!0){const ne=this.type!==vi?{minFilter:Bt,magFilter:Bt}:{};q.map!==null&&q.map.dispose(),q.map=new _s(r.x,r.y,ne),q.map.texture.name=te.name+".shadowMap",q.camera.updateProjectionMatrix()}i.setRenderTarget(q.map),i.clear();const Y=q.getViewportCount();for(let ne=0;ne<Y;ne++){const ve=q.getViewport(ne);o.set(s.x*ve.x,s.y*ve.y,s.x*ve.z,s.y*ve.w),I.viewport(o),q.updateMatrices(te,ne),n=q.getFrustum(),y(M,w,q.camera,te,this.type)}q.isPointLightShadow!==!0&&this.type===vi&&v(q,w),q.needsUpdate=!1}m=this.type,g.needsUpdate=!1,i.setRenderTarget(E,S,C)};function v(b,M){const w=e.update(_);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,f.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new _s(r.x,r.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,i.setRenderTarget(b.mapPass),i.clear(),i.renderBufferDirect(M,null,w,d,_,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,i.setRenderTarget(b.map),i.clear(),i.renderBufferDirect(M,null,w,f,_,null)}function x(b,M,w,E){let S=null;const C=w.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(C!==void 0)S=C;else if(S=w.isPointLight===!0?l:a,i.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const I=S.uuid,k=M.uuid;let D=c[I];D===void 0&&(D={},c[I]=D);let L=D[k];L===void 0&&(L=S.clone(),D[k]=L,M.addEventListener("dispose",T)),S=L}if(S.visible=M.visible,S.wireframe=M.wireframe,E===vi?S.side=M.shadowSide!==null?M.shadowSide:M.side:S.side=M.shadowSide!==null?M.shadowSide:h[M.side],S.alphaMap=M.alphaMap,S.alphaTest=M.alphaTest,S.map=M.map,S.clipShadows=M.clipShadows,S.clippingPlanes=M.clippingPlanes,S.clipIntersection=M.clipIntersection,S.displacementMap=M.displacementMap,S.displacementScale=M.displacementScale,S.displacementBias=M.displacementBias,S.wireframeLinewidth=M.wireframeLinewidth,S.linewidth=M.linewidth,w.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const I=i.properties.get(S);I.light=w}return S}function y(b,M,w,E,S){if(b.visible===!1)return;if(b.layers.test(M.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&S===vi)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,b.matrixWorld);const k=e.update(b),D=b.material;if(Array.isArray(D)){const L=k.groups;for(let B=0,te=L.length;B<te;B++){const q=L[B],fe=D[q.materialIndex];if(fe&&fe.visible){const Y=x(b,fe,E,S);b.onBeforeShadow(i,b,M,w,k,Y,q),i.renderBufferDirect(w,null,k,Y,b,q),b.onAfterShadow(i,b,M,w,k,Y,q)}}}else if(D.visible){const L=x(b,D,E,S);b.onBeforeShadow(i,b,M,w,k,L,null),i.renderBufferDirect(w,null,k,L,b,null),b.onAfterShadow(i,b,M,w,k,L,null)}}const I=b.children;for(let k=0,D=I.length;k<D;k++)y(I[k],M,w,E,S)}function T(b){b.target.removeEventListener("dispose",T);for(const w in c){const E=c[w],S=b.target.uuid;S in E&&(E[S].dispose(),delete E[S])}}}const GC={[Bl]:Ol,[kl]:Vl,[Gl]:Hl,[fs]:zl,[Ol]:Bl,[Vl]:kl,[Hl]:Gl,[zl]:fs};function zC(i,e){function t(){let G=!1;const Se=new We;let J=null;const oe=new We(0,0,0,0);return{setMask:function(Ee){J!==Ee&&!G&&(i.colorMask(Ee,Ee,Ee,Ee),J=Ee)},setLocked:function(Ee){G=Ee},setClear:function(Ee,Te,rt,Yt,Nn){Nn===!0&&(Ee*=Yt,Te*=Yt,rt*=Yt),Se.set(Ee,Te,rt,Yt),oe.equals(Se)===!1&&(i.clearColor(Ee,Te,rt,Yt),oe.copy(Se))},reset:function(){G=!1,J=null,oe.set(-1,0,0,0)}}}function n(){let G=!1,Se=!1,J=null,oe=null,Ee=null;return{setReversed:function(Te){if(Se!==Te){const rt=e.get("EXT_clip_control");Te?rt.clipControlEXT(rt.LOWER_LEFT_EXT,rt.ZERO_TO_ONE_EXT):rt.clipControlEXT(rt.LOWER_LEFT_EXT,rt.NEGATIVE_ONE_TO_ONE_EXT),Se=Te;const Yt=Ee;Ee=null,this.setClear(Yt)}},getReversed:function(){return Se},setTest:function(Te){Te?re(i.DEPTH_TEST):we(i.DEPTH_TEST)},setMask:function(Te){J!==Te&&!G&&(i.depthMask(Te),J=Te)},setFunc:function(Te){if(Se&&(Te=GC[Te]),oe!==Te){switch(Te){case Bl:i.depthFunc(i.NEVER);break;case Ol:i.depthFunc(i.ALWAYS);break;case kl:i.depthFunc(i.LESS);break;case fs:i.depthFunc(i.LEQUAL);break;case Gl:i.depthFunc(i.EQUAL);break;case zl:i.depthFunc(i.GEQUAL);break;case Vl:i.depthFunc(i.GREATER);break;case Hl:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}oe=Te}},setLocked:function(Te){G=Te},setClear:function(Te){Ee!==Te&&(Se&&(Te=1-Te),i.clearDepth(Te),Ee=Te)},reset:function(){G=!1,J=null,oe=null,Ee=null,Se=!1}}}function r(){let G=!1,Se=null,J=null,oe=null,Ee=null,Te=null,rt=null,Yt=null,Nn=null;return{setTest:function(Rt){G||(Rt?re(i.STENCIL_TEST):we(i.STENCIL_TEST))},setMask:function(Rt){Se!==Rt&&!G&&(i.stencilMask(Rt),Se=Rt)},setFunc:function(Rt,Oi,_r){(J!==Rt||oe!==Oi||Ee!==_r)&&(i.stencilFunc(Rt,Oi,_r),J=Rt,oe=Oi,Ee=_r)},setOp:function(Rt,Oi,_r){(Te!==Rt||rt!==Oi||Yt!==_r)&&(i.stencilOp(Rt,Oi,_r),Te=Rt,rt=Oi,Yt=_r)},setLocked:function(Rt){G=Rt},setClear:function(Rt){Nn!==Rt&&(i.clearStencil(Rt),Nn=Rt)},reset:function(){G=!1,Se=null,J=null,oe=null,Ee=null,Te=null,rt=null,Yt=null,Nn=null}}}const s=new t,o=new n,a=new r,l=new WeakMap,c=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,v=null,x=null,y=null,T=null,b=null,M=new Le(0,0,0),w=0,E=!1,S=null,C=null,I=null,k=null,D=null;const L=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let B=!1,te=0;const q=i.getParameter(i.VERSION);q.indexOf("WebGL")!==-1?(te=parseFloat(/^WebGL (\d)/.exec(q)[1]),B=te>=1):q.indexOf("OpenGL ES")!==-1&&(te=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),B=te>=2);let fe=null,Y={};const ne=i.getParameter(i.SCISSOR_BOX),ve=i.getParameter(i.VIEWPORT),Be=new We().fromArray(ne),O=new We().fromArray(ve);function $(G,Se,J,oe){const Ee=new Uint8Array(4),Te=i.createTexture();i.bindTexture(G,Te),i.texParameteri(G,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(G,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let rt=0;rt<J;rt++)G===i.TEXTURE_3D||G===i.TEXTURE_2D_ARRAY?i.texImage3D(Se,0,i.RGBA,1,1,oe,0,i.RGBA,i.UNSIGNED_BYTE,Ee):i.texImage2D(Se+rt,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,Ee);return Te}const ce={};ce[i.TEXTURE_2D]=$(i.TEXTURE_2D,i.TEXTURE_2D,1),ce[i.TEXTURE_CUBE_MAP]=$(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),ce[i.TEXTURE_2D_ARRAY]=$(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),ce[i.TEXTURE_3D]=$(i.TEXTURE_3D,i.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),re(i.DEPTH_TEST),o.setFunc(fs),ut(!1),ht(Jf),re(i.CULL_FACE),U(si);function re(G){u[G]!==!0&&(i.enable(G),u[G]=!0)}function we(G){u[G]!==!1&&(i.disable(G),u[G]=!1)}function ze(G,Se){return h[G]!==Se?(i.bindFramebuffer(G,Se),h[G]=Se,G===i.DRAW_FRAMEBUFFER&&(h[i.FRAMEBUFFER]=Se),G===i.FRAMEBUFFER&&(h[i.DRAW_FRAMEBUFFER]=Se),!0):!1}function Ae(G,Se){let J=f,oe=!1;if(G){J=d.get(Se),J===void 0&&(J=[],d.set(Se,J));const Ee=G.textures;if(J.length!==Ee.length||J[0]!==i.COLOR_ATTACHMENT0){for(let Te=0,rt=Ee.length;Te<rt;Te++)J[Te]=i.COLOR_ATTACHMENT0+Te;J.length=Ee.length,oe=!0}}else J[0]!==i.BACK&&(J[0]=i.BACK,oe=!0);oe&&i.drawBuffers(J)}function mt(G){return p!==G?(i.useProgram(G),p=G,!0):!1}const At={[In]:i.FUNC_ADD,[Hp]:i.FUNC_SUBTRACT,[Wp]:i.FUNC_REVERSE_SUBTRACT};At[s0]=i.MIN,At[o0]=i.MAX;const et={[Er]:i.ZERO,[$p]:i.ONE,[qp]:i.SRC_COLOR,[Ul]:i.SRC_ALPHA,[Qp]:i.SRC_ALPHA_SATURATE,[Kp]:i.DST_COLOR,[Xp]:i.DST_ALPHA,[jp]:i.ONE_MINUS_SRC_COLOR,[Fl]:i.ONE_MINUS_SRC_ALPHA,[Zp]:i.ONE_MINUS_DST_COLOR,[Yp]:i.ONE_MINUS_DST_ALPHA,[_T]:i.CONSTANT_COLOR,[vT]:i.ONE_MINUS_CONSTANT_COLOR,[yT]:i.CONSTANT_ALPHA,[xT]:i.ONE_MINUS_CONSTANT_ALPHA};function U(G,Se,J,oe,Ee,Te,rt,Yt,Nn,Rt){if(G===si){_===!0&&(we(i.BLEND),_=!1);return}if(_===!1&&(re(i.BLEND),_=!0),G!==Xo){if(G!==g||Rt!==E){if((m!==In||y!==In)&&(i.blendEquation(i.FUNC_ADD),m=In,y=In),Rt)switch(G){case Pi:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case ta:i.blendFunc(i.ONE,i.ONE);break;case na:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case ia:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Pi:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case ta:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case na:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case ia:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}v=null,x=null,T=null,b=null,M.set(0,0,0),w=0,g=G,E=Rt}return}Ee=Ee||Se,Te=Te||J,rt=rt||oe,(Se!==m||Ee!==y)&&(i.blendEquationSeparate(At[Se],At[Ee]),m=Se,y=Ee),(J!==v||oe!==x||Te!==T||rt!==b)&&(i.blendFuncSeparate(et[J],et[oe],et[Te],et[rt]),v=J,x=oe,T=Te,b=rt),(Yt.equals(M)===!1||Nn!==w)&&(i.blendColor(Yt.r,Yt.g,Yt.b,Nn),M.copy(Yt),w=Nn),g=G,E=!1}function qt(G,Se){G.side===Vn?we(i.CULL_FACE):re(i.CULL_FACE);let J=G.side===It;Se&&(J=!J),ut(J),G.blending===Pi&&G.transparent===!1?U(si):U(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),o.setFunc(G.depthFunc),o.setTest(G.depthTest),o.setMask(G.depthWrite),s.setMask(G.colorWrite);const oe=G.stencilWrite;a.setTest(oe),oe&&(a.setMask(G.stencilWriteMask),a.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),a.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Ot(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?re(i.SAMPLE_ALPHA_TO_COVERAGE):we(i.SAMPLE_ALPHA_TO_COVERAGE)}function ut(G){S!==G&&(G?i.frontFace(i.CW):i.frontFace(i.CCW),S=G)}function ht(G){G!==i0?(re(i.CULL_FACE),G!==C&&(G===Jf?i.cullFace(i.BACK):G===r0?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):we(i.CULL_FACE),C=G}function ke(G){G!==I&&(B&&i.lineWidth(G),I=G)}function Ot(G,Se,J){G?(re(i.POLYGON_OFFSET_FILL),(k!==Se||D!==J)&&(i.polygonOffset(Se,J),k=Se,D=J)):we(i.POLYGON_OFFSET_FILL)}function Oe(G){G?re(i.SCISSOR_TEST):we(i.SCISSOR_TEST)}function P(G){G===void 0&&(G=i.TEXTURE0+L-1),fe!==G&&(i.activeTexture(G),fe=G)}function A(G,Se,J){J===void 0&&(fe===null?J=i.TEXTURE0+L-1:J=fe);let oe=Y[J];oe===void 0&&(oe={type:void 0,texture:void 0},Y[J]=oe),(oe.type!==G||oe.texture!==Se)&&(fe!==J&&(i.activeTexture(J),fe=J),i.bindTexture(G,Se||ce[G]),oe.type=G,oe.texture=Se)}function W(){const G=Y[fe];G!==void 0&&G.type!==void 0&&(i.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function se(){try{i.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ue(){try{i.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ie(){try{i.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Fe(){try{i.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function be(){try{i.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ce(){try{i.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function gt(){try{i.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function me(){try{i.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ne(){try{i.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function $e(){try{i.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ye(G){Be.equals(G)===!1&&(i.scissor(G.x,G.y,G.z,G.w),Be.copy(G))}function Pe(G){O.equals(G)===!1&&(i.viewport(G.x,G.y,G.z,G.w),O.copy(G))}function pt(G,Se){let J=c.get(Se);J===void 0&&(J=new WeakMap,c.set(Se,J));let oe=J.get(G);oe===void 0&&(oe=i.getUniformBlockIndex(Se,G.name),J.set(G,oe))}function ot(G,Se){const oe=c.get(Se).get(G);l.get(Se)!==oe&&(i.uniformBlockBinding(Se,oe,G.__bindingPointIndex),l.set(Se,oe))}function Ut(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),o.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},fe=null,Y={},h={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,v=null,x=null,y=null,T=null,b=null,M=new Le(0,0,0),w=0,E=!1,S=null,C=null,I=null,k=null,D=null,Be.set(0,0,i.canvas.width,i.canvas.height),O.set(0,0,i.canvas.width,i.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:re,disable:we,bindFramebuffer:ze,drawBuffers:Ae,useProgram:mt,setBlending:U,setMaterial:qt,setFlipSided:ut,setCullFace:ht,setLineWidth:ke,setPolygonOffset:Ot,setScissorTest:Oe,activeTexture:P,bindTexture:A,unbindTexture:W,compressedTexImage2D:se,compressedTexImage3D:ue,texImage2D:Ne,texImage3D:$e,updateUBOMapping:pt,uniformBlockBinding:ot,texStorage2D:gt,texStorage3D:me,texSubImage2D:ie,texSubImage3D:Fe,compressedTexSubImage2D:be,compressedTexSubImage3D:Ce,scissor:Ye,viewport:Pe,reset:Ut}}function VC(i,e,t,n,r,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new ae,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,A){return f?new OffscreenCanvas(P,A):Ql("canvas")}function _(P,A,W){let se=1;const ue=Oe(P);if((ue.width>W||ue.height>W)&&(se=W/Math.max(ue.width,ue.height)),se<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const ie=Math.floor(se*ue.width),Fe=Math.floor(se*ue.height);h===void 0&&(h=p(ie,Fe));const be=A?p(ie,Fe):h;return be.width=ie,be.height=Fe,be.getContext("2d").drawImage(P,0,0,ie,Fe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ue.width+"x"+ue.height+") to ("+ie+"x"+Fe+")."),be}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ue.width+"x"+ue.height+")."),P;return P}function g(P){return P.generateMipmaps}function m(P){i.generateMipmap(P)}function v(P){return P.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?i.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function x(P,A,W,se,ue=!1){if(P!==null){if(i[P]!==void 0)return i[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let ie=A;if(A===i.RED&&(W===i.FLOAT&&(ie=i.R32F),W===i.HALF_FLOAT&&(ie=i.R16F),W===i.UNSIGNED_BYTE&&(ie=i.R8)),A===i.RED_INTEGER&&(W===i.UNSIGNED_BYTE&&(ie=i.R8UI),W===i.UNSIGNED_SHORT&&(ie=i.R16UI),W===i.UNSIGNED_INT&&(ie=i.R32UI),W===i.BYTE&&(ie=i.R8I),W===i.SHORT&&(ie=i.R16I),W===i.INT&&(ie=i.R32I)),A===i.RG&&(W===i.FLOAT&&(ie=i.RG32F),W===i.HALF_FLOAT&&(ie=i.RG16F),W===i.UNSIGNED_BYTE&&(ie=i.RG8)),A===i.RG_INTEGER&&(W===i.UNSIGNED_BYTE&&(ie=i.RG8UI),W===i.UNSIGNED_SHORT&&(ie=i.RG16UI),W===i.UNSIGNED_INT&&(ie=i.RG32UI),W===i.BYTE&&(ie=i.RG8I),W===i.SHORT&&(ie=i.RG16I),W===i.INT&&(ie=i.RG32I)),A===i.RGB_INTEGER&&(W===i.UNSIGNED_BYTE&&(ie=i.RGB8UI),W===i.UNSIGNED_SHORT&&(ie=i.RGB16UI),W===i.UNSIGNED_INT&&(ie=i.RGB32UI),W===i.BYTE&&(ie=i.RGB8I),W===i.SHORT&&(ie=i.RGB16I),W===i.INT&&(ie=i.RGB32I)),A===i.RGBA_INTEGER&&(W===i.UNSIGNED_BYTE&&(ie=i.RGBA8UI),W===i.UNSIGNED_SHORT&&(ie=i.RGBA16UI),W===i.UNSIGNED_INT&&(ie=i.RGBA32UI),W===i.BYTE&&(ie=i.RGBA8I),W===i.SHORT&&(ie=i.RGBA16I),W===i.INT&&(ie=i.RGBA32I)),A===i.RGB&&W===i.UNSIGNED_INT_5_9_9_9_REV&&(ie=i.RGB9_E5),A===i.RGBA){const Fe=ue?Ju:lt.getTransfer(se);W===i.FLOAT&&(ie=i.RGBA32F),W===i.HALF_FLOAT&&(ie=i.RGBA16F),W===i.UNSIGNED_BYTE&&(ie=Fe===Et?i.SRGB8_ALPHA8:i.RGBA8),W===i.UNSIGNED_SHORT_4_4_4_4&&(ie=i.RGBA4),W===i.UNSIGNED_SHORT_5_5_5_1&&(ie=i.RGB5_A1)}return(ie===i.R16F||ie===i.R32F||ie===i.RG16F||ie===i.RG32F||ie===i.RGBA16F||ie===i.RGBA32F)&&e.get("EXT_color_buffer_float"),ie}function y(P,A){let W;return P?A===null||A===Lt||A===xi?W=i.DEPTH24_STENCIL8:A===Jt?W=i.DEPTH32F_STENCIL8:A===Ki&&(W=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===Lt||A===xi?W=i.DEPTH_COMPONENT24:A===Jt?W=i.DEPTH_COMPONENT32F:A===Ki&&(W=i.DEPTH_COMPONENT16),W}function T(P,A){return g(P)===!0||P.isFramebufferTexture&&P.minFilter!==Bt&&P.minFilter!==en?Math.log2(Math.max(A.width,A.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?A.mipmaps.length:1}function b(P){const A=P.target;A.removeEventListener("dispose",b),w(A),A.isVideoTexture&&u.delete(A)}function M(P){const A=P.target;A.removeEventListener("dispose",M),S(A)}function w(P){const A=n.get(P);if(A.__webglInit===void 0)return;const W=P.source,se=d.get(W);if(se){const ue=se[A.__cacheKey];ue.usedTimes--,ue.usedTimes===0&&E(P),Object.keys(se).length===0&&d.delete(W)}n.remove(P)}function E(P){const A=n.get(P);i.deleteTexture(A.__webglTexture);const W=P.source,se=d.get(W);delete se[A.__cacheKey],o.memory.textures--}function S(P){const A=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let se=0;se<6;se++){if(Array.isArray(A.__webglFramebuffer[se]))for(let ue=0;ue<A.__webglFramebuffer[se].length;ue++)i.deleteFramebuffer(A.__webglFramebuffer[se][ue]);else i.deleteFramebuffer(A.__webglFramebuffer[se]);A.__webglDepthbuffer&&i.deleteRenderbuffer(A.__webglDepthbuffer[se])}else{if(Array.isArray(A.__webglFramebuffer))for(let se=0;se<A.__webglFramebuffer.length;se++)i.deleteFramebuffer(A.__webglFramebuffer[se]);else i.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&i.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&i.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let se=0;se<A.__webglColorRenderbuffer.length;se++)A.__webglColorRenderbuffer[se]&&i.deleteRenderbuffer(A.__webglColorRenderbuffer[se]);A.__webglDepthRenderbuffer&&i.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const W=P.textures;for(let se=0,ue=W.length;se<ue;se++){const ie=n.get(W[se]);ie.__webglTexture&&(i.deleteTexture(ie.__webglTexture),o.memory.textures--),n.remove(W[se])}n.remove(P)}let C=0;function I(){C=0}function k(){const P=C;return P>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+r.maxTextures),C+=1,P}function D(P){const A=[];return A.push(P.wrapS),A.push(P.wrapT),A.push(P.wrapR||0),A.push(P.magFilter),A.push(P.minFilter),A.push(P.anisotropy),A.push(P.internalFormat),A.push(P.format),A.push(P.type),A.push(P.generateMipmaps),A.push(P.premultiplyAlpha),A.push(P.flipY),A.push(P.unpackAlignment),A.push(P.colorSpace),A.join()}function L(P,A){const W=n.get(P);if(P.isVideoTexture&&ke(P),P.isRenderTargetTexture===!1&&P.version>0&&W.__version!==P.version){const se=P.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{O(W,P,A);return}}t.bindTexture(i.TEXTURE_2D,W.__webglTexture,i.TEXTURE0+A)}function B(P,A){const W=n.get(P);if(P.version>0&&W.__version!==P.version){O(W,P,A);return}t.bindTexture(i.TEXTURE_2D_ARRAY,W.__webglTexture,i.TEXTURE0+A)}function te(P,A){const W=n.get(P);if(P.version>0&&W.__version!==P.version){O(W,P,A);return}t.bindTexture(i.TEXTURE_3D,W.__webglTexture,i.TEXTURE0+A)}function q(P,A){const W=n.get(P);if(P.version>0&&W.__version!==P.version){$(W,P,A);return}t.bindTexture(i.TEXTURE_CUBE_MAP,W.__webglTexture,i.TEXTURE0+A)}const fe={[to]:i.REPEAT,[lr]:i.CLAMP_TO_EDGE,[no]:i.MIRRORED_REPEAT},Y={[Bt]:i.NEAREST,[em]:i.NEAREST_MIPMAP_NEAREST,[Lr]:i.NEAREST_MIPMAP_LINEAR,[en]:i.LINEAR,[Yo]:i.LINEAR_MIPMAP_NEAREST,[Jn]:i.LINEAR_MIPMAP_LINEAR},ne={[sm]:i.NEVER,[um]:i.ALWAYS,[wh]:i.LESS,[Ah]:i.LEQUAL,[om]:i.EQUAL,[cm]:i.GEQUAL,[am]:i.GREATER,[lm]:i.NOTEQUAL};function ve(P,A){if(A.type===Jt&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===en||A.magFilter===Yo||A.magFilter===Lr||A.magFilter===Jn||A.minFilter===en||A.minFilter===Yo||A.minFilter===Lr||A.minFilter===Jn)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(P,i.TEXTURE_WRAP_S,fe[A.wrapS]),i.texParameteri(P,i.TEXTURE_WRAP_T,fe[A.wrapT]),(P===i.TEXTURE_3D||P===i.TEXTURE_2D_ARRAY)&&i.texParameteri(P,i.TEXTURE_WRAP_R,fe[A.wrapR]),i.texParameteri(P,i.TEXTURE_MAG_FILTER,Y[A.magFilter]),i.texParameteri(P,i.TEXTURE_MIN_FILTER,Y[A.minFilter]),A.compareFunction&&(i.texParameteri(P,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(P,i.TEXTURE_COMPARE_FUNC,ne[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===Bt||A.minFilter!==Lr&&A.minFilter!==Jn||A.type===Jt&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||n.get(A).__currentAnisotropy){const W=e.get("EXT_texture_filter_anisotropic");i.texParameterf(P,W.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy}}}function Be(P,A){let W=!1;P.__webglInit===void 0&&(P.__webglInit=!0,A.addEventListener("dispose",b));const se=A.source;let ue=d.get(se);ue===void 0&&(ue={},d.set(se,ue));const ie=D(A);if(ie!==P.__cacheKey){ue[ie]===void 0&&(ue[ie]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,W=!0),ue[ie].usedTimes++;const Fe=ue[P.__cacheKey];Fe!==void 0&&(ue[P.__cacheKey].usedTimes--,Fe.usedTimes===0&&E(A)),P.__cacheKey=ie,P.__webglTexture=ue[ie].texture}return W}function O(P,A,W){let se=i.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(se=i.TEXTURE_2D_ARRAY),A.isData3DTexture&&(se=i.TEXTURE_3D);const ue=Be(P,A),ie=A.source;t.bindTexture(se,P.__webglTexture,i.TEXTURE0+W);const Fe=n.get(ie);if(ie.version!==Fe.__version||ue===!0){t.activeTexture(i.TEXTURE0+W);const be=lt.getPrimaries(lt.workingColorSpace),Ce=A.colorSpace===yi?null:lt.getPrimaries(A.colorSpace),gt=A.colorSpace===yi||be===Ce?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,A.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,A.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,gt);let me=_(A.image,!1,r.maxTextureSize);me=Ot(A,me);const Ne=s.convert(A.format,A.colorSpace),$e=s.convert(A.type);let Ye=x(A.internalFormat,Ne,$e,A.colorSpace,A.isVideoTexture);ve(se,A);let Pe;const pt=A.mipmaps,ot=A.isVideoTexture!==!0,Ut=Fe.__version===void 0||ue===!0,G=ie.dataReady,Se=T(A,me);if(A.isDepthTexture)Ye=y(A.format===Si,A.type),Ut&&(ot?t.texStorage2D(i.TEXTURE_2D,1,Ye,me.width,me.height):t.texImage2D(i.TEXTURE_2D,0,Ye,me.width,me.height,0,Ne,$e,null));else if(A.isDataTexture)if(pt.length>0){ot&&Ut&&t.texStorage2D(i.TEXTURE_2D,Se,Ye,pt[0].width,pt[0].height);for(let J=0,oe=pt.length;J<oe;J++)Pe=pt[J],ot?G&&t.texSubImage2D(i.TEXTURE_2D,J,0,0,Pe.width,Pe.height,Ne,$e,Pe.data):t.texImage2D(i.TEXTURE_2D,J,Ye,Pe.width,Pe.height,0,Ne,$e,Pe.data);A.generateMipmaps=!1}else ot?(Ut&&t.texStorage2D(i.TEXTURE_2D,Se,Ye,me.width,me.height),G&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,me.width,me.height,Ne,$e,me.data)):t.texImage2D(i.TEXTURE_2D,0,Ye,me.width,me.height,0,Ne,$e,me.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){ot&&Ut&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Se,Ye,pt[0].width,pt[0].height,me.depth);for(let J=0,oe=pt.length;J<oe;J++)if(Pe=pt[J],A.format!==Qt)if(Ne!==null)if(ot){if(G)if(A.layerUpdates.size>0){const Ee=c_(Pe.width,Pe.height,A.format,A.type);for(const Te of A.layerUpdates){const rt=Pe.data.subarray(Te*Ee/Pe.data.BYTES_PER_ELEMENT,(Te+1)*Ee/Pe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,J,0,0,Te,Pe.width,Pe.height,1,Ne,rt)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,J,0,0,0,Pe.width,Pe.height,me.depth,Ne,Pe.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,J,Ye,Pe.width,Pe.height,me.depth,0,Pe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ot?G&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,J,0,0,0,Pe.width,Pe.height,me.depth,Ne,$e,Pe.data):t.texImage3D(i.TEXTURE_2D_ARRAY,J,Ye,Pe.width,Pe.height,me.depth,0,Ne,$e,Pe.data)}else{ot&&Ut&&t.texStorage2D(i.TEXTURE_2D,Se,Ye,pt[0].width,pt[0].height);for(let J=0,oe=pt.length;J<oe;J++)Pe=pt[J],A.format!==Qt?Ne!==null?ot?G&&t.compressedTexSubImage2D(i.TEXTURE_2D,J,0,0,Pe.width,Pe.height,Ne,Pe.data):t.compressedTexImage2D(i.TEXTURE_2D,J,Ye,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ot?G&&t.texSubImage2D(i.TEXTURE_2D,J,0,0,Pe.width,Pe.height,Ne,$e,Pe.data):t.texImage2D(i.TEXTURE_2D,J,Ye,Pe.width,Pe.height,0,Ne,$e,Pe.data)}else if(A.isDataArrayTexture)if(ot){if(Ut&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Se,Ye,me.width,me.height,me.depth),G)if(A.layerUpdates.size>0){const J=c_(me.width,me.height,A.format,A.type);for(const oe of A.layerUpdates){const Ee=me.data.subarray(oe*J/me.data.BYTES_PER_ELEMENT,(oe+1)*J/me.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,oe,me.width,me.height,1,Ne,$e,Ee)}A.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,me.width,me.height,me.depth,Ne,$e,me.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,Ye,me.width,me.height,me.depth,0,Ne,$e,me.data);else if(A.isData3DTexture)ot?(Ut&&t.texStorage3D(i.TEXTURE_3D,Se,Ye,me.width,me.height,me.depth),G&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,me.width,me.height,me.depth,Ne,$e,me.data)):t.texImage3D(i.TEXTURE_3D,0,Ye,me.width,me.height,me.depth,0,Ne,$e,me.data);else if(A.isFramebufferTexture){if(Ut)if(ot)t.texStorage2D(i.TEXTURE_2D,Se,Ye,me.width,me.height);else{let J=me.width,oe=me.height;for(let Ee=0;Ee<Se;Ee++)t.texImage2D(i.TEXTURE_2D,Ee,Ye,J,oe,0,Ne,$e,null),J>>=1,oe>>=1}}else if(pt.length>0){if(ot&&Ut){const J=Oe(pt[0]);t.texStorage2D(i.TEXTURE_2D,Se,Ye,J.width,J.height)}for(let J=0,oe=pt.length;J<oe;J++)Pe=pt[J],ot?G&&t.texSubImage2D(i.TEXTURE_2D,J,0,0,Ne,$e,Pe):t.texImage2D(i.TEXTURE_2D,J,Ye,Ne,$e,Pe);A.generateMipmaps=!1}else if(ot){if(Ut){const J=Oe(me);t.texStorage2D(i.TEXTURE_2D,Se,Ye,J.width,J.height)}G&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Ne,$e,me)}else t.texImage2D(i.TEXTURE_2D,0,Ye,Ne,$e,me);g(A)&&m(se),Fe.__version=ie.version,A.onUpdate&&A.onUpdate(A)}P.__version=A.version}function $(P,A,W){if(A.image.length!==6)return;const se=Be(P,A),ue=A.source;t.bindTexture(i.TEXTURE_CUBE_MAP,P.__webglTexture,i.TEXTURE0+W);const ie=n.get(ue);if(ue.version!==ie.__version||se===!0){t.activeTexture(i.TEXTURE0+W);const Fe=lt.getPrimaries(lt.workingColorSpace),be=A.colorSpace===yi?null:lt.getPrimaries(A.colorSpace),Ce=A.colorSpace===yi||Fe===be?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,A.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,A.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ce);const gt=A.isCompressedTexture||A.image[0].isCompressedTexture,me=A.image[0]&&A.image[0].isDataTexture,Ne=[];for(let oe=0;oe<6;oe++)!gt&&!me?Ne[oe]=_(A.image[oe],!0,r.maxCubemapSize):Ne[oe]=me?A.image[oe].image:A.image[oe],Ne[oe]=Ot(A,Ne[oe]);const $e=Ne[0],Ye=s.convert(A.format,A.colorSpace),Pe=s.convert(A.type),pt=x(A.internalFormat,Ye,Pe,A.colorSpace),ot=A.isVideoTexture!==!0,Ut=ie.__version===void 0||se===!0,G=ue.dataReady;let Se=T(A,$e);ve(i.TEXTURE_CUBE_MAP,A);let J;if(gt){ot&&Ut&&t.texStorage2D(i.TEXTURE_CUBE_MAP,Se,pt,$e.width,$e.height);for(let oe=0;oe<6;oe++){J=Ne[oe].mipmaps;for(let Ee=0;Ee<J.length;Ee++){const Te=J[Ee];A.format!==Qt?Ye!==null?ot?G&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,0,0,Te.width,Te.height,Ye,Te.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,pt,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ot?G&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,0,0,Te.width,Te.height,Ye,Pe,Te.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,pt,Te.width,Te.height,0,Ye,Pe,Te.data)}}}else{if(J=A.mipmaps,ot&&Ut){J.length>0&&Se++;const oe=Oe(Ne[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,Se,pt,oe.width,oe.height)}for(let oe=0;oe<6;oe++)if(me){ot?G&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,0,0,Ne[oe].width,Ne[oe].height,Ye,Pe,Ne[oe].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,pt,Ne[oe].width,Ne[oe].height,0,Ye,Pe,Ne[oe].data);for(let Ee=0;Ee<J.length;Ee++){const rt=J[Ee].image[oe].image;ot?G&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,0,0,rt.width,rt.height,Ye,Pe,rt.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,pt,rt.width,rt.height,0,Ye,Pe,rt.data)}}else{ot?G&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,0,0,Ye,Pe,Ne[oe]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,pt,Ye,Pe,Ne[oe]);for(let Ee=0;Ee<J.length;Ee++){const Te=J[Ee];ot?G&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,0,0,Ye,Pe,Te.image[oe]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,pt,Ye,Pe,Te.image[oe])}}}g(A)&&m(i.TEXTURE_CUBE_MAP),ie.__version=ue.version,A.onUpdate&&A.onUpdate(A)}P.__version=A.version}function ce(P,A,W,se,ue,ie){const Fe=s.convert(W.format,W.colorSpace),be=s.convert(W.type),Ce=x(W.internalFormat,Fe,be,W.colorSpace),gt=n.get(A),me=n.get(W);if(me.__renderTarget=A,!gt.__hasExternalTextures){const Ne=Math.max(1,A.width>>ie),$e=Math.max(1,A.height>>ie);ue===i.TEXTURE_3D||ue===i.TEXTURE_2D_ARRAY?t.texImage3D(ue,ie,Ce,Ne,$e,A.depth,0,Fe,be,null):t.texImage2D(ue,ie,Ce,Ne,$e,0,Fe,be,null)}t.bindFramebuffer(i.FRAMEBUFFER,P),ht(A)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,se,ue,me.__webglTexture,0,ut(A)):(ue===i.TEXTURE_2D||ue>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&ue<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,se,ue,me.__webglTexture,ie),t.bindFramebuffer(i.FRAMEBUFFER,null)}function re(P,A,W){if(i.bindRenderbuffer(i.RENDERBUFFER,P),A.depthBuffer){const se=A.depthTexture,ue=se&&se.isDepthTexture?se.type:null,ie=y(A.stencilBuffer,ue),Fe=A.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,be=ut(A);ht(A)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,be,ie,A.width,A.height):W?i.renderbufferStorageMultisample(i.RENDERBUFFER,be,ie,A.width,A.height):i.renderbufferStorage(i.RENDERBUFFER,ie,A.width,A.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,Fe,i.RENDERBUFFER,P)}else{const se=A.textures;for(let ue=0;ue<se.length;ue++){const ie=se[ue],Fe=s.convert(ie.format,ie.colorSpace),be=s.convert(ie.type),Ce=x(ie.internalFormat,Fe,be,ie.colorSpace),gt=ut(A);W&&ht(A)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,gt,Ce,A.width,A.height):ht(A)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,gt,Ce,A.width,A.height):i.renderbufferStorage(i.RENDERBUFFER,Ce,A.width,A.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function we(P,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,P),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const se=n.get(A.depthTexture);se.__renderTarget=A,(!se.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),L(A.depthTexture,0);const ue=se.__webglTexture,ie=ut(A);if(A.depthTexture.format===bi)ht(A)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ue,0,ie):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ue,0);else if(A.depthTexture.format===Si)ht(A)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ue,0,ie):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ue,0);else throw new Error("Unknown depthTexture format")}function ze(P){const A=n.get(P),W=P.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==P.depthTexture){const se=P.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),se){const ue=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,se.removeEventListener("dispose",ue)};se.addEventListener("dispose",ue),A.__depthDisposeCallback=ue}A.__boundDepthTexture=se}if(P.depthTexture&&!A.__autoAllocateDepthBuffer){if(W)throw new Error("target.depthTexture not supported in Cube render targets");we(A.__webglFramebuffer,P)}else if(W){A.__webglDepthbuffer=[];for(let se=0;se<6;se++)if(t.bindFramebuffer(i.FRAMEBUFFER,A.__webglFramebuffer[se]),A.__webglDepthbuffer[se]===void 0)A.__webglDepthbuffer[se]=i.createRenderbuffer(),re(A.__webglDepthbuffer[se],P,!1);else{const ue=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ie=A.__webglDepthbuffer[se];i.bindRenderbuffer(i.RENDERBUFFER,ie),i.framebufferRenderbuffer(i.FRAMEBUFFER,ue,i.RENDERBUFFER,ie)}}else if(t.bindFramebuffer(i.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=i.createRenderbuffer(),re(A.__webglDepthbuffer,P,!1);else{const se=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ue=A.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,ue),i.framebufferRenderbuffer(i.FRAMEBUFFER,se,i.RENDERBUFFER,ue)}t.bindFramebuffer(i.FRAMEBUFFER,null)}function Ae(P,A,W){const se=n.get(P);A!==void 0&&ce(se.__webglFramebuffer,P,P.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),W!==void 0&&ze(P)}function mt(P){const A=P.texture,W=n.get(P),se=n.get(A);P.addEventListener("dispose",M);const ue=P.textures,ie=P.isWebGLCubeRenderTarget===!0,Fe=ue.length>1;if(Fe||(se.__webglTexture===void 0&&(se.__webglTexture=i.createTexture()),se.__version=A.version,o.memory.textures++),ie){W.__webglFramebuffer=[];for(let be=0;be<6;be++)if(A.mipmaps&&A.mipmaps.length>0){W.__webglFramebuffer[be]=[];for(let Ce=0;Ce<A.mipmaps.length;Ce++)W.__webglFramebuffer[be][Ce]=i.createFramebuffer()}else W.__webglFramebuffer[be]=i.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){W.__webglFramebuffer=[];for(let be=0;be<A.mipmaps.length;be++)W.__webglFramebuffer[be]=i.createFramebuffer()}else W.__webglFramebuffer=i.createFramebuffer();if(Fe)for(let be=0,Ce=ue.length;be<Ce;be++){const gt=n.get(ue[be]);gt.__webglTexture===void 0&&(gt.__webglTexture=i.createTexture(),o.memory.textures++)}if(P.samples>0&&ht(P)===!1){W.__webglMultisampledFramebuffer=i.createFramebuffer(),W.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,W.__webglMultisampledFramebuffer);for(let be=0;be<ue.length;be++){const Ce=ue[be];W.__webglColorRenderbuffer[be]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,W.__webglColorRenderbuffer[be]);const gt=s.convert(Ce.format,Ce.colorSpace),me=s.convert(Ce.type),Ne=x(Ce.internalFormat,gt,me,Ce.colorSpace,P.isXRRenderTarget===!0),$e=ut(P);i.renderbufferStorageMultisample(i.RENDERBUFFER,$e,Ne,P.width,P.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+be,i.RENDERBUFFER,W.__webglColorRenderbuffer[be])}i.bindRenderbuffer(i.RENDERBUFFER,null),P.depthBuffer&&(W.__webglDepthRenderbuffer=i.createRenderbuffer(),re(W.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(ie){t.bindTexture(i.TEXTURE_CUBE_MAP,se.__webglTexture),ve(i.TEXTURE_CUBE_MAP,A);for(let be=0;be<6;be++)if(A.mipmaps&&A.mipmaps.length>0)for(let Ce=0;Ce<A.mipmaps.length;Ce++)ce(W.__webglFramebuffer[be][Ce],P,A,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+be,Ce);else ce(W.__webglFramebuffer[be],P,A,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);g(A)&&m(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Fe){for(let be=0,Ce=ue.length;be<Ce;be++){const gt=ue[be],me=n.get(gt);t.bindTexture(i.TEXTURE_2D,me.__webglTexture),ve(i.TEXTURE_2D,gt),ce(W.__webglFramebuffer,P,gt,i.COLOR_ATTACHMENT0+be,i.TEXTURE_2D,0),g(gt)&&m(i.TEXTURE_2D)}t.unbindTexture()}else{let be=i.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(be=P.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(be,se.__webglTexture),ve(be,A),A.mipmaps&&A.mipmaps.length>0)for(let Ce=0;Ce<A.mipmaps.length;Ce++)ce(W.__webglFramebuffer[Ce],P,A,i.COLOR_ATTACHMENT0,be,Ce);else ce(W.__webglFramebuffer,P,A,i.COLOR_ATTACHMENT0,be,0);g(A)&&m(be),t.unbindTexture()}P.depthBuffer&&ze(P)}function At(P){const A=P.textures;for(let W=0,se=A.length;W<se;W++){const ue=A[W];if(g(ue)){const ie=v(P),Fe=n.get(ue).__webglTexture;t.bindTexture(ie,Fe),m(ie),t.unbindTexture()}}}const et=[],U=[];function qt(P){if(P.samples>0){if(ht(P)===!1){const A=P.textures,W=P.width,se=P.height;let ue=i.COLOR_BUFFER_BIT;const ie=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Fe=n.get(P),be=A.length>1;if(be)for(let Ce=0;Ce<A.length;Ce++)t.bindFramebuffer(i.FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ce,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,Fe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ce,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Fe.__webglFramebuffer);for(let Ce=0;Ce<A.length;Ce++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(ue|=i.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(ue|=i.STENCIL_BUFFER_BIT)),be){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Fe.__webglColorRenderbuffer[Ce]);const gt=n.get(A[Ce]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,gt,0)}i.blitFramebuffer(0,0,W,se,0,0,W,se,ue,i.NEAREST),l===!0&&(et.length=0,U.length=0,et.push(i.COLOR_ATTACHMENT0+Ce),P.depthBuffer&&P.resolveDepthBuffer===!1&&(et.push(ie),U.push(ie),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,U)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,et))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),be)for(let Ce=0;Ce<A.length;Ce++){t.bindFramebuffer(i.FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ce,i.RENDERBUFFER,Fe.__webglColorRenderbuffer[Ce]);const gt=n.get(A[Ce]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,Fe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ce,i.TEXTURE_2D,gt,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Fe.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const A=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[A])}}}function ut(P){return Math.min(r.maxSamples,P.samples)}function ht(P){const A=n.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function ke(P){const A=o.render.frame;u.get(P)!==A&&(u.set(P,A),P.update())}function Ot(P,A){const W=P.colorSpace,se=P.format,ue=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||W!==hr&&W!==yi&&(lt.getTransfer(W)===Et?(se!==Qt||ue!==Zt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",W)),A}function Oe(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=k,this.resetTextureUnits=I,this.setTexture2D=L,this.setTexture2DArray=B,this.setTexture3D=te,this.setTextureCube=q,this.rebindTextures=Ae,this.setupRenderTarget=mt,this.updateRenderTargetMipmap=At,this.updateMultisampleRenderTarget=qt,this.setupDepthRenderbuffer=ze,this.setupFrameBufferTexture=ce,this.useMultisampledRTT=ht}function HC(i,e){function t(n,r=yi){let s;const o=lt.getTransfer(r);if(n===Zt)return i.UNSIGNED_BYTE;if(n===Th)return i.UNSIGNED_SHORT_4_4_4_4;if(n===Mh)return i.UNSIGNED_SHORT_5_5_5_1;if(n===Eh)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===Xs)return i.BYTE;if(n===Ys)return i.SHORT;if(n===Ki)return i.UNSIGNED_SHORT;if(n===Sn)return i.INT;if(n===Lt)return i.UNSIGNED_INT;if(n===Jt)return i.FLOAT;if(n===Fn)return i.HALF_FLOAT;if(n===tm)return i.ALPHA;if(n===pc)return i.RGB;if(n===Qt)return i.RGBA;if(n===nm)return i.LUMINANCE;if(n===im)return i.LUMINANCE_ALPHA;if(n===bi)return i.DEPTH_COMPONENT;if(n===Si)return i.DEPTH_STENCIL;if(n===mc)return i.RED;if(n===Ca)return i.RED_INTEGER;if(n===io)return i.RG;if(n===Na)return i.RG_INTEGER;if(n===Pa)return i.RGBA_INTEGER;if(n===Ks||n===ls||n===cs||n===us)if(o===Et)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Ks)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ls)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===cs)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===us)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Ks)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ls)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===cs)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===us)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Wl||n===$l||n===ql||n===jl)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Wl)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===$l)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ql)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===jl)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Xl||n===ra||n===sa)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Xl||n===ra)return o===Et?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===sa)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===oa||n===aa||n===la||n===ca||n===ua||n===ha||n===da||n===fa||n===pa||n===ma||n===ga||n===_a||n===va||n===ya)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===oa)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===aa)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===la)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===ca)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ua)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===ha)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===da)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===fa)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===pa)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ma)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===ga)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===_a)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===va)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ya)return o===Et?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Zs||n===ep||n===tp)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Zs)return o===Et?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===ep)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===tp)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===rm||n===Yl||n===Kl||n===Zl)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Zs)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Yl)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Kl)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Zl)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===xi?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}const WC=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,$C=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class qC{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const r=new dn,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new dr({vertexShader:WC,fragmentShader:$C,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new tn(new vc(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class jC extends Wr{constructor(e,t){super();const n=this;let r=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,d=null,f=null,p=null;const _=new qC,g=t.getContextAttributes();let m=null,v=null;const x=[],y=[],T=new ae;let b=null;const M=new Tn;M.viewport=new We;const w=new Tn;w.viewport=new We;const E=[M,w],S=new D0;let C=null,I=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(O){let $=x[O];return $===void 0&&($=new Gu,x[O]=$),$.getTargetRaySpace()},this.getControllerGrip=function(O){let $=x[O];return $===void 0&&($=new Gu,x[O]=$),$.getGripSpace()},this.getHand=function(O){let $=x[O];return $===void 0&&($=new Gu,x[O]=$),$.getHandSpace()};function k(O){const $=y.indexOf(O.inputSource);if($===-1)return;const ce=x[$];ce!==void 0&&(ce.update(O.inputSource,O.frame,c||o),ce.dispatchEvent({type:O.type,data:O.inputSource}))}function D(){r.removeEventListener("select",k),r.removeEventListener("selectstart",k),r.removeEventListener("selectend",k),r.removeEventListener("squeeze",k),r.removeEventListener("squeezestart",k),r.removeEventListener("squeezeend",k),r.removeEventListener("end",D),r.removeEventListener("inputsourceschange",L);for(let O=0;O<x.length;O++){const $=y[O];$!==null&&(y[O]=null,x[O].disconnect($))}C=null,I=null,_.reset(),e.setRenderTarget(m),f=null,d=null,h=null,r=null,v=null,Be.stop(),n.isPresenting=!1,e.setPixelRatio(b),e.setSize(T.width,T.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(O){s=O,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(O){a=O,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(O){c=O},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(O){if(r=O,r!==null){if(m=e.getRenderTarget(),r.addEventListener("select",k),r.addEventListener("selectstart",k),r.addEventListener("selectend",k),r.addEventListener("squeeze",k),r.addEventListener("squeezestart",k),r.addEventListener("squeezeend",k),r.addEventListener("end",D),r.addEventListener("inputsourceschange",L),g.xrCompatible!==!0&&await t.makeXRCompatible(),b=e.getPixelRatio(),e.getSize(T),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let ce=null,re=null,we=null;g.depth&&(we=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ce=g.stencil?Si:bi,re=g.stencil?xi:Lt);const ze={colorFormat:t.RGBA8,depthFormat:we,scaleFactor:s};h=new XRWebGLBinding(r,t),d=h.createProjectionLayer(ze),r.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),v=new _s(d.textureWidth,d.textureHeight,{format:Qt,type:Zt,depthTexture:new Di(d.textureWidth,d.textureHeight,re,void 0,void 0,void 0,void 0,void 0,void 0,ce),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const ce={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(r,t,ce),r.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),v=new _s(f.framebufferWidth,f.framebufferHeight,{format:Qt,type:Zt,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}v.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),Be.setContext(r),Be.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function L(O){for(let $=0;$<O.removed.length;$++){const ce=O.removed[$],re=y.indexOf(ce);re>=0&&(y[re]=null,x[re].disconnect(ce))}for(let $=0;$<O.added.length;$++){const ce=O.added[$];let re=y.indexOf(ce);if(re===-1){for(let ze=0;ze<x.length;ze++)if(ze>=y.length){y.push(ce),re=ze;break}else if(y[ze]===null){y[ze]=ce,re=ze;break}if(re===-1)break}const we=x[re];we&&we.connect(ce)}}const B=new N,te=new N;function q(O,$,ce){B.setFromMatrixPosition($.matrixWorld),te.setFromMatrixPosition(ce.matrixWorld);const re=B.distanceTo(te),we=$.projectionMatrix.elements,ze=ce.projectionMatrix.elements,Ae=we[14]/(we[10]-1),mt=we[14]/(we[10]+1),At=(we[9]+1)/we[5],et=(we[9]-1)/we[5],U=(we[8]-1)/we[0],qt=(ze[8]+1)/ze[0],ut=Ae*U,ht=Ae*qt,ke=re/(-U+qt),Ot=ke*-U;if($.matrixWorld.decompose(O.position,O.quaternion,O.scale),O.translateX(Ot),O.translateZ(ke),O.matrixWorld.compose(O.position,O.quaternion,O.scale),O.matrixWorldInverse.copy(O.matrixWorld).invert(),we[10]===-1)O.projectionMatrix.copy($.projectionMatrix),O.projectionMatrixInverse.copy($.projectionMatrixInverse);else{const Oe=Ae+ke,P=mt+ke,A=ut-Ot,W=ht+(re-Ot),se=At*mt/P*Oe,ue=et*mt/P*Oe;O.projectionMatrix.makePerspective(A,W,se,ue,Oe,P),O.projectionMatrixInverse.copy(O.projectionMatrix).invert()}}function fe(O,$){$===null?O.matrixWorld.copy(O.matrix):O.matrixWorld.multiplyMatrices($.matrixWorld,O.matrix),O.matrixWorldInverse.copy(O.matrixWorld).invert()}this.updateCamera=function(O){if(r===null)return;let $=O.near,ce=O.far;_.texture!==null&&(_.depthNear>0&&($=_.depthNear),_.depthFar>0&&(ce=_.depthFar)),S.near=w.near=M.near=$,S.far=w.far=M.far=ce,(C!==S.near||I!==S.far)&&(r.updateRenderState({depthNear:S.near,depthFar:S.far}),C=S.near,I=S.far),M.layers.mask=O.layers.mask|2,w.layers.mask=O.layers.mask|4,S.layers.mask=M.layers.mask|w.layers.mask;const re=O.parent,we=S.cameras;fe(S,re);for(let ze=0;ze<we.length;ze++)fe(we[ze],re);we.length===2?q(S,M,w):S.projectionMatrix.copy(M.projectionMatrix),Y(O,S,re)};function Y(O,$,ce){ce===null?O.matrix.copy($.matrixWorld):(O.matrix.copy(ce.matrixWorld),O.matrix.invert(),O.matrix.multiply($.matrixWorld)),O.matrix.decompose(O.position,O.quaternion,O.scale),O.updateMatrixWorld(!0),O.projectionMatrix.copy($.projectionMatrix),O.projectionMatrixInverse.copy($.projectionMatrixInverse),O.isPerspectiveCamera&&(O.fov=ro*2*Math.atan(1/O.projectionMatrix.elements[5]),O.zoom=1)}this.getCamera=function(){return S},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(O){l=O,d!==null&&(d.fixedFoveation=O),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=O)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(S)};let ne=null;function ve(O,$){if(u=$.getViewerPose(c||o),p=$,u!==null){const ce=u.views;f!==null&&(e.setRenderTargetFramebuffer(v,f.framebuffer),e.setRenderTarget(v));let re=!1;ce.length!==S.cameras.length&&(S.cameras.length=0,re=!0);for(let Ae=0;Ae<ce.length;Ae++){const mt=ce[Ae];let At=null;if(f!==null)At=f.getViewport(mt);else{const U=h.getViewSubImage(d,mt);At=U.viewport,Ae===0&&(e.setRenderTargetTextures(v,U.colorTexture,U.depthStencilTexture),e.setRenderTarget(v))}let et=E[Ae];et===void 0&&(et=new Tn,et.layers.enable(Ae),et.viewport=new We,E[Ae]=et),et.matrix.fromArray(mt.transform.matrix),et.matrix.decompose(et.position,et.quaternion,et.scale),et.projectionMatrix.fromArray(mt.projectionMatrix),et.projectionMatrixInverse.copy(et.projectionMatrix).invert(),et.viewport.set(At.x,At.y,At.width,At.height),Ae===0&&(S.matrix.copy(et.matrix),S.matrix.decompose(S.position,S.quaternion,S.scale)),re===!0&&S.cameras.push(et)}const we=r.enabledFeatures;if(we&&we.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&h){const Ae=h.getDepthInformation(ce[0]);Ae&&Ae.isValid&&Ae.texture&&_.init(e,Ae,r.renderState)}}for(let ce=0;ce<x.length;ce++){const re=y[ce],we=x[ce];re!==null&&we!==void 0&&we.update(re,$,c||o)}ne&&ne(O,$),$.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:$}),p=null}const Be=new U0;Be.setAnimationLoop(ve),this.setAnimationLoop=function(O){ne=O},this.dispose=function(){}}}const Ds=new ai,XC=new ft;function YC(i,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function n(g,m){m.color.getRGB(g.fogColor.value,y0(i)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function r(g,m,v,x,y){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(g,m):m.isMeshToonMaterial?(s(g,m),h(g,m)):m.isMeshPhongMaterial?(s(g,m),u(g,m)):m.isMeshStandardMaterial?(s(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,y)):m.isMeshMatcapMaterial?(s(g,m),p(g,m)):m.isMeshDepthMaterial?s(g,m):m.isMeshDistanceMaterial?(s(g,m),_(g,m)):m.isMeshNormalMaterial?s(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?l(g,m,v,x):m.isSpriteMaterial?c(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===It&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===It&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const v=e.get(m),x=v.envMap,y=v.envMapRotation;x&&(g.envMap.value=x,Ds.copy(y),Ds.x*=-1,Ds.y*=-1,Ds.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Ds.y*=-1,Ds.z*=-1),g.envMapRotation.value.setFromMatrix4(XC.makeRotationFromEuler(Ds)),g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function l(g,m,v,x){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*v,g.scale.value=x*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function c(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,v){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===It&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=v.texture,g.transmissionSamplerSize.value.set(v.width,v.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){const v=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(v.matrixWorld),g.nearDistance.value=v.shadow.camera.near,g.farDistance.value=v.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function KC(i,e,t,n){let r={},s={},o=[];const a=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function l(v,x){const y=x.program;n.uniformBlockBinding(v,y)}function c(v,x){let y=r[v.id];y===void 0&&(p(v),y=u(v),r[v.id]=y,v.addEventListener("dispose",g));const T=x.program;n.updateUBOMapping(v,T);const b=e.render.frame;s[v.id]!==b&&(d(v),s[v.id]=b)}function u(v){const x=h();v.__bindingPointIndex=x;const y=i.createBuffer(),T=v.__size,b=v.usage;return i.bindBuffer(i.UNIFORM_BUFFER,y),i.bufferData(i.UNIFORM_BUFFER,T,b),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,x,y),y}function h(){for(let v=0;v<a;v++)if(o.indexOf(v)===-1)return o.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(v){const x=r[v.id],y=v.uniforms,T=v.__cache;i.bindBuffer(i.UNIFORM_BUFFER,x);for(let b=0,M=y.length;b<M;b++){const w=Array.isArray(y[b])?y[b]:[y[b]];for(let E=0,S=w.length;E<S;E++){const C=w[E];if(f(C,b,E,T)===!0){const I=C.__offset,k=Array.isArray(C.value)?C.value:[C.value];let D=0;for(let L=0;L<k.length;L++){const B=k[L],te=_(B);typeof B=="number"||typeof B=="boolean"?(C.__data[0]=B,i.bufferSubData(i.UNIFORM_BUFFER,I+D,C.__data)):B.isMatrix3?(C.__data[0]=B.elements[0],C.__data[1]=B.elements[1],C.__data[2]=B.elements[2],C.__data[3]=0,C.__data[4]=B.elements[3],C.__data[5]=B.elements[4],C.__data[6]=B.elements[5],C.__data[7]=0,C.__data[8]=B.elements[6],C.__data[9]=B.elements[7],C.__data[10]=B.elements[8],C.__data[11]=0):(B.toArray(C.__data,D),D+=te.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,I,C.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function f(v,x,y,T){const b=v.value,M=x+"_"+y;if(T[M]===void 0)return typeof b=="number"||typeof b=="boolean"?T[M]=b:T[M]=b.clone(),!0;{const w=T[M];if(typeof b=="number"||typeof b=="boolean"){if(w!==b)return T[M]=b,!0}else if(w.equals(b)===!1)return w.copy(b),!0}return!1}function p(v){const x=v.uniforms;let y=0;const T=16;for(let M=0,w=x.length;M<w;M++){const E=Array.isArray(x[M])?x[M]:[x[M]];for(let S=0,C=E.length;S<C;S++){const I=E[S],k=Array.isArray(I.value)?I.value:[I.value];for(let D=0,L=k.length;D<L;D++){const B=k[D],te=_(B),q=y%T,fe=q%te.boundary,Y=q+fe;y+=fe,Y!==0&&T-Y<te.storage&&(y+=T-Y),I.__data=new Float32Array(te.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=y,y+=te.storage}}}const b=y%T;return b>0&&(y+=T-b),v.__size=y,v.__cache={},this}function _(v){const x={boundary:0,storage:0};return typeof v=="number"||typeof v=="boolean"?(x.boundary=4,x.storage=4):v.isVector2?(x.boundary=8,x.storage=8):v.isVector3||v.isColor?(x.boundary=16,x.storage=12):v.isVector4?(x.boundary=16,x.storage=16):v.isMatrix3?(x.boundary=48,x.storage=48):v.isMatrix4?(x.boundary=64,x.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),x}function g(v){const x=v.target;x.removeEventListener("dispose",g);const y=o.indexOf(x.__bindingPointIndex);o.splice(y,1),i.deleteBuffer(r[x.id]),delete r[x.id],delete s[x.id]}function m(){for(const v in r)i.deleteBuffer(r[v]);o=[],r={},s={}}return{bind:l,update:c,dispose:m}}class ZC{constructor(e={}){const{canvas:t=g0(),context:n=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),_=new Int32Array(4);let g=null,m=null;const v=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=oi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let T=!1;this._outputColorSpace=Ie;let b=0,M=0,w=null,E=-1,S=null;const C=new We,I=new We;let k=null;const D=new Le(0);let L=0,B=t.width,te=t.height,q=1,fe=null,Y=null;const ne=new We(0,0,B,te),ve=new We(0,0,B,te);let Be=!1;const O=new Dh;let $=!1,ce=!1;const re=new ft,we=new ft,ze=new N,Ae=new We,mt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let At=!1;function et(){return w===null?q:1}let U=n;function qt(R,z){return t.getContext(R,z)}try{const R={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Ra}`),t.addEventListener("webglcontextlost",oe,!1),t.addEventListener("webglcontextrestored",Ee,!1),t.addEventListener("webglcontextcreationerror",Te,!1),U===null){const z="webgl2";if(U=qt(z,R),U===null)throw qt(z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let ut,ht,ke,Ot,Oe,P,A,W,se,ue,ie,Fe,be,Ce,gt,me,Ne,$e,Ye,Pe,pt,ot,Ut,G;function Se(){ut=new aR(U),ut.init(),ot=new HC(U,ut),ht=new eR(U,ut,e,ot),ke=new zC(U,ut),ht.reverseDepthBuffer&&d&&ke.buffers.depth.setReversed(!0),Ot=new uR(U),Oe=new RC,P=new VC(U,ut,ke,Oe,ht,ot,Ot),A=new nR(y),W=new oR(y),se=new gE(U),Ut=new QA(U,se),ue=new lR(U,se,Ot,Ut),ie=new dR(U,ue,se,Ot),Ye=new hR(U,ht,P),me=new tR(Oe),Fe=new AC(y,A,W,ut,ht,Ut,me),be=new YC(y,Oe),Ce=new NC,gt=new FC(ut),$e=new ZA(y,A,W,ke,ie,f,l),Ne=new kC(y,ie,ht),G=new KC(U,Ot,ht,ke),Pe=new JA(U,ut,Ot),pt=new cR(U,ut,Ot),Ot.programs=Fe.programs,y.capabilities=ht,y.extensions=ut,y.properties=Oe,y.renderLists=Ce,y.shadowMap=Ne,y.state=ke,y.info=Ot}Se();const J=new jC(y,U);this.xr=J,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const R=ut.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=ut.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(R){R!==void 0&&(q=R,this.setSize(B,te,!1))},this.getSize=function(R){return R.set(B,te)},this.setSize=function(R,z,j=!0){if(J.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=R,te=z,t.width=Math.floor(R*q),t.height=Math.floor(z*q),j===!0&&(t.style.width=R+"px",t.style.height=z+"px"),this.setViewport(0,0,R,z)},this.getDrawingBufferSize=function(R){return R.set(B*q,te*q).floor()},this.setDrawingBufferSize=function(R,z,j){B=R,te=z,q=j,t.width=Math.floor(R*j),t.height=Math.floor(z*j),this.setViewport(0,0,R,z)},this.getCurrentViewport=function(R){return R.copy(C)},this.getViewport=function(R){return R.copy(ne)},this.setViewport=function(R,z,j,X){R.isVector4?ne.set(R.x,R.y,R.z,R.w):ne.set(R,z,j,X),ke.viewport(C.copy(ne).multiplyScalar(q).round())},this.getScissor=function(R){return R.copy(ve)},this.setScissor=function(R,z,j,X){R.isVector4?ve.set(R.x,R.y,R.z,R.w):ve.set(R,z,j,X),ke.scissor(I.copy(ve).multiplyScalar(q).round())},this.getScissorTest=function(){return Be},this.setScissorTest=function(R){ke.setScissorTest(Be=R)},this.setOpaqueSort=function(R){fe=R},this.setTransparentSort=function(R){Y=R},this.getClearColor=function(R){return R.copy($e.getClearColor())},this.setClearColor=function(){$e.setClearColor(...arguments)},this.getClearAlpha=function(){return $e.getClearAlpha()},this.setClearAlpha=function(){$e.setClearAlpha(...arguments)},this.clear=function(R=!0,z=!0,j=!0){let X=0;if(R){let H=!1;if(w!==null){const pe=w.texture.format;H=pe===Pa||pe===Na||pe===Ca}if(H){const pe=w.texture.type,xe=pe===Zt||pe===Lt||pe===Ki||pe===xi||pe===Th||pe===Mh,Re=$e.getClearColor(),De=$e.getClearAlpha(),Ke=Re.r,je=Re.g,Ge=Re.b;xe?(p[0]=Ke,p[1]=je,p[2]=Ge,p[3]=De,U.clearBufferuiv(U.COLOR,0,p)):(_[0]=Ke,_[1]=je,_[2]=Ge,_[3]=De,U.clearBufferiv(U.COLOR,0,_))}else X|=U.COLOR_BUFFER_BIT}z&&(X|=U.DEPTH_BUFFER_BIT),j&&(X|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",oe,!1),t.removeEventListener("webglcontextrestored",Ee,!1),t.removeEventListener("webglcontextcreationerror",Te,!1),$e.dispose(),Ce.dispose(),gt.dispose(),Oe.dispose(),A.dispose(),W.dispose(),ie.dispose(),Ut.dispose(),G.dispose(),Fe.dispose(),J.dispose(),J.removeEventListener("sessionstart",Sg),J.removeEventListener("sessionend",Tg),Es.stop()};function oe(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const R=Ot.autoReset,z=Ne.enabled,j=Ne.autoUpdate,X=Ne.needsUpdate,H=Ne.type;Se(),Ot.autoReset=R,Ne.enabled=z,Ne.autoUpdate=j,Ne.needsUpdate=X,Ne.type=H}function Te(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function rt(R){const z=R.target;z.removeEventListener("dispose",rt),Yt(z)}function Yt(R){Nn(R),Oe.remove(R)}function Nn(R){const z=Oe.get(R).programs;z!==void 0&&(z.forEach(function(j){Fe.releaseProgram(j)}),R.isShaderMaterial&&Fe.releaseShaderCache(R))}this.renderBufferDirect=function(R,z,j,X,H,pe){z===null&&(z=mt);const xe=H.isMesh&&H.matrixWorld.determinant()<0,Re=oT(R,z,j,X,H);ke.setMaterial(X,xe);let De=j.index,Ke=1;if(X.wireframe===!0){if(De=ue.getWireframeAttribute(j),De===void 0)return;Ke=2}const je=j.drawRange,Ge=j.attributes.position;let _t=je.start*Ke,Tt=(je.start+je.count)*Ke;pe!==null&&(_t=Math.max(_t,pe.start*Ke),Tt=Math.min(Tt,(pe.start+pe.count)*Ke)),De!==null?(_t=Math.max(_t,0),Tt=Math.min(Tt,De.count)):Ge!=null&&(_t=Math.max(_t,0),Tt=Math.min(Tt,Ge.count));const an=Tt-_t;if(an<0||an===1/0)return;Ut.setup(H,X,Re,j,De);let Kt,xt=Pe;if(De!==null&&(Kt=se.get(De),xt=pt,xt.setIndex(Kt)),H.isMesh)X.wireframe===!0?(ke.setLineWidth(X.wireframeLinewidth*et()),xt.setMode(U.LINES)):xt.setMode(U.TRIANGLES);else if(H.isLine){let Ve=X.linewidth;Ve===void 0&&(Ve=1),ke.setLineWidth(Ve*et()),H.isLineSegments?xt.setMode(U.LINES):H.isLineLoop?xt.setMode(U.LINE_LOOP):xt.setMode(U.LINE_STRIP)}else H.isPoints?xt.setMode(U.POINTS):H.isSprite&&xt.setMode(U.TRIANGLES);if(H.isBatchedMesh)if(H._multiDrawInstances!==null)Qi("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),xt.renderMultiDrawInstances(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount,H._multiDrawInstances);else if(ut.get("WEBGL_multi_draw"))xt.renderMultiDraw(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount);else{const Ve=H._multiDrawStarts,Mn=H._multiDrawCounts,Mt=H._multiDrawCount,ki=De?se.get(De).bytesPerElement:1,fo=Oe.get(X).currentProgram.getUniforms();for(let hi=0;hi<Mt;hi++)fo.setValue(U,"_gl_DrawID",hi),xt.render(Ve[hi]/ki,Mn[hi])}else if(H.isInstancedMesh)xt.renderInstances(_t,an,H.count);else if(j.isInstancedBufferGeometry){const Ve=j._maxInstanceCount!==void 0?j._maxInstanceCount:1/0,Mn=Math.min(j.instanceCount,Ve);xt.renderInstances(_t,an,Mn)}else xt.render(_t,an)};function Rt(R,z,j){R.transparent===!0&&R.side===Vn&&R.forceSinglePass===!1?(R.side=It,R.needsUpdate=!0,Nc(R,z,j),R.side=ri,R.needsUpdate=!0,Nc(R,z,j),R.side=Vn):Nc(R,z,j)}this.compile=function(R,z,j=null){j===null&&(j=R),m=gt.get(j),m.init(z),x.push(m),j.traverseVisible(function(H){H.isLight&&H.layers.test(z.layers)&&(m.pushLight(H),H.castShadow&&m.pushShadow(H))}),R!==j&&R.traverseVisible(function(H){H.isLight&&H.layers.test(z.layers)&&(m.pushLight(H),H.castShadow&&m.pushShadow(H))}),m.setupLights();const X=new Set;return R.traverse(function(H){if(!(H.isMesh||H.isPoints||H.isLine||H.isSprite))return;const pe=H.material;if(pe)if(Array.isArray(pe))for(let xe=0;xe<pe.length;xe++){const Re=pe[xe];Rt(Re,j,H),X.add(Re)}else Rt(pe,j,H),X.add(pe)}),m=x.pop(),X},this.compileAsync=function(R,z,j=null){const X=this.compile(R,z,j);return new Promise(H=>{function pe(){if(X.forEach(function(xe){Oe.get(xe).currentProgram.isReady()&&X.delete(xe)}),X.size===0){H(R);return}setTimeout(pe,10)}ut.get("KHR_parallel_shader_compile")!==null?pe():setTimeout(pe,10)})};let Oi=null;function _r(R){Oi&&Oi(R)}function Sg(){Es.stop()}function Tg(){Es.start()}const Es=new U0;Es.setAnimationLoop(_r),typeof self<"u"&&Es.setContext(self),this.setAnimationLoop=function(R){Oi=R,J.setAnimationLoop(R),R===null?Es.stop():Es.start()},J.addEventListener("sessionstart",Sg),J.addEventListener("sessionend",Tg),this.render=function(R,z){if(z!==void 0&&z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;if(R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),z.parent===null&&z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),J.enabled===!0&&J.isPresenting===!0&&(J.cameraAutoUpdate===!0&&J.updateCamera(z),z=J.getCamera()),R.isScene===!0&&R.onBeforeRender(y,R,z,w),m=gt.get(R,x.length),m.init(z),x.push(m),we.multiplyMatrices(z.projectionMatrix,z.matrixWorldInverse),O.setFromProjectionMatrix(we),ce=this.localClippingEnabled,$=me.init(this.clippingPlanes,ce),g=Ce.get(R,v.length),g.init(),v.push(g),J.enabled===!0&&J.isPresenting===!0){const pe=y.xr.getDepthSensingMesh();pe!==null&&ad(pe,z,-1/0,y.sortObjects)}ad(R,z,0,y.sortObjects),g.finish(),y.sortObjects===!0&&g.sort(fe,Y),At=J.enabled===!1||J.isPresenting===!1||J.hasDepthSensing()===!1,At&&$e.addToRenderList(g,R),this.info.render.frame++,$===!0&&me.beginShadows();const j=m.state.shadowsArray;Ne.render(j,R,z),$===!0&&me.endShadows(),this.info.autoReset===!0&&this.info.reset();const X=g.opaque,H=g.transmissive;if(m.setupLights(),z.isArrayCamera){const pe=z.cameras;if(H.length>0)for(let xe=0,Re=pe.length;xe<Re;xe++){const De=pe[xe];Eg(X,H,R,De)}At&&$e.render(R);for(let xe=0,Re=pe.length;xe<Re;xe++){const De=pe[xe];Mg(g,R,De,De.viewport)}}else H.length>0&&Eg(X,H,R,z),At&&$e.render(R),Mg(g,R,z);w!==null&&M===0&&(P.updateMultisampleRenderTarget(w),P.updateRenderTargetMipmap(w)),R.isScene===!0&&R.onAfterRender(y,R,z),Ut.resetDefaultState(),E=-1,S=null,x.pop(),x.length>0?(m=x[x.length-1],$===!0&&me.setGlobalState(y.clippingPlanes,m.state.camera)):m=null,v.pop(),v.length>0?g=v[v.length-1]:g=null};function ad(R,z,j,X){if(R.visible===!1)return;if(R.layers.test(z.layers)){if(R.isGroup)j=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(z);else if(R.isLight)m.pushLight(R),R.castShadow&&m.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||O.intersectsSprite(R)){X&&Ae.setFromMatrixPosition(R.matrixWorld).applyMatrix4(we);const xe=ie.update(R),Re=R.material;Re.visible&&g.push(R,xe,Re,j,Ae.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||O.intersectsObject(R))){const xe=ie.update(R),Re=R.material;if(X&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),Ae.copy(R.boundingSphere.center)):(xe.boundingSphere===null&&xe.computeBoundingSphere(),Ae.copy(xe.boundingSphere.center)),Ae.applyMatrix4(R.matrixWorld).applyMatrix4(we)),Array.isArray(Re)){const De=xe.groups;for(let Ke=0,je=De.length;Ke<je;Ke++){const Ge=De[Ke],_t=Re[Ge.materialIndex];_t&&_t.visible&&g.push(R,xe,_t,j,Ae.z,Ge)}}else Re.visible&&g.push(R,xe,Re,j,Ae.z,null)}}const pe=R.children;for(let xe=0,Re=pe.length;xe<Re;xe++)ad(pe[xe],z,j,X)}function Mg(R,z,j,X){const H=R.opaque,pe=R.transmissive,xe=R.transparent;m.setupLightsView(j),$===!0&&me.setGlobalState(y.clippingPlanes,j),X&&ke.viewport(C.copy(X)),H.length>0&&Cc(H,z,j),pe.length>0&&Cc(pe,z,j),xe.length>0&&Cc(xe,z,j),ke.buffers.depth.setTest(!0),ke.buffers.depth.setMask(!0),ke.buffers.color.setMask(!0),ke.setPolygonOffset(!1)}function Eg(R,z,j,X){if((j.isScene===!0?j.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[X.id]===void 0&&(m.state.transmissionRenderTarget[X.id]=new _s(1,1,{generateMipmaps:!0,type:ut.has("EXT_color_buffer_half_float")||ut.has("EXT_color_buffer_float")?Fn:Zt,minFilter:Jn,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:lt.workingColorSpace}));const pe=m.state.transmissionRenderTarget[X.id],xe=X.viewport||C;pe.setSize(xe.z*y.transmissionResolutionScale,xe.w*y.transmissionResolutionScale);const Re=y.getRenderTarget();y.setRenderTarget(pe),y.getClearColor(D),L=y.getClearAlpha(),L<1&&y.setClearColor(16777215,.5),y.clear(),At&&$e.render(j);const De=y.toneMapping;y.toneMapping=oi;const Ke=X.viewport;if(X.viewport!==void 0&&(X.viewport=void 0),m.setupLightsView(X),$===!0&&me.setGlobalState(y.clippingPlanes,X),Cc(R,j,X),P.updateMultisampleRenderTarget(pe),P.updateRenderTargetMipmap(pe),ut.has("WEBGL_multisampled_render_to_texture")===!1){let je=!1;for(let Ge=0,_t=z.length;Ge<_t;Ge++){const Tt=z[Ge],an=Tt.object,Kt=Tt.geometry,xt=Tt.material,Ve=Tt.group;if(xt.side===Vn&&an.layers.test(X.layers)){const Mn=xt.side;xt.side=It,xt.needsUpdate=!0,wg(an,j,X,Kt,xt,Ve),xt.side=Mn,xt.needsUpdate=!0,je=!0}}je===!0&&(P.updateMultisampleRenderTarget(pe),P.updateRenderTargetMipmap(pe))}y.setRenderTarget(Re),y.setClearColor(D,L),Ke!==void 0&&(X.viewport=Ke),y.toneMapping=De}function Cc(R,z,j){const X=z.isScene===!0?z.overrideMaterial:null;for(let H=0,pe=R.length;H<pe;H++){const xe=R[H],Re=xe.object,De=xe.geometry,Ke=xe.group;let je=xe.material;je.allowOverride===!0&&X!==null&&(je=X),Re.layers.test(j.layers)&&wg(Re,z,j,De,je,Ke)}}function wg(R,z,j,X,H,pe){R.onBeforeRender(y,z,j,X,H,pe),R.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),H.onBeforeRender(y,z,j,X,R,pe),H.transparent===!0&&H.side===Vn&&H.forceSinglePass===!1?(H.side=It,H.needsUpdate=!0,y.renderBufferDirect(j,z,X,H,R,pe),H.side=ri,H.needsUpdate=!0,y.renderBufferDirect(j,z,X,H,R,pe),H.side=Vn):y.renderBufferDirect(j,z,X,H,R,pe),R.onAfterRender(y,z,j,X,H,pe)}function Nc(R,z,j){z.isScene!==!0&&(z=mt);const X=Oe.get(R),H=m.state.lights,pe=m.state.shadowsArray,xe=H.state.version,Re=Fe.getParameters(R,H.state,pe,z,j),De=Fe.getProgramCacheKey(Re);let Ke=X.programs;X.environment=R.isMeshStandardMaterial?z.environment:null,X.fog=z.fog,X.envMap=(R.isMeshStandardMaterial?W:A).get(R.envMap||X.environment),X.envMapRotation=X.environment!==null&&R.envMap===null?z.environmentRotation:R.envMapRotation,Ke===void 0&&(R.addEventListener("dispose",rt),Ke=new Map,X.programs=Ke);let je=Ke.get(De);if(je!==void 0){if(X.currentProgram===je&&X.lightsStateVersion===xe)return Rg(R,Re),je}else Re.uniforms=Fe.getUniforms(R),R.onBeforeCompile(Re,y),je=Fe.acquireProgram(Re,De),Ke.set(De,je),X.uniforms=Re.uniforms;const Ge=X.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(Ge.clippingPlanes=me.uniform),Rg(R,Re),X.needsLights=lT(R),X.lightsStateVersion=xe,X.needsLights&&(Ge.ambientLightColor.value=H.state.ambient,Ge.lightProbe.value=H.state.probe,Ge.directionalLights.value=H.state.directional,Ge.directionalLightShadows.value=H.state.directionalShadow,Ge.spotLights.value=H.state.spot,Ge.spotLightShadows.value=H.state.spotShadow,Ge.rectAreaLights.value=H.state.rectArea,Ge.ltc_1.value=H.state.rectAreaLTC1,Ge.ltc_2.value=H.state.rectAreaLTC2,Ge.pointLights.value=H.state.point,Ge.pointLightShadows.value=H.state.pointShadow,Ge.hemisphereLights.value=H.state.hemi,Ge.directionalShadowMap.value=H.state.directionalShadowMap,Ge.directionalShadowMatrix.value=H.state.directionalShadowMatrix,Ge.spotShadowMap.value=H.state.spotShadowMap,Ge.spotLightMatrix.value=H.state.spotLightMatrix,Ge.spotLightMap.value=H.state.spotLightMap,Ge.pointShadowMap.value=H.state.pointShadowMap,Ge.pointShadowMatrix.value=H.state.pointShadowMatrix),X.currentProgram=je,X.uniformsList=null,je}function Ag(R){if(R.uniformsList===null){const z=R.currentProgram.getUniforms();R.uniformsList=zu.seqWithValue(z.seq,R.uniforms)}return R.uniformsList}function Rg(R,z){const j=Oe.get(R);j.outputColorSpace=z.outputColorSpace,j.batching=z.batching,j.batchingColor=z.batchingColor,j.instancing=z.instancing,j.instancingColor=z.instancingColor,j.instancingMorph=z.instancingMorph,j.skinning=z.skinning,j.morphTargets=z.morphTargets,j.morphNormals=z.morphNormals,j.morphColors=z.morphColors,j.morphTargetsCount=z.morphTargetsCount,j.numClippingPlanes=z.numClippingPlanes,j.numIntersection=z.numClipIntersection,j.vertexAlphas=z.vertexAlphas,j.vertexTangents=z.vertexTangents,j.toneMapping=z.toneMapping}function oT(R,z,j,X,H){z.isScene!==!0&&(z=mt),P.resetTextureUnits();const pe=z.fog,xe=X.isMeshStandardMaterial?z.environment:null,Re=w===null?y.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:hr,De=(X.isMeshStandardMaterial?W:A).get(X.envMap||xe),Ke=X.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,je=!!j.attributes.tangent&&(!!X.normalMap||X.anisotropy>0),Ge=!!j.morphAttributes.position,_t=!!j.morphAttributes.normal,Tt=!!j.morphAttributes.color;let an=oi;X.toneMapped&&(w===null||w.isXRRenderTarget===!0)&&(an=y.toneMapping);const Kt=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,xt=Kt!==void 0?Kt.length:0,Ve=Oe.get(X),Mn=m.state.lights;if($===!0&&(ce===!0||R!==S)){const kn=R===S&&X.id===E;me.setState(X,R,kn)}let Mt=!1;X.version===Ve.__version?(Ve.needsLights&&Ve.lightsStateVersion!==Mn.state.version||Ve.outputColorSpace!==Re||H.isBatchedMesh&&Ve.batching===!1||!H.isBatchedMesh&&Ve.batching===!0||H.isBatchedMesh&&Ve.batchingColor===!0&&H.colorTexture===null||H.isBatchedMesh&&Ve.batchingColor===!1&&H.colorTexture!==null||H.isInstancedMesh&&Ve.instancing===!1||!H.isInstancedMesh&&Ve.instancing===!0||H.isSkinnedMesh&&Ve.skinning===!1||!H.isSkinnedMesh&&Ve.skinning===!0||H.isInstancedMesh&&Ve.instancingColor===!0&&H.instanceColor===null||H.isInstancedMesh&&Ve.instancingColor===!1&&H.instanceColor!==null||H.isInstancedMesh&&Ve.instancingMorph===!0&&H.morphTexture===null||H.isInstancedMesh&&Ve.instancingMorph===!1&&H.morphTexture!==null||Ve.envMap!==De||X.fog===!0&&Ve.fog!==pe||Ve.numClippingPlanes!==void 0&&(Ve.numClippingPlanes!==me.numPlanes||Ve.numIntersection!==me.numIntersection)||Ve.vertexAlphas!==Ke||Ve.vertexTangents!==je||Ve.morphTargets!==Ge||Ve.morphNormals!==_t||Ve.morphColors!==Tt||Ve.toneMapping!==an||Ve.morphTargetsCount!==xt)&&(Mt=!0):(Mt=!0,Ve.__version=X.version);let ki=Ve.currentProgram;Mt===!0&&(ki=Nc(X,z,H));let fo=!1,hi=!1,Oa=!1;const zt=ki.getUniforms(),Mi=Ve.uniforms;if(ke.useProgram(ki.program)&&(fo=!0,hi=!0,Oa=!0),X.id!==E&&(E=X.id,hi=!0),fo||S!==R){ke.buffers.depth.getReversed()?(re.copy(R.projectionMatrix),nM(re),iM(re),zt.setValue(U,"projectionMatrix",re)):zt.setValue(U,"projectionMatrix",R.projectionMatrix),zt.setValue(U,"viewMatrix",R.matrixWorldInverse);const Xn=zt.map.cameraPosition;Xn!==void 0&&Xn.setValue(U,ze.setFromMatrixPosition(R.matrixWorld)),ht.logarithmicDepthBuffer&&zt.setValue(U,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&zt.setValue(U,"isOrthographic",R.isOrthographicCamera===!0),S!==R&&(S=R,hi=!0,Oa=!0)}if(H.isSkinnedMesh){zt.setOptional(U,H,"bindMatrix"),zt.setOptional(U,H,"bindMatrixInverse");const kn=H.skeleton;kn&&(kn.boneTexture===null&&kn.computeBoneTexture(),zt.setValue(U,"boneTexture",kn.boneTexture,P))}H.isBatchedMesh&&(zt.setOptional(U,H,"batchingTexture"),zt.setValue(U,"batchingTexture",H._matricesTexture,P),zt.setOptional(U,H,"batchingIdTexture"),zt.setValue(U,"batchingIdTexture",H._indirectTexture,P),zt.setOptional(U,H,"batchingColorTexture"),H._colorsTexture!==null&&zt.setValue(U,"batchingColorTexture",H._colorsTexture,P));const Ei=j.morphAttributes;if((Ei.position!==void 0||Ei.normal!==void 0||Ei.color!==void 0)&&Ye.update(H,j,ki),(hi||Ve.receiveShadow!==H.receiveShadow)&&(Ve.receiveShadow=H.receiveShadow,zt.setValue(U,"receiveShadow",H.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(Mi.envMap.value=De,Mi.flipEnvMap.value=De.isCubeTexture&&De.isRenderTargetTexture===!1?-1:1),X.isMeshStandardMaterial&&X.envMap===null&&z.environment!==null&&(Mi.envMapIntensity.value=z.environmentIntensity),hi&&(zt.setValue(U,"toneMappingExposure",y.toneMappingExposure),Ve.needsLights&&aT(Mi,Oa),pe&&X.fog===!0&&be.refreshFogUniforms(Mi,pe),be.refreshMaterialUniforms(Mi,X,q,te,m.state.transmissionRenderTarget[R.id]),zu.upload(U,Ag(Ve),Mi,P)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(zu.upload(U,Ag(Ve),Mi,P),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&zt.setValue(U,"center",H.center),zt.setValue(U,"modelViewMatrix",H.modelViewMatrix),zt.setValue(U,"normalMatrix",H.normalMatrix),zt.setValue(U,"modelMatrix",H.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const kn=X.uniformsGroups;for(let Xn=0,ld=kn.length;Xn<ld;Xn++){const ws=kn[Xn];G.update(ws,ki),G.bind(ws,ki)}}return ki}function aT(R,z){R.ambientLightColor.needsUpdate=z,R.lightProbe.needsUpdate=z,R.directionalLights.needsUpdate=z,R.directionalLightShadows.needsUpdate=z,R.pointLights.needsUpdate=z,R.pointLightShadows.needsUpdate=z,R.spotLights.needsUpdate=z,R.spotLightShadows.needsUpdate=z,R.rectAreaLights.needsUpdate=z,R.hemisphereLights.needsUpdate=z}function lT(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(R,z,j){const X=Oe.get(R);X.__autoAllocateDepthBuffer=R.resolveDepthBuffer===!1,X.__autoAllocateDepthBuffer===!1&&(X.__useRenderToTexture=!1),Oe.get(R.texture).__webglTexture=z,Oe.get(R.depthTexture).__webglTexture=X.__autoAllocateDepthBuffer?void 0:j,X.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(R,z){const j=Oe.get(R);j.__webglFramebuffer=z,j.__useDefaultFramebuffer=z===void 0};const cT=U.createFramebuffer();this.setRenderTarget=function(R,z=0,j=0){w=R,b=z,M=j;let X=!0,H=null,pe=!1,xe=!1;if(R){const De=Oe.get(R);if(De.__useDefaultFramebuffer!==void 0)ke.bindFramebuffer(U.FRAMEBUFFER,null),X=!1;else if(De.__webglFramebuffer===void 0)P.setupRenderTarget(R);else if(De.__hasExternalTextures)P.rebindTextures(R,Oe.get(R.texture).__webglTexture,Oe.get(R.depthTexture).__webglTexture);else if(R.depthBuffer){const Ge=R.depthTexture;if(De.__boundDepthTexture!==Ge){if(Ge!==null&&Oe.has(Ge)&&(R.width!==Ge.image.width||R.height!==Ge.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(R)}}const Ke=R.texture;(Ke.isData3DTexture||Ke.isDataArrayTexture||Ke.isCompressedArrayTexture)&&(xe=!0);const je=Oe.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(je[z])?H=je[z][j]:H=je[z],pe=!0):R.samples>0&&P.useMultisampledRTT(R)===!1?H=Oe.get(R).__webglMultisampledFramebuffer:Array.isArray(je)?H=je[j]:H=je,C.copy(R.viewport),I.copy(R.scissor),k=R.scissorTest}else C.copy(ne).multiplyScalar(q).floor(),I.copy(ve).multiplyScalar(q).floor(),k=Be;if(j!==0&&(H=cT),ke.bindFramebuffer(U.FRAMEBUFFER,H)&&X&&ke.drawBuffers(R,H),ke.viewport(C),ke.scissor(I),ke.setScissorTest(k),pe){const De=Oe.get(R.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+z,De.__webglTexture,j)}else if(xe){const De=Oe.get(R.texture),Ke=z;U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,De.__webglTexture,j,Ke)}else if(R!==null&&j!==0){const De=Oe.get(R.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,De.__webglTexture,j)}E=-1},this.readRenderTargetPixels=function(R,z,j,X,H,pe,xe){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Re=Oe.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&xe!==void 0&&(Re=Re[xe]),Re){ke.bindFramebuffer(U.FRAMEBUFFER,Re);try{const De=R.texture,Ke=De.format,je=De.type;if(!ht.textureFormatReadable(Ke)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ht.textureTypeReadable(je)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}z>=0&&z<=R.width-X&&j>=0&&j<=R.height-H&&U.readPixels(z,j,X,H,ot.convert(Ke),ot.convert(je),pe)}finally{const De=w!==null?Oe.get(w).__webglFramebuffer:null;ke.bindFramebuffer(U.FRAMEBUFFER,De)}}},this.readRenderTargetPixelsAsync=async function(R,z,j,X,H,pe,xe){if(!(R&&R.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Re=Oe.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&xe!==void 0&&(Re=Re[xe]),Re)if(z>=0&&z<=R.width-X&&j>=0&&j<=R.height-H){ke.bindFramebuffer(U.FRAMEBUFFER,Re);const De=R.texture,Ke=De.format,je=De.type;if(!ht.textureFormatReadable(Ke))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ht.textureTypeReadable(je))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Ge=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,Ge),U.bufferData(U.PIXEL_PACK_BUFFER,pe.byteLength,U.STREAM_READ),U.readPixels(z,j,X,H,ot.convert(Ke),ot.convert(je),0);const _t=w!==null?Oe.get(w).__webglFramebuffer:null;ke.bindFramebuffer(U.FRAMEBUFFER,_t);const Tt=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);return U.flush(),await tM(U,Tt,4),U.bindBuffer(U.PIXEL_PACK_BUFFER,Ge),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,pe),U.deleteBuffer(Ge),U.deleteSync(Tt),pe}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(R,z=null,j=0){const X=Math.pow(2,-j),H=Math.floor(R.image.width*X),pe=Math.floor(R.image.height*X),xe=z!==null?z.x:0,Re=z!==null?z.y:0;P.setTexture2D(R,0),U.copyTexSubImage2D(U.TEXTURE_2D,j,0,0,xe,Re,H,pe),ke.unbindTexture()};const uT=U.createFramebuffer(),hT=U.createFramebuffer();this.copyTextureToTexture=function(R,z,j=null,X=null,H=0,pe=null){pe===null&&(H!==0?(Qi("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),pe=H,H=0):pe=0);let xe,Re,De,Ke,je,Ge,_t,Tt,an;const Kt=R.isCompressedTexture?R.mipmaps[pe]:R.image;if(j!==null)xe=j.max.x-j.min.x,Re=j.max.y-j.min.y,De=j.isBox3?j.max.z-j.min.z:1,Ke=j.min.x,je=j.min.y,Ge=j.isBox3?j.min.z:0;else{const Ei=Math.pow(2,-H);xe=Math.floor(Kt.width*Ei),Re=Math.floor(Kt.height*Ei),R.isDataArrayTexture?De=Kt.depth:R.isData3DTexture?De=Math.floor(Kt.depth*Ei):De=1,Ke=0,je=0,Ge=0}X!==null?(_t=X.x,Tt=X.y,an=X.z):(_t=0,Tt=0,an=0);const xt=ot.convert(z.format),Ve=ot.convert(z.type);let Mn;z.isData3DTexture?(P.setTexture3D(z,0),Mn=U.TEXTURE_3D):z.isDataArrayTexture||z.isCompressedArrayTexture?(P.setTexture2DArray(z,0),Mn=U.TEXTURE_2D_ARRAY):(P.setTexture2D(z,0),Mn=U.TEXTURE_2D),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,z.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,z.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,z.unpackAlignment);const Mt=U.getParameter(U.UNPACK_ROW_LENGTH),ki=U.getParameter(U.UNPACK_IMAGE_HEIGHT),fo=U.getParameter(U.UNPACK_SKIP_PIXELS),hi=U.getParameter(U.UNPACK_SKIP_ROWS),Oa=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,Kt.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Kt.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Ke),U.pixelStorei(U.UNPACK_SKIP_ROWS,je),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Ge);const zt=R.isDataArrayTexture||R.isData3DTexture,Mi=z.isDataArrayTexture||z.isData3DTexture;if(R.isDepthTexture){const Ei=Oe.get(R),kn=Oe.get(z),Xn=Oe.get(Ei.__renderTarget),ld=Oe.get(kn.__renderTarget);ke.bindFramebuffer(U.READ_FRAMEBUFFER,Xn.__webglFramebuffer),ke.bindFramebuffer(U.DRAW_FRAMEBUFFER,ld.__webglFramebuffer);for(let ws=0;ws<De;ws++)zt&&(U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Oe.get(R).__webglTexture,H,Ge+ws),U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Oe.get(z).__webglTexture,pe,an+ws)),U.blitFramebuffer(Ke,je,xe,Re,_t,Tt,xe,Re,U.DEPTH_BUFFER_BIT,U.NEAREST);ke.bindFramebuffer(U.READ_FRAMEBUFFER,null),ke.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else if(H!==0||R.isRenderTargetTexture||Oe.has(R)){const Ei=Oe.get(R),kn=Oe.get(z);ke.bindFramebuffer(U.READ_FRAMEBUFFER,uT),ke.bindFramebuffer(U.DRAW_FRAMEBUFFER,hT);for(let Xn=0;Xn<De;Xn++)zt?U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Ei.__webglTexture,H,Ge+Xn):U.framebufferTexture2D(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Ei.__webglTexture,H),Mi?U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,kn.__webglTexture,pe,an+Xn):U.framebufferTexture2D(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,kn.__webglTexture,pe),H!==0?U.blitFramebuffer(Ke,je,xe,Re,_t,Tt,xe,Re,U.COLOR_BUFFER_BIT,U.NEAREST):Mi?U.copyTexSubImage3D(Mn,pe,_t,Tt,an+Xn,Ke,je,xe,Re):U.copyTexSubImage2D(Mn,pe,_t,Tt,Ke,je,xe,Re);ke.bindFramebuffer(U.READ_FRAMEBUFFER,null),ke.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else Mi?R.isDataTexture||R.isData3DTexture?U.texSubImage3D(Mn,pe,_t,Tt,an,xe,Re,De,xt,Ve,Kt.data):z.isCompressedArrayTexture?U.compressedTexSubImage3D(Mn,pe,_t,Tt,an,xe,Re,De,xt,Kt.data):U.texSubImage3D(Mn,pe,_t,Tt,an,xe,Re,De,xt,Ve,Kt):R.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,pe,_t,Tt,xe,Re,xt,Ve,Kt.data):R.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,pe,_t,Tt,Kt.width,Kt.height,xt,Kt.data):U.texSubImage2D(U.TEXTURE_2D,pe,_t,Tt,xe,Re,xt,Ve,Kt);U.pixelStorei(U.UNPACK_ROW_LENGTH,Mt),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,ki),U.pixelStorei(U.UNPACK_SKIP_PIXELS,fo),U.pixelStorei(U.UNPACK_SKIP_ROWS,hi),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Oa),pe===0&&z.generateMipmaps&&U.generateMipmap(Mn),ke.unbindTexture()},this.copyTextureToTexture3D=function(R,z,j=null,X=null,H=0){return Qi('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(R,z,j,X,H)},this.initRenderTarget=function(R){Oe.get(R).__webglFramebuffer===void 0&&P.setupRenderTarget(R)},this.initTexture=function(R){R.isCubeTexture?P.setTextureCube(R,0):R.isData3DTexture?P.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?P.setTexture2DArray(R,0):P.setTexture2D(R,0),ke.unbindTexture()},this.resetState=function(){b=0,M=0,w=null,ke.reset(),Ut.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ei}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=lt._getDrawingBufferColorSpace(e),t.unpackColorSpace=lt._getUnpackColorSpace()}}const Zo=new ji,Cr=new ae,G0=new N,Xd=new ae,Vu=new ae,rh=new N,sp=new N,z0=new ft,V0=new N,H0=new N;let Zn=null,ir=null;const Nr=[],hs={NONE:-1,PAN:0,ROTATE:1};class QC extends Uh{constructor(e,t,n=null){super(t,n),this.objects=e,this.recursive=!0,this.transformGroup=!1,this.rotateSpeed=1,this.raycaster=new I0,this.mouseButtons={LEFT:An.PAN,MIDDLE:An.PAN,RIGHT:An.ROTATE},this.touches={ONE:Dr.PAN},this._onPointerMove=JC.bind(this),this._onPointerDown=e1.bind(this),this._onPointerCancel=t1.bind(this),this._onContextMenu=n1.bind(this),n!==null&&this.connect(n)}connect(e){super.connect(e),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerCancel),this.domElement.addEventListener("pointerleave",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerCancel),this.domElement.removeEventListener("pointerleave",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto",this.domElement.style.cursor=""}dispose(){this.disconnect()}_updatePointer(e){const t=this.domElement.getBoundingClientRect();Cr.x=(e.clientX-t.left)/t.width*2-1,Cr.y=-(e.clientY-t.top)/t.height*2+1}_updateState(e){let t;if(e.pointerType==="touch")t=this.touches.ONE;else switch(e.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=null}switch(t){case An.PAN:case Dr.PAN:this.state=hs.PAN;break;case An.ROTATE:case Dr.ROTATE:this.state=hs.ROTATE;break;default:this.state=hs.NONE}}getRaycaster(){return console.warn("THREE.DragControls: getRaycaster() has been deprecated. Use controls.raycaster instead."),this.raycaster}setObjects(e){console.warn("THREE.DragControls: setObjects() has been deprecated. Use controls.objects instead."),this.objects=e}getObjects(){return console.warn("THREE.DragControls: getObjects() has been deprecated. Use controls.objects instead."),this.objects}activate(){console.warn("THREE.DragControls: activate() has been renamed to connect()."),this.connect()}deactivate(){console.warn("THREE.DragControls: deactivate() has been renamed to disconnect()."),this.disconnect()}set mode(e){console.warn("THREE.DragControls: The .mode property has been removed. Define the type of transformation via the .mouseButtons or .touches properties.")}get mode(){console.warn("THREE.DragControls: The .mode property has been removed. Define the type of transformation via the .mouseButtons or .touches properties.")}}function JC(i){const e=this.object,t=this.domElement,n=this.raycaster;if(this.enabled!==!1){if(this._updatePointer(i),n.setFromCamera(Cr,e),Zn)this.state===hs.PAN?n.ray.intersectPlane(Zo,rh)&&Zn.position.copy(rh.sub(G0).applyMatrix4(z0)):this.state===hs.ROTATE&&(Xd.subVectors(Cr,Vu).multiplyScalar(this.rotateSpeed),Zn.rotateOnWorldAxis(V0,Xd.x),Zn.rotateOnWorldAxis(H0.normalize(),-Xd.y)),this.dispatchEvent({type:"drag",object:Zn}),Vu.copy(Cr);else if(i.pointerType==="mouse"||i.pointerType==="pen")if(Nr.length=0,n.setFromCamera(Cr,e),n.intersectObjects(this.objects,this.recursive,Nr),Nr.length>0){const r=Nr[0].object;Zo.setFromNormalAndCoplanarPoint(e.getWorldDirection(Zo.normal),sp.setFromMatrixPosition(r.matrixWorld)),ir!==r&&ir!==null&&(this.dispatchEvent({type:"hoveroff",object:ir}),t.style.cursor="auto",ir=null),ir!==r&&(this.dispatchEvent({type:"hoveron",object:r}),t.style.cursor="pointer",ir=r)}else ir!==null&&(this.dispatchEvent({type:"hoveroff",object:ir}),t.style.cursor="auto",ir=null);Vu.copy(Cr)}}function e1(i){const e=this.object,t=this.domElement,n=this.raycaster;this.enabled!==!1&&(this._updatePointer(i),this._updateState(i),Nr.length=0,n.setFromCamera(Cr,e),n.intersectObjects(this.objects,this.recursive,Nr),Nr.length>0&&(this.transformGroup===!0?Zn=W0(Nr[0].object):Zn=Nr[0].object,Zo.setFromNormalAndCoplanarPoint(e.getWorldDirection(Zo.normal),sp.setFromMatrixPosition(Zn.matrixWorld)),n.ray.intersectPlane(Zo,rh)&&(this.state===hs.PAN?(z0.copy(Zn.parent.matrixWorld).invert(),G0.copy(rh).sub(sp.setFromMatrixPosition(Zn.matrixWorld))):this.state===hs.ROTATE&&(V0.set(0,1,0).applyQuaternion(e.quaternion).normalize(),H0.set(1,0,0).applyQuaternion(e.quaternion).normalize())),t.style.cursor="move",this.dispatchEvent({type:"dragstart",object:Zn})),Vu.copy(Cr))}function t1(){this.enabled!==!1&&(Zn&&(this.dispatchEvent({type:"dragend",object:Zn}),Zn=null),this.domElement.style.cursor=ir?"pointer":"auto",this.state=hs.NONE)}function n1(i){this.enabled!==!1&&i.preventDefault()}function W0(i,e=null){return i.isGroup&&(e=i),i.parent===null?e:W0(i.parent,e)}function i1(i,e,t){var n,r=1;i==null&&(i=0),e==null&&(e=0),t==null&&(t=0);function s(){var o,a=n.length,l,c=0,u=0,h=0;for(o=0;o<a;++o)l=n[o],c+=l.x||0,u+=l.y||0,h+=l.z||0;for(c=(c/a-i)*r,u=(u/a-e)*r,h=(h/a-t)*r,o=0;o<a;++o)l=n[o],c&&(l.x-=c),u&&(l.y-=u),h&&(l.z-=h)}return s.initialize=function(o){n=o},s.x=function(o){return arguments.length?(i=+o,s):i},s.y=function(o){return arguments.length?(e=+o,s):e},s.z=function(o){return arguments.length?(t=+o,s):t},s.strength=function(o){return arguments.length?(r=+o,s):r},s}function r1(i){const e=+this._x.call(null,i);return $0(this.cover(e),e,i)}function $0(i,e,t){if(isNaN(e))return i;var n,r=i._root,s={data:t},o=i._x0,a=i._x1,l,c,u,h,d;if(!r)return i._root=s,i;for(;r.length;)if((u=e>=(l=(o+a)/2))?o=l:a=l,n=r,!(r=r[h=+u]))return n[h]=s,i;if(c=+i._x.call(null,r.data),e===c)return s.next=r,n?n[h]=s:i._root=s,i;do n=n?n[h]=new Array(2):i._root=new Array(2),(u=e>=(l=(o+a)/2))?o=l:a=l;while((h=+u)==(d=+(c>=l)));return n[d]=r,n[h]=s,i}function s1(i){Array.isArray(i)||(i=Array.from(i));const e=i.length,t=new Float64Array(e);let n=1/0,r=-1/0;for(let s=0,o;s<e;++s)isNaN(o=+this._x.call(null,i[s]))||(t[s]=o,o<n&&(n=o),o>r&&(r=o));if(n>r)return this;this.cover(n).cover(r);for(let s=0;s<e;++s)$0(this,t[s],i[s]);return this}function o1(i){if(isNaN(i=+i))return this;var e=this._x0,t=this._x1;if(isNaN(e))t=(e=Math.floor(i))+1;else{for(var n=t-e||1,r=this._root,s,o;e>i||i>=t;)switch(o=+(i<e),s=new Array(2),s[o]=r,r=s,n*=2,o){case 0:t=e+n;break;case 1:e=t-n;break}this._root&&this._root.length&&(this._root=r)}return this._x0=e,this._x1=t,this}function a1(){var i=[];return this.visit(function(e){if(!e.length)do i.push(e.data);while(e=e.next)}),i}function l1(i){return arguments.length?this.cover(+i[0][0]).cover(+i[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]}function Or(i,e,t){this.node=i,this.x0=e,this.x1=t}function c1(i,e){var t,n=this._x0,r,s,o=this._x1,a=[],l=this._root,c,u;for(l&&a.push(new Or(l,n,o)),e==null?e=1/0:(n=i-e,o=i+e);c=a.pop();)if(!(!(l=c.node)||(r=c.x0)>o||(s=c.x1)<n))if(l.length){var h=(r+s)/2;a.push(new Or(l[1],h,s),new Or(l[0],r,h)),(u=+(i>=h))&&(c=a[a.length-1],a[a.length-1]=a[a.length-1-u],a[a.length-1-u]=c)}else{var d=Math.abs(i-+this._x.call(null,l.data));d<e&&(e=d,n=i-d,o=i+d,t=l.data)}return t}function u1(i){if(isNaN(l=+this._x.call(null,i)))return this;var e,t=this._root,n,r,s,o=this._x0,a=this._x1,l,c,u,h,d;if(!t)return this;if(t.length)for(;;){if((u=l>=(c=(o+a)/2))?o=c:a=c,e=t,!(t=t[h=+u]))return this;if(!t.length)break;e[h+1&1]&&(n=e,d=h)}for(;t.data!==i;)if(r=t,!(t=t.next))return this;return(s=t.next)&&delete t.next,r?(s?r.next=s:delete r.next,this):e?(s?e[h]=s:delete e[h],(t=e[0]||e[1])&&t===(e[1]||e[0])&&!t.length&&(n?n[d]=t:this._root=t),this):(this._root=s,this)}function h1(i){for(var e=0,t=i.length;e<t;++e)this.remove(i[e]);return this}function d1(){return this._root}function f1(){var i=0;return this.visit(function(e){if(!e.length)do++i;while(e=e.next)}),i}function p1(i){var e=[],t,n=this._root,r,s,o;for(n&&e.push(new Or(n,this._x0,this._x1));t=e.pop();)if(!i(n=t.node,s=t.x0,o=t.x1)&&n.length){var a=(s+o)/2;(r=n[1])&&e.push(new Or(r,a,o)),(r=n[0])&&e.push(new Or(r,s,a))}return this}function m1(i){var e=[],t=[],n;for(this._root&&e.push(new Or(this._root,this._x0,this._x1));n=e.pop();){var r=n.node;if(r.length){var s,o=n.x0,a=n.x1,l=(o+a)/2;(s=r[0])&&e.push(new Or(s,o,l)),(s=r[1])&&e.push(new Or(s,l,a))}t.push(n)}for(;n=t.pop();)i(n.node,n.x0,n.x1);return this}function g1(i){return i[0]}function _1(i){return arguments.length?(this._x=i,this):this._x}function q0(i,e){var t=new Rm(e??g1,NaN,NaN);return i==null?t:t.addAll(i)}function Rm(i,e,t){this._x=i,this._x0=e,this._x1=t,this._root=void 0}function I_(i){for(var e={data:i.data},t=e;i=i.next;)t=t.next={data:i.data};return e}var ui=q0.prototype=Rm.prototype;ui.copy=function(){var i=new Rm(this._x,this._x0,this._x1),e=this._root,t,n;if(!e)return i;if(!e.length)return i._root=I_(e),i;for(t=[{source:e,target:i._root=new Array(2)}];e=t.pop();)for(var r=0;r<2;++r)(n=e.source[r])&&(n.length?t.push({source:n,target:e.target[r]=new Array(2)}):e.target[r]=I_(n));return i};ui.add=r1;ui.addAll=s1;ui.cover=o1;ui.data=a1;ui.extent=l1;ui.find=c1;ui.remove=u1;ui.removeAll=h1;ui.root=d1;ui.size=f1;ui.visit=p1;ui.visitAfter=m1;ui.x=_1;function v1(i){const e=+this._x.call(null,i),t=+this._y.call(null,i);return j0(this.cover(e,t),e,t,i)}function j0(i,e,t,n){if(isNaN(e)||isNaN(t))return i;var r,s=i._root,o={data:n},a=i._x0,l=i._y0,c=i._x1,u=i._y1,h,d,f,p,_,g,m,v;if(!s)return i._root=o,i;for(;s.length;)if((_=e>=(h=(a+c)/2))?a=h:c=h,(g=t>=(d=(l+u)/2))?l=d:u=d,r=s,!(s=s[m=g<<1|_]))return r[m]=o,i;if(f=+i._x.call(null,s.data),p=+i._y.call(null,s.data),e===f&&t===p)return o.next=s,r?r[m]=o:i._root=o,i;do r=r?r[m]=new Array(4):i._root=new Array(4),(_=e>=(h=(a+c)/2))?a=h:c=h,(g=t>=(d=(l+u)/2))?l=d:u=d;while((m=g<<1|_)===(v=(p>=d)<<1|f>=h));return r[v]=s,r[m]=o,i}function y1(i){var e,t,n=i.length,r,s,o=new Array(n),a=new Array(n),l=1/0,c=1/0,u=-1/0,h=-1/0;for(t=0;t<n;++t)isNaN(r=+this._x.call(null,e=i[t]))||isNaN(s=+this._y.call(null,e))||(o[t]=r,a[t]=s,r<l&&(l=r),r>u&&(u=r),s<c&&(c=s),s>h&&(h=s));if(l>u||c>h)return this;for(this.cover(l,c).cover(u,h),t=0;t<n;++t)j0(this,o[t],a[t],i[t]);return this}function x1(i,e){if(isNaN(i=+i)||isNaN(e=+e))return this;var t=this._x0,n=this._y0,r=this._x1,s=this._y1;if(isNaN(t))r=(t=Math.floor(i))+1,s=(n=Math.floor(e))+1;else{for(var o=r-t||1,a=this._root,l,c;t>i||i>=r||n>e||e>=s;)switch(c=(e<n)<<1|i<t,l=new Array(4),l[c]=a,a=l,o*=2,c){case 0:r=t+o,s=n+o;break;case 1:t=r-o,s=n+o;break;case 2:r=t+o,n=s-o;break;case 3:t=r-o,n=s-o;break}this._root&&this._root.length&&(this._root=a)}return this._x0=t,this._y0=n,this._x1=r,this._y1=s,this}function b1(){var i=[];return this.visit(function(e){if(!e.length)do i.push(e.data);while(e=e.next)}),i}function S1(i){return arguments.length?this.cover(+i[0][0],+i[0][1]).cover(+i[1][0],+i[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function Wn(i,e,t,n,r){this.node=i,this.x0=e,this.y0=t,this.x1=n,this.y1=r}function T1(i,e,t){var n,r=this._x0,s=this._y0,o,a,l,c,u=this._x1,h=this._y1,d=[],f=this._root,p,_;for(f&&d.push(new Wn(f,r,s,u,h)),t==null?t=1/0:(r=i-t,s=e-t,u=i+t,h=e+t,t*=t);p=d.pop();)if(!(!(f=p.node)||(o=p.x0)>u||(a=p.y0)>h||(l=p.x1)<r||(c=p.y1)<s))if(f.length){var g=(o+l)/2,m=(a+c)/2;d.push(new Wn(f[3],g,m,l,c),new Wn(f[2],o,m,g,c),new Wn(f[1],g,a,l,m),new Wn(f[0],o,a,g,m)),(_=(e>=m)<<1|i>=g)&&(p=d[d.length-1],d[d.length-1]=d[d.length-1-_],d[d.length-1-_]=p)}else{var v=i-+this._x.call(null,f.data),x=e-+this._y.call(null,f.data),y=v*v+x*x;if(y<t){var T=Math.sqrt(t=y);r=i-T,s=e-T,u=i+T,h=e+T,n=f.data}}return n}function M1(i){if(isNaN(u=+this._x.call(null,i))||isNaN(h=+this._y.call(null,i)))return this;var e,t=this._root,n,r,s,o=this._x0,a=this._y0,l=this._x1,c=this._y1,u,h,d,f,p,_,g,m;if(!t)return this;if(t.length)for(;;){if((p=u>=(d=(o+l)/2))?o=d:l=d,(_=h>=(f=(a+c)/2))?a=f:c=f,e=t,!(t=t[g=_<<1|p]))return this;if(!t.length)break;(e[g+1&3]||e[g+2&3]||e[g+3&3])&&(n=e,m=g)}for(;t.data!==i;)if(r=t,!(t=t.next))return this;return(s=t.next)&&delete t.next,r?(s?r.next=s:delete r.next,this):e?(s?e[g]=s:delete e[g],(t=e[0]||e[1]||e[2]||e[3])&&t===(e[3]||e[2]||e[1]||e[0])&&!t.length&&(n?n[m]=t:this._root=t),this):(this._root=s,this)}function E1(i){for(var e=0,t=i.length;e<t;++e)this.remove(i[e]);return this}function w1(){return this._root}function A1(){var i=0;return this.visit(function(e){if(!e.length)do++i;while(e=e.next)}),i}function R1(i){var e=[],t,n=this._root,r,s,o,a,l;for(n&&e.push(new Wn(n,this._x0,this._y0,this._x1,this._y1));t=e.pop();)if(!i(n=t.node,s=t.x0,o=t.y0,a=t.x1,l=t.y1)&&n.length){var c=(s+a)/2,u=(o+l)/2;(r=n[3])&&e.push(new Wn(r,c,u,a,l)),(r=n[2])&&e.push(new Wn(r,s,u,c,l)),(r=n[1])&&e.push(new Wn(r,c,o,a,u)),(r=n[0])&&e.push(new Wn(r,s,o,c,u))}return this}function C1(i){var e=[],t=[],n;for(this._root&&e.push(new Wn(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var r=n.node;if(r.length){var s,o=n.x0,a=n.y0,l=n.x1,c=n.y1,u=(o+l)/2,h=(a+c)/2;(s=r[0])&&e.push(new Wn(s,o,a,u,h)),(s=r[1])&&e.push(new Wn(s,u,a,l,h)),(s=r[2])&&e.push(new Wn(s,o,h,u,c)),(s=r[3])&&e.push(new Wn(s,u,h,l,c))}t.push(n)}for(;n=t.pop();)i(n.node,n.x0,n.y0,n.x1,n.y1);return this}function N1(i){return i[0]}function P1(i){return arguments.length?(this._x=i,this):this._x}function D1(i){return i[1]}function L1(i){return arguments.length?(this._y=i,this):this._y}function X0(i,e,t){var n=new Cm(e??N1,t??D1,NaN,NaN,NaN,NaN);return i==null?n:n.addAll(i)}function Cm(i,e,t,n,r,s){this._x=i,this._y=e,this._x0=t,this._y0=n,this._x1=r,this._y1=s,this._root=void 0}function U_(i){for(var e={data:i.data},t=e;i=i.next;)t=t.next={data:i.data};return e}var jn=X0.prototype=Cm.prototype;jn.copy=function(){var i=new Cm(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root,t,n;if(!e)return i;if(!e.length)return i._root=U_(e),i;for(t=[{source:e,target:i._root=new Array(4)}];e=t.pop();)for(var r=0;r<4;++r)(n=e.source[r])&&(n.length?t.push({source:n,target:e.target[r]=new Array(4)}):e.target[r]=U_(n));return i};jn.add=v1;jn.addAll=y1;jn.cover=x1;jn.data=b1;jn.extent=S1;jn.find=T1;jn.remove=M1;jn.removeAll=E1;jn.root=w1;jn.size=A1;jn.visit=R1;jn.visitAfter=C1;jn.x=P1;jn.y=L1;function I1(i){const e=+this._x.call(null,i),t=+this._y.call(null,i),n=+this._z.call(null,i);return Y0(this.cover(e,t,n),e,t,n,i)}function Y0(i,e,t,n,r){if(isNaN(e)||isNaN(t)||isNaN(n))return i;var s,o=i._root,a={data:r},l=i._x0,c=i._y0,u=i._z0,h=i._x1,d=i._y1,f=i._z1,p,_,g,m,v,x,y,T,b,M,w;if(!o)return i._root=a,i;for(;o.length;)if((y=e>=(p=(l+h)/2))?l=p:h=p,(T=t>=(_=(c+d)/2))?c=_:d=_,(b=n>=(g=(u+f)/2))?u=g:f=g,s=o,!(o=o[M=b<<2|T<<1|y]))return s[M]=a,i;if(m=+i._x.call(null,o.data),v=+i._y.call(null,o.data),x=+i._z.call(null,o.data),e===m&&t===v&&n===x)return a.next=o,s?s[M]=a:i._root=a,i;do s=s?s[M]=new Array(8):i._root=new Array(8),(y=e>=(p=(l+h)/2))?l=p:h=p,(T=t>=(_=(c+d)/2))?c=_:d=_,(b=n>=(g=(u+f)/2))?u=g:f=g;while((M=b<<2|T<<1|y)===(w=(x>=g)<<2|(v>=_)<<1|m>=p));return s[w]=o,s[M]=a,i}function U1(i){Array.isArray(i)||(i=Array.from(i));const e=i.length,t=new Float64Array(e),n=new Float64Array(e),r=new Float64Array(e);let s=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,u=-1/0;for(let h=0,d,f,p,_;h<e;++h)isNaN(f=+this._x.call(null,d=i[h]))||isNaN(p=+this._y.call(null,d))||isNaN(_=+this._z.call(null,d))||(t[h]=f,n[h]=p,r[h]=_,f<s&&(s=f),f>l&&(l=f),p<o&&(o=p),p>c&&(c=p),_<a&&(a=_),_>u&&(u=_));if(s>l||o>c||a>u)return this;this.cover(s,o,a).cover(l,c,u);for(let h=0;h<e;++h)Y0(this,t[h],n[h],r[h],i[h]);return this}function F1(i,e,t){if(isNaN(i=+i)||isNaN(e=+e)||isNaN(t=+t))return this;var n=this._x0,r=this._y0,s=this._z0,o=this._x1,a=this._y1,l=this._z1;if(isNaN(n))o=(n=Math.floor(i))+1,a=(r=Math.floor(e))+1,l=(s=Math.floor(t))+1;else{for(var c=o-n||1,u=this._root,h,d;n>i||i>=o||r>e||e>=a||s>t||t>=l;)switch(d=(t<s)<<2|(e<r)<<1|i<n,h=new Array(8),h[d]=u,u=h,c*=2,d){case 0:o=n+c,a=r+c,l=s+c;break;case 1:n=o-c,a=r+c,l=s+c;break;case 2:o=n+c,r=a-c,l=s+c;break;case 3:n=o-c,r=a-c,l=s+c;break;case 4:o=n+c,a=r+c,s=l-c;break;case 5:n=o-c,a=r+c,s=l-c;break;case 6:o=n+c,r=a-c,s=l-c;break;case 7:n=o-c,r=a-c,s=l-c;break}this._root&&this._root.length&&(this._root=u)}return this._x0=n,this._y0=r,this._z0=s,this._x1=o,this._y1=a,this._z1=l,this}function B1(){var i=[];return this.visit(function(e){if(!e.length)do i.push(e.data);while(e=e.next)}),i}function O1(i){return arguments.length?this.cover(+i[0][0],+i[0][1],+i[0][2]).cover(+i[1][0],+i[1][1],+i[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]}function Pt(i,e,t,n,r,s,o){this.node=i,this.x0=e,this.y0=t,this.z0=n,this.x1=r,this.y1=s,this.z1=o}function k1(i,e,t,n){var r,s=this._x0,o=this._y0,a=this._z0,l,c,u,h,d,f,p=this._x1,_=this._y1,g=this._z1,m=[],v=this._root,x,y;for(v&&m.push(new Pt(v,s,o,a,p,_,g)),n==null?n=1/0:(s=i-n,o=e-n,a=t-n,p=i+n,_=e+n,g=t+n,n*=n);x=m.pop();)if(!(!(v=x.node)||(l=x.x0)>p||(c=x.y0)>_||(u=x.z0)>g||(h=x.x1)<s||(d=x.y1)<o||(f=x.z1)<a))if(v.length){var T=(l+h)/2,b=(c+d)/2,M=(u+f)/2;m.push(new Pt(v[7],T,b,M,h,d,f),new Pt(v[6],l,b,M,T,d,f),new Pt(v[5],T,c,M,h,b,f),new Pt(v[4],l,c,M,T,b,f),new Pt(v[3],T,b,u,h,d,M),new Pt(v[2],l,b,u,T,d,M),new Pt(v[1],T,c,u,h,b,M),new Pt(v[0],l,c,u,T,b,M)),(y=(t>=M)<<2|(e>=b)<<1|i>=T)&&(x=m[m.length-1],m[m.length-1]=m[m.length-1-y],m[m.length-1-y]=x)}else{var w=i-+this._x.call(null,v.data),E=e-+this._y.call(null,v.data),S=t-+this._z.call(null,v.data),C=w*w+E*E+S*S;if(C<n){var I=Math.sqrt(n=C);s=i-I,o=e-I,a=t-I,p=i+I,_=e+I,g=t+I,r=v.data}}return r}const G1=(i,e,t,n,r,s)=>Math.sqrt((i-n)**2+(e-r)**2+(t-s)**2);function z1(i,e,t,n){const r=[],s=i-n,o=e-n,a=t-n,l=i+n,c=e+n,u=t+n;return this.visit((h,d,f,p,_,g,m)=>{if(!h.length)do{const v=h.data;G1(i,e,t,this._x(v),this._y(v),this._z(v))<=n&&r.push(v)}while(h=h.next);return d>l||f>c||p>u||_<s||g<o||m<a}),r}function V1(i){if(isNaN(d=+this._x.call(null,i))||isNaN(f=+this._y.call(null,i))||isNaN(p=+this._z.call(null,i)))return this;var e,t=this._root,n,r,s,o=this._x0,a=this._y0,l=this._z0,c=this._x1,u=this._y1,h=this._z1,d,f,p,_,g,m,v,x,y,T,b;if(!t)return this;if(t.length)for(;;){if((v=d>=(_=(o+c)/2))?o=_:c=_,(x=f>=(g=(a+u)/2))?a=g:u=g,(y=p>=(m=(l+h)/2))?l=m:h=m,e=t,!(t=t[T=y<<2|x<<1|v]))return this;if(!t.length)break;(e[T+1&7]||e[T+2&7]||e[T+3&7]||e[T+4&7]||e[T+5&7]||e[T+6&7]||e[T+7&7])&&(n=e,b=T)}for(;t.data!==i;)if(r=t,!(t=t.next))return this;return(s=t.next)&&delete t.next,r?(s?r.next=s:delete r.next,this):e?(s?e[T]=s:delete e[T],(t=e[0]||e[1]||e[2]||e[3]||e[4]||e[5]||e[6]||e[7])&&t===(e[7]||e[6]||e[5]||e[4]||e[3]||e[2]||e[1]||e[0])&&!t.length&&(n?n[b]=t:this._root=t),this):(this._root=s,this)}function H1(i){for(var e=0,t=i.length;e<t;++e)this.remove(i[e]);return this}function W1(){return this._root}function $1(){var i=0;return this.visit(function(e){if(!e.length)do++i;while(e=e.next)}),i}function q1(i){var e=[],t,n=this._root,r,s,o,a,l,c,u;for(n&&e.push(new Pt(n,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));t=e.pop();)if(!i(n=t.node,s=t.x0,o=t.y0,a=t.z0,l=t.x1,c=t.y1,u=t.z1)&&n.length){var h=(s+l)/2,d=(o+c)/2,f=(a+u)/2;(r=n[7])&&e.push(new Pt(r,h,d,f,l,c,u)),(r=n[6])&&e.push(new Pt(r,s,d,f,h,c,u)),(r=n[5])&&e.push(new Pt(r,h,o,f,l,d,u)),(r=n[4])&&e.push(new Pt(r,s,o,f,h,d,u)),(r=n[3])&&e.push(new Pt(r,h,d,a,l,c,f)),(r=n[2])&&e.push(new Pt(r,s,d,a,h,c,f)),(r=n[1])&&e.push(new Pt(r,h,o,a,l,d,f)),(r=n[0])&&e.push(new Pt(r,s,o,a,h,d,f))}return this}function j1(i){var e=[],t=[],n;for(this._root&&e.push(new Pt(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));n=e.pop();){var r=n.node;if(r.length){var s,o=n.x0,a=n.y0,l=n.z0,c=n.x1,u=n.y1,h=n.z1,d=(o+c)/2,f=(a+u)/2,p=(l+h)/2;(s=r[0])&&e.push(new Pt(s,o,a,l,d,f,p)),(s=r[1])&&e.push(new Pt(s,d,a,l,c,f,p)),(s=r[2])&&e.push(new Pt(s,o,f,l,d,u,p)),(s=r[3])&&e.push(new Pt(s,d,f,l,c,u,p)),(s=r[4])&&e.push(new Pt(s,o,a,p,d,f,h)),(s=r[5])&&e.push(new Pt(s,d,a,p,c,f,h)),(s=r[6])&&e.push(new Pt(s,o,f,p,d,u,h)),(s=r[7])&&e.push(new Pt(s,d,f,p,c,u,h))}t.push(n)}for(;n=t.pop();)i(n.node,n.x0,n.y0,n.z0,n.x1,n.y1,n.z1);return this}function X1(i){return i[0]}function Y1(i){return arguments.length?(this._x=i,this):this._x}function K1(i){return i[1]}function Z1(i){return arguments.length?(this._y=i,this):this._y}function Q1(i){return i[2]}function J1(i){return arguments.length?(this._z=i,this):this._z}function K0(i,e,t,n){var r=new Nm(e??X1,t??K1,n??Q1,NaN,NaN,NaN,NaN,NaN,NaN);return i==null?r:r.addAll(i)}function Nm(i,e,t,n,r,s,o,a,l){this._x=i,this._y=e,this._z=t,this._x0=n,this._y0=r,this._z0=s,this._x1=o,this._y1=a,this._z1=l,this._root=void 0}function F_(i){for(var e={data:i.data},t=e;i=i.next;)t=t.next={data:i.data};return e}var Cn=K0.prototype=Nm.prototype;Cn.copy=function(){var i=new Nm(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),e=this._root,t,n;if(!e)return i;if(!e.length)return i._root=F_(e),i;for(t=[{source:e,target:i._root=new Array(8)}];e=t.pop();)for(var r=0;r<8;++r)(n=e.source[r])&&(n.length?t.push({source:n,target:e.target[r]=new Array(8)}):e.target[r]=F_(n));return i};Cn.add=I1;Cn.addAll=U1;Cn.cover=F1;Cn.data=B1;Cn.extent=O1;Cn.find=k1;Cn.findAllWithinRadius=z1;Cn.remove=V1;Cn.removeAll=H1;Cn.root=W1;Cn.size=$1;Cn.visit=q1;Cn.visitAfter=j1;Cn.x=Y1;Cn.y=Z1;Cn.z=J1;function Ir(i){return function(){return i}}function wr(i){return(i()-.5)*1e-6}function eN(i){return i.index}function B_(i,e){var t=i.get(e);if(!t)throw new Error("node not found: "+e);return t}function tN(i){var e=eN,t=d,n,r=Ir(30),s,o,a,l,c,u,h=1;i==null&&(i=[]);function d(m){return 1/Math.min(l[m.source.index],l[m.target.index])}function f(m){for(var v=0,x=i.length;v<h;++v)for(var y=0,T,b,M,w=0,E=0,S=0,C,I;y<x;++y)T=i[y],b=T.source,M=T.target,w=M.x+M.vx-b.x-b.vx||wr(u),a>1&&(E=M.y+M.vy-b.y-b.vy||wr(u)),a>2&&(S=M.z+M.vz-b.z-b.vz||wr(u)),C=Math.sqrt(w*w+E*E+S*S),C=(C-s[y])/C*m*n[y],w*=C,E*=C,S*=C,M.vx-=w*(I=c[y]),a>1&&(M.vy-=E*I),a>2&&(M.vz-=S*I),b.vx+=w*(I=1-I),a>1&&(b.vy+=E*I),a>2&&(b.vz+=S*I)}function p(){if(o){var m,v=o.length,x=i.length,y=new Map(o.map((b,M)=>[e(b,M,o),b])),T;for(m=0,l=new Array(v);m<x;++m)T=i[m],T.index=m,typeof T.source!="object"&&(T.source=B_(y,T.source)),typeof T.target!="object"&&(T.target=B_(y,T.target)),l[T.source.index]=(l[T.source.index]||0)+1,l[T.target.index]=(l[T.target.index]||0)+1;for(m=0,c=new Array(x);m<x;++m)T=i[m],c[m]=l[T.source.index]/(l[T.source.index]+l[T.target.index]);n=new Array(x),_(),s=new Array(x),g()}}function _(){if(o)for(var m=0,v=i.length;m<v;++m)n[m]=+t(i[m],m,i)}function g(){if(o)for(var m=0,v=i.length;m<v;++m)s[m]=+r(i[m],m,i)}return f.initialize=function(m,...v){o=m,u=v.find(x=>typeof x=="function")||Math.random,a=v.find(x=>[1,2,3].includes(x))||2,p()},f.links=function(m){return arguments.length?(i=m,p(),f):i},f.id=function(m){return arguments.length?(e=m,f):e},f.iterations=function(m){return arguments.length?(h=+m,f):h},f.strength=function(m){return arguments.length?(t=typeof m=="function"?m:Ir(+m),_(),f):t},f.distance=function(m){return arguments.length?(r=typeof m=="function"?m:Ir(+m),g(),f):r},f}var nN={value:()=>{}};function Z0(){for(var i=0,e=arguments.length,t={},n;i<e;++i){if(!(n=arguments[i]+"")||n in t||/[\s.]/.test(n))throw new Error("illegal type: "+n);t[n]=[]}return new Hu(t)}function Hu(i){this._=i}function iN(i,e){return i.trim().split(/^|\s+/).map(function(t){var n="",r=t.indexOf(".");if(r>=0&&(n=t.slice(r+1),t=t.slice(0,r)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}})}Hu.prototype=Z0.prototype={constructor:Hu,on:function(i,e){var t=this._,n=iN(i+"",t),r,s=-1,o=n.length;if(arguments.length<2){for(;++s<o;)if((r=(i=n[s]).type)&&(r=rN(t[r],i.name)))return r;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++s<o;)if(r=(i=n[s]).type)t[r]=O_(t[r],i.name,e);else if(e==null)for(r in t)t[r]=O_(t[r],i.name,null);return this},copy:function(){var i={},e=this._;for(var t in e)i[t]=e[t].slice();return new Hu(i)},call:function(i,e){if((r=arguments.length-2)>0)for(var t=new Array(r),n=0,r,s;n<r;++n)t[n]=arguments[n+2];if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(s=this._[i],n=0,r=s.length;n<r;++n)s[n].value.apply(e,t)},apply:function(i,e,t){if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(var n=this._[i],r=0,s=n.length;r<s;++r)n[r].value.apply(e,t)}};function rN(i,e){for(var t=0,n=i.length,r;t<n;++t)if((r=i[t]).name===e)return r.value}function O_(i,e,t){for(var n=0,r=i.length;n<r;++n)if(i[n].name===e){i[n]=nN,i=i.slice(0,n).concat(i.slice(n+1));break}return t!=null&&i.push({name:e,value:t}),i}var ba=0,gl=0,Ka=0,Q0=1e3,sh,_l,oh=0,so=0,Bh=0,ec=typeof performance=="object"&&performance.now?performance:Date,J0=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(i){setTimeout(i,17)};function ex(){return so||(J0(sN),so=ec.now()+Bh)}function sN(){so=0}function op(){this._call=this._time=this._next=null}op.prototype=tx.prototype={constructor:op,restart:function(i,e,t){if(typeof i!="function")throw new TypeError("callback is not a function");t=(t==null?ex():+t)+(e==null?0:+e),!this._next&&_l!==this&&(_l?_l._next=this:sh=this,_l=this),this._call=i,this._time=t,ap()},stop:function(){this._call&&(this._call=null,this._time=1/0,ap())}};function tx(i,e,t){var n=new op;return n.restart(i,e,t),n}function oN(){ex(),++ba;for(var i=sh,e;i;)(e=so-i._time)>=0&&i._call.call(void 0,e),i=i._next;--ba}function k_(){so=(oh=ec.now())+Bh,ba=gl=0;try{oN()}finally{ba=0,lN(),so=0}}function aN(){var i=ec.now(),e=i-oh;e>Q0&&(Bh-=e,oh=i)}function lN(){for(var i,e=sh,t,n=1/0;e;)e._call?(n>e._time&&(n=e._time),i=e,e=e._next):(t=e._next,e._next=null,e=i?i._next=t:sh=t);_l=i,ap(n)}function ap(i){if(!ba){gl&&(gl=clearTimeout(gl));var e=i-so;e>24?(i<1/0&&(gl=setTimeout(k_,i-ec.now()-Bh)),Ka&&(Ka=clearInterval(Ka))):(Ka||(oh=ec.now(),Ka=setInterval(aN,Q0)),ba=1,J0(k_))}}const cN=1664525,uN=1013904223,G_=4294967296;function hN(){let i=1;return()=>(i=(cN*i+uN)%G_)/G_}var z_=3;function Yd(i){return i.x}function V_(i){return i.y}function dN(i){return i.z}var fN=10,pN=Math.PI*(3-Math.sqrt(5)),mN=Math.PI*20/(9+Math.sqrt(221));function gN(i,e){e=e||2;var t=Math.min(z_,Math.max(1,Math.round(e))),n,r=1,s=.001,o=1-Math.pow(s,1/300),a=0,l=.6,c=new Map,u=tx(f),h=Z0("tick","end"),d=hN();i==null&&(i=[]);function f(){p(),h.call("tick",n),r<s&&(u.stop(),h.call("end",n))}function p(m){var v,x=i.length,y;m===void 0&&(m=1);for(var T=0;T<m;++T)for(r+=(a-r)*o,c.forEach(function(b){b(r)}),v=0;v<x;++v)y=i[v],y.fx==null?y.x+=y.vx*=l:(y.x=y.fx,y.vx=0),t>1&&(y.fy==null?y.y+=y.vy*=l:(y.y=y.fy,y.vy=0)),t>2&&(y.fz==null?y.z+=y.vz*=l:(y.z=y.fz,y.vz=0));return n}function _(){for(var m=0,v=i.length,x;m<v;++m){if(x=i[m],x.index=m,x.fx!=null&&(x.x=x.fx),x.fy!=null&&(x.y=x.fy),x.fz!=null&&(x.z=x.fz),isNaN(x.x)||t>1&&isNaN(x.y)||t>2&&isNaN(x.z)){var y=fN*(t>2?Math.cbrt(.5+m):t>1?Math.sqrt(.5+m):m),T=m*pN,b=m*mN;t===1?x.x=y:t===2?(x.x=y*Math.cos(T),x.y=y*Math.sin(T)):(x.x=y*Math.sin(T)*Math.cos(b),x.y=y*Math.cos(T),x.z=y*Math.sin(T)*Math.sin(b))}(isNaN(x.vx)||t>1&&isNaN(x.vy)||t>2&&isNaN(x.vz))&&(x.vx=0,t>1&&(x.vy=0),t>2&&(x.vz=0))}}function g(m){return m.initialize&&m.initialize(i,d,t),m}return _(),n={tick:p,restart:function(){return u.restart(f),n},stop:function(){return u.stop(),n},numDimensions:function(m){return arguments.length?(t=Math.min(z_,Math.max(1,Math.round(m))),c.forEach(g),n):t},nodes:function(m){return arguments.length?(i=m,_(),c.forEach(g),n):i},alpha:function(m){return arguments.length?(r=+m,n):r},alphaMin:function(m){return arguments.length?(s=+m,n):s},alphaDecay:function(m){return arguments.length?(o=+m,n):+o},alphaTarget:function(m){return arguments.length?(a=+m,n):a},velocityDecay:function(m){return arguments.length?(l=1-m,n):1-l},randomSource:function(m){return arguments.length?(d=m,c.forEach(g),n):d},force:function(m,v){return arguments.length>1?(v==null?c.delete(m):c.set(m,g(v)),n):c.get(m)},find:function(){var m=Array.prototype.slice.call(arguments),v=m.shift()||0,x=(t>1?m.shift():null)||0,y=(t>2?m.shift():null)||0,T=m.shift()||1/0,b=0,M=i.length,w,E,S,C,I,k;for(T*=T,b=0;b<M;++b)I=i[b],w=v-I.x,E=x-(I.y||0),S=y-(I.z||0),C=w*w+E*E+S*S,C<T&&(k=I,T=C);return k},on:function(m,v){return arguments.length>1?(h.on(m,v),n):h.on(m)}}}function _N(){var i,e,t,n,r,s=Ir(-30),o,a=1,l=1/0,c=.81;function u(p){var _,g=i.length,m=(e===1?q0(i,Yd):e===2?X0(i,Yd,V_):e===3?K0(i,Yd,V_,dN):null).visitAfter(d);for(r=p,_=0;_<g;++_)t=i[_],m.visit(f)}function h(){if(i){var p,_=i.length,g;for(o=new Array(_),p=0;p<_;++p)g=i[p],o[g.index]=+s(g,p,i)}}function d(p){var _=0,g,m,v=0,x,y,T,b,M=p.length;if(M){for(x=y=T=b=0;b<M;++b)(g=p[b])&&(m=Math.abs(g.value))&&(_+=g.value,v+=m,x+=m*(g.x||0),y+=m*(g.y||0),T+=m*(g.z||0));_*=Math.sqrt(4/M),p.x=x/v,e>1&&(p.y=y/v),e>2&&(p.z=T/v)}else{g=p,g.x=g.data.x,e>1&&(g.y=g.data.y),e>2&&(g.z=g.data.z);do _+=o[g.data.index];while(g=g.next)}p.value=_}function f(p,_,g,m,v){if(!p.value)return!0;var x=[g,m,v][e-1],y=p.x-t.x,T=e>1?p.y-t.y:0,b=e>2?p.z-t.z:0,M=x-_,w=y*y+T*T+b*b;if(M*M/c<w)return w<l&&(y===0&&(y=wr(n),w+=y*y),e>1&&T===0&&(T=wr(n),w+=T*T),e>2&&b===0&&(b=wr(n),w+=b*b),w<a&&(w=Math.sqrt(a*w)),t.vx+=y*p.value*r/w,e>1&&(t.vy+=T*p.value*r/w),e>2&&(t.vz+=b*p.value*r/w)),!0;if(p.length||w>=l)return;(p.data!==t||p.next)&&(y===0&&(y=wr(n),w+=y*y),e>1&&T===0&&(T=wr(n),w+=T*T),e>2&&b===0&&(b=wr(n),w+=b*b),w<a&&(w=Math.sqrt(a*w)));do p.data!==t&&(M=o[p.data.index]*r/w,t.vx+=y*M,e>1&&(t.vy+=T*M),e>2&&(t.vz+=b*M));while(p=p.next)}return u.initialize=function(p,..._){i=p,n=_.find(g=>typeof g=="function")||Math.random,e=_.find(g=>[1,2,3].includes(g))||2,h()},u.strength=function(p){return arguments.length?(s=typeof p=="function"?p:Ir(+p),h(),u):s},u.distanceMin=function(p){return arguments.length?(a=p*p,u):Math.sqrt(a)},u.distanceMax=function(p){return arguments.length?(l=p*p,u):Math.sqrt(l)},u.theta=function(p){return arguments.length?(c=p*p,u):Math.sqrt(c)},u}function vN(i,e,t,n){var r,s,o=Ir(.1),a,l;typeof i!="function"&&(i=Ir(+i)),e==null&&(e=0),t==null&&(t=0),n==null&&(n=0);function c(h){for(var d=0,f=r.length;d<f;++d){var p=r[d],_=p.x-e||1e-6,g=(p.y||0)-t||1e-6,m=(p.z||0)-n||1e-6,v=Math.sqrt(_*_+g*g+m*m),x=(l[d]-v)*a[d]*h/v;p.vx+=_*x,s>1&&(p.vy+=g*x),s>2&&(p.vz+=m*x)}}function u(){if(r){var h,d=r.length;for(a=new Array(d),l=new Array(d),h=0;h<d;++h)l[h]=+i(r[h],h,r),a[h]=isNaN(l[h])?0:+o(r[h],h,r)}}return c.initialize=function(h,...d){r=h,s=d.find(f=>[1,2,3].includes(f))||2,u()},c.strength=function(h){return arguments.length?(o=typeof h=="function"?h:Ir(+h),u(),c):o},c.radius=function(h){return arguments.length?(i=typeof h=="function"?h:Ir(+h),u(),c):i},c.x=function(h){return arguments.length?(e=+h,c):e},c.y=function(h){return arguments.length?(t=+h,c):t},c.z=function(h){return arguments.length?(n=+h,c):n},c}var Pm=function(e){xN(e);var t=yN(e);return e.on=t.on,e.off=t.off,e.fire=t.fire,e};function yN(i){var e=Object.create(null);return{on:function(t,n,r){if(typeof n!="function")throw new Error("callback is expected to be a function");var s=e[t];return s||(s=e[t]=[]),s.push({callback:n,ctx:r}),i},off:function(t,n){var r=typeof t>"u";if(r)return e=Object.create(null),i;if(e[t]){var s=typeof n!="function";if(s)delete e[t];else for(var o=e[t],a=0;a<o.length;++a)o[a].callback===n&&o.splice(a,1)}return i},fire:function(t){var n=e[t];if(!n)return i;var r;arguments.length>1&&(r=Array.prototype.splice.call(arguments,1));for(var s=0;s<n.length;++s){var o=n[s];o.callback.apply(o.ctx,r)}return i}}}function xN(i){if(!i)throw new Error("Eventify cannot use falsy object as events subject");for(var e=["on","fire","off"],t=0;t<e.length;++t)if(i.hasOwnProperty(e[t]))throw new Error("Subject cannot be eventified, since it already has property '"+e[t]+"'")}var bN=TN,SN=Pm;function TN(i){if(i=i||{},"uniqueLinkId"in i&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),i.multigraph=i.uniqueLinkId),i.multigraph===void 0&&(i.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var e=new Map,t=new Map,n={},r=0,s=i.multigraph?y:x,o=[],a=B,l=B,c=B,u=B,h={version:20,addNode:_,addLink:v,removeLink:w,removeNode:m,getNode:g,getNodeCount:T,getLinkCount:b,getEdgeCount:b,getLinksCount:b,getNodesCount:T,getLinks:M,forEachNode:fe,forEachLinkedNode:k,forEachLink:I,beginUpdate:c,endUpdate:u,clear:C,hasLink:S,hasNode:g,getLink:S};return SN(h),d(),h;function d(){var Y=h.on;h.on=ne;function ne(){return h.beginUpdate=c=te,h.endUpdate=u=q,a=f,l=p,h.on=Y,Y.apply(h,arguments)}}function f(Y,ne){o.push({link:Y,changeType:ne})}function p(Y,ne){o.push({node:Y,changeType:ne})}function _(Y,ne){if(Y===void 0)throw new Error("Invalid node identifier");c();var ve=g(Y);return ve?(ve.data=ne,l(ve,"update")):(ve=new MN(Y,ne),l(ve,"add")),e.set(Y,ve),u(),ve}function g(Y){return e.get(Y)}function m(Y){var ne=g(Y);if(!ne)return!1;c();var ve=ne.links;return ve&&(ve.forEach(E),ne.links=null),e.delete(Y),l(ne,"remove"),u(),!0}function v(Y,ne,ve){c();var Be=g(Y)||_(Y),O=g(ne)||_(ne),$=s(Y,ne,ve),ce=t.has($.id);return t.set($.id,$),H_(Be,$),Y!==ne&&H_(O,$),a($,ce?"update":"add"),u(),$}function x(Y,ne,ve){var Be=fu(Y,ne),O=t.get(Be);return O?(O.data=ve,O):new W_(Y,ne,ve,Be)}function y(Y,ne,ve){var Be=fu(Y,ne),O=n.hasOwnProperty(Be);if(O||S(Y,ne)){O||(n[Be]=0);var $="@"+ ++n[Be];Be=fu(Y+$,ne+$)}return new W_(Y,ne,ve,Be)}function T(){return e.size}function b(){return t.size}function M(Y){var ne=g(Y);return ne?ne.links:null}function w(Y,ne){return ne!==void 0&&(Y=S(Y,ne)),E(Y)}function E(Y){if(!Y||!t.get(Y.id))return!1;c(),t.delete(Y.id);var ne=g(Y.fromId),ve=g(Y.toId);return ne&&ne.links.delete(Y),ve&&ve.links.delete(Y),a(Y,"remove"),u(),!0}function S(Y,ne){if(!(Y===void 0||ne===void 0))return t.get(fu(Y,ne))}function C(){c(),fe(function(Y){m(Y.id)}),u()}function I(Y){if(typeof Y=="function")for(var ne=t.values(),ve=ne.next();!ve.done;){if(Y(ve.value))return!0;ve=ne.next()}}function k(Y,ne,ve){var Be=g(Y);if(Be&&Be.links&&typeof ne=="function")return ve?L(Be.links,Y,ne):D(Be.links,Y,ne)}function D(Y,ne,ve){for(var Be,O=Y.values(),$=O.next();!$.done;){var ce=$.value,re=ce.fromId===ne?ce.toId:ce.fromId;if(Be=ve(e.get(re),ce),Be)return!0;$=O.next()}}function L(Y,ne,ve){for(var Be,O=Y.values(),$=O.next();!$.done;){var ce=$.value;if(ce.fromId===ne&&(Be=ve(e.get(ce.toId),ce),Be))return!0;$=O.next()}}function B(){}function te(){r+=1}function q(){r-=1,r===0&&o.length>0&&(h.fire("changed",o),o.length=0)}function fe(Y){if(typeof Y!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+Y);for(var ne=e.values(),ve=ne.next();!ve.done;){if(Y(ve.value))return!0;ve=ne.next()}}}function MN(i,e){this.id=i,this.links=null,this.data=e}function H_(i,e){i.links?i.links.add(e):i.links=new Set([e])}function W_(i,e,t,n){this.fromId=i,this.toId=e,this.data=t,this.id=n}function fu(i,e){return i.toString()+"👉 "+e.toString()}const EN=n0(bN);var Dm={exports:{}},xc={exports:{}},nx=function(e){return e===0?"x":e===1?"y":e===2?"z":"c"+(e+1)};const wN=nx;var Ia=function(e){return t;function t(n,r){let s=r&&r.indent||0,o=r&&r.join!==void 0?r.join:`
`,a=Array(s+1).join(" "),l=[];for(let c=0;c<e;++c){let u=wN(c),h=c===0?"":a;l.push(h+n.replace(/{var}/g,u))}return l.join(o)}};const ix=Ia;xc.exports=AN;xc.exports.generateCreateBodyFunctionBody=rx;xc.exports.getVectorCode=ox;xc.exports.getBodyCode=sx;function AN(i,e){let t=rx(i,e),{Body:n}=new Function(t)();return n}function rx(i,e){return`
${ox(i,e)}
${sx(i)}
return {Body: Body, Vector: Vector};
`}function sx(i){let e=ix(i),t=e("{var}",{join:", "});return`
function Body(${t}) {
  this.isPinned = false;
  this.pos = new Vector(${t});
  this.force = new Vector();
  this.velocity = new Vector();
  this.mass = 1;

  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.reset = function() {
  this.force.reset();
  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.setPosition = function (${t}) {
  ${e("this.pos.{var} = {var} || 0;",{indent:2})}
};`}function ox(i,e){let t=ix(i),n="";return e&&(n=`${t(`
   var v{var};
Object.defineProperty(this, '{var}', {
  set: function(v) { 
    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');
    v{var} = v; 
  },
  get: function() { return v{var}; }
});`)}`),`function Vector(${t("{var}",{join:", "})}) {
  ${n}
    if (typeof arguments[0] === 'object') {
      // could be another vector
      let v = arguments[0];
      ${t('if (!Number.isFinite(v.{var})) throw new Error("Expected value is not a finite number at Vector constructor ({var})");',{indent:4})}
      ${t("this.{var} = v.{var};",{indent:4})}
    } else {
      ${t('this.{var} = typeof {var} === "number" ? {var} : 0;',{indent:4})}
    }
  }
  
  Vector.prototype.reset = function () {
    ${t("this.{var} = ",{join:""})}0;
  };`}var RN=xc.exports,ys={exports:{}};const Lm=Ia,ts=nx;ys.exports=CN;ys.exports.generateQuadTreeFunctionBody=ax;ys.exports.getInsertStackCode=dx;ys.exports.getQuadNodeCode=hx;ys.exports.isSamePosition=lx;ys.exports.getChildBodyCode=ux;ys.exports.setChildBodyCode=cx;function CN(i){let e=ax(i);return new Function(e)()}function ax(i){let e=Lm(i),t=Math.pow(2,i);return`
${dx()}
${hx(i)}
${lx(i)}
${ux(i)}
${cx(i)}

function createQuadTree(options, random) {
  options = options || {};
  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;
  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;

  var gravity = options.gravity;
  var updateQueue = [];
  var insertStack = new InsertStack();
  var theta = options.theta;

  var nodesCache = [];
  var currentInCache = 0;
  var root = newNode();

  return {
    insertBodies: insertBodies,

    /**
     * Gets root node if it is present
     */
    getRoot: function() {
      return root;
    },

    updateBodyForce: update,

    options: function(newOptions) {
      if (newOptions) {
        if (typeof newOptions.gravity === 'number') {
          gravity = newOptions.gravity;
        }
        if (typeof newOptions.theta === 'number') {
          theta = newOptions.theta;
        }

        return this;
      }

      return {
        gravity: gravity,
        theta: theta
      };
    }
  };

  function newNode() {
    // To avoid pressure on GC we reuse nodes.
    var node = nodesCache[currentInCache];
    if (node) {
${o("      node.")}
      node.body = null;
      node.mass = ${e("node.mass_{var} = ",{join:""})}0;
      ${e("node.min_{var} = node.max_{var} = ",{join:""})}0;
    } else {
      node = new QuadNode();
      nodesCache[currentInCache] = node;
    }

    ++currentInCache;
    return node;
  }

  function update(sourceBody) {
    var queue = updateQueue;
    var v;
    ${e("var d{var};",{indent:4})}
    var r; 
    ${e("var f{var} = 0;",{indent:4})}
    var queueLength = 1;
    var shiftIdx = 0;
    var pushIdx = 1;

    queue[0] = root;

    while (queueLength) {
      var node = queue[shiftIdx];
      var body = node.body;

      queueLength -= 1;
      shiftIdx += 1;
      var differentBody = (body !== sourceBody);
      if (body && differentBody) {
        // If the current node is a leaf node (and it is not source body),
        // calculate the force exerted by the current node on body, and add this
        // amount to body's net force.
        ${e("d{var} = body.pos.{var} - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Poor man's protection against zero distance.
          ${e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});
        }

        // This is standard gravitation force calculation but we divide
        // by r^3 to save two operations when normalizing force vector.
        v = gravity * body.mass * sourceBody.mass / (r * r * r);
        ${e("f{var} += v * d{var};",{indent:8})}
      } else if (differentBody) {
        // Otherwise, calculate the ratio s / r,  where s is the width of the region
        // represented by the internal node, and r is the distance between the body
        // and the node's center-of-mass
        ${e("d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Sorry about code duplication. I don't want to create many functions
          // right away. Just want to see performance first.
          ${e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});
        }
        // If s / r < θ, treat this internal node as a single body, and calculate the
        // force it exerts on sourceBody, and add this amount to sourceBody's net force.
        if ((node.max_${ts(0)} - node.min_${ts(0)}) / r < theta) {
          // in the if statement above we consider node's width only
          // because the region was made into square during tree creation.
          // Thus there is no difference between using width or height.
          v = gravity * node.mass * sourceBody.mass / (r * r * r);
          ${e("f{var} += v * d{var};",{indent:10})}
        } else {
          // Otherwise, run the procedure recursively on each of the current node's children.

          // I intentionally unfolded this loop, to save several CPU cycles.
${s()}
        }
      }
    }

    ${e("sourceBody.force.{var} += f{var};",{indent:4})}
  }

  function insertBodies(bodies) {
    ${e("var {var}min = Number.MAX_VALUE;",{indent:4})}
    ${e("var {var}max = Number.MIN_VALUE;",{indent:4})}
    var i = bodies.length;

    // To reduce quad tree depth we are looking for exact bounding box of all particles.
    while (i--) {
      var pos = bodies[i].pos;
      ${e("if (pos.{var} < {var}min) {var}min = pos.{var};",{indent:6})}
      ${e("if (pos.{var} > {var}max) {var}max = pos.{var};",{indent:6})}
    }

    // Makes the bounds square.
    var maxSideLength = -Infinity;
    ${e("if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;",{indent:4})}

    currentInCache = 0;
    root = newNode();
    ${e("root.min_{var} = {var}min;",{indent:4})}
    ${e("root.max_{var} = {var}min + maxSideLength;",{indent:4})}

    i = bodies.length - 1;
    if (i >= 0) {
      root.body = bodies[i];
    }
    while (i--) {
      insert(bodies[i], root);
    }
  }

  function insert(newBody) {
    insertStack.reset();
    insertStack.push(root, newBody);

    while (!insertStack.isEmpty()) {
      var stackItem = insertStack.pop();
      var node = stackItem.node;
      var body = stackItem.body;

      if (!node.body) {
        // This is internal node. Update the total mass of the node and center-of-mass.
        ${e("var {var} = body.pos.{var};",{indent:8})}
        node.mass += body.mass;
        ${e("node.mass_{var} += body.mass * {var};",{indent:8})}

        // Recursively insert the body in the appropriate quadrant.
        // But first find the appropriate quadrant.
        var quadIdx = 0; // Assume we are in the 0's quad.
        ${e("var min_{var} = node.min_{var};",{indent:8})}
        ${e("var max_{var} = (min_{var} + node.max_{var}) / 2;",{indent:8})}

${r(8)}

        var child = getChild(node, quadIdx);

        if (!child) {
          // The node is internal but this quadrant is not taken. Add
          // subnode to it.
          child = newNode();
          ${e("child.min_{var} = min_{var};",{indent:10})}
          ${e("child.max_{var} = max_{var};",{indent:10})}
          child.body = body;

          setChild(node, quadIdx, child);
        } else {
          // continue searching in this quadrant.
          insertStack.push(child, body);
        }
      } else {
        // We are trying to add to the leaf node.
        // We have to convert current leaf into internal node
        // and continue adding two nodes.
        var oldBody = node.body;
        node.body = null; // internal nodes do not cary bodies

        if (isSamePosition(oldBody.pos, body.pos)) {
          // Prevent infinite subdivision by bumping one node
          // anywhere in this quadrant
          var retriesCount = 3;
          do {
            var offset = random.nextDouble();
            ${e("var d{var} = (node.max_{var} - node.min_{var}) * offset;",{indent:12})}

            ${e("oldBody.pos.{var} = node.min_{var} + d{var};",{indent:12})}
            retriesCount -= 1;
            // Make sure we don't bump it out of the box. If we do, next iteration should fix it
          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));

          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {
            // This is very bad, we ran out of precision.
            // if we do not return from the method we'll get into
            // infinite loop here. So we sacrifice correctness of layout, and keep the app running
            // Next layout iteration should get larger bounding box in the first step and fix this
            return;
          }
        }
        // Next iteration should subdivide node further.
        insertStack.push(node, oldBody);
        insertStack.push(node, body);
      }
    }
  }
}
return createQuadTree;

`;function r(a){let l=[],c=Array(a+1).join(" ");for(let u=0;u<i;++u)l.push(c+`if (${ts(u)} > max_${ts(u)}) {`),l.push(c+`  quadIdx = quadIdx + ${Math.pow(2,u)};`),l.push(c+`  min_${ts(u)} = max_${ts(u)};`),l.push(c+`  max_${ts(u)} = node.max_${ts(u)};`),l.push(c+"}");return l.join(`
`)}function s(){let a=Array(11).join(" "),l=[];for(let c=0;c<t;++c)l.push(a+`if (node.quad${c}) {`),l.push(a+`  queue[pushIdx] = node.quad${c};`),l.push(a+"  queueLength += 1;"),l.push(a+"  pushIdx += 1;"),l.push(a+"}");return l.join(`
`)}function o(a){let l=[];for(let c=0;c<t;++c)l.push(`${a}quad${c} = null;`);return l.join(`
`)}}function lx(i){let e=Lm(i);return`
  function isSamePosition(point1, point2) {
    ${e("var d{var} = Math.abs(point1.{var} - point2.{var});",{indent:2})}
  
    return ${e("d{var} < 1e-8",{join:" && "})};
  }  
`}function cx(i){var e=Math.pow(2,i);return`
function setChild(node, idx, child) {
  ${t()}
}`;function t(){let n=[];for(let r=0;r<e;++r){let s=r===0?"  ":"  else ";n.push(`${s}if (idx === ${r}) node.quad${r} = child;`)}return n.join(`
`)}}function ux(i){return`function getChild(node, idx) {
${e()}
  return null;
}`;function e(){let t=[],n=Math.pow(2,i);for(let r=0;r<n;++r)t.push(`  if (idx === ${r}) return node.quad${r};`);return t.join(`
`)}}function hx(i){let e=Lm(i),t=Math.pow(2,i);var n=`
function QuadNode() {
  // body stored inside this node. In quad tree only leaf nodes (by construction)
  // contain bodies:
  this.body = null;

  // Child nodes are stored in quads. Each quad is presented by number:
  // 0 | 1
  // -----
  // 2 | 3
${r("  this.")}

  // Total mass of current node
  this.mass = 0;

  // Center of mass coordinates
  ${e("this.mass_{var} = 0;",{indent:2})}

  // bounding box coordinates
  ${e("this.min_{var} = 0;",{indent:2})}
  ${e("this.max_{var} = 0;",{indent:2})}
}
`;return n;function r(s){let o=[];for(let a=0;a<t;++a)o.push(`${s}quad${a} = null;`);return o.join(`
`)}}function dx(){return`
/**
 * Our implementation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function InsertStack () {
    this.stack = [];
    this.popIdx = 0;
}

InsertStack.prototype = {
    isEmpty: function() {
        return this.popIdx === 0;
    },
    push: function (node, body) {
        var item = this.stack[this.popIdx];
        if (!item) {
            // we are trying to avoid memory pressure: create new element
            // only when absolutely necessary
            this.stack[this.popIdx] = new InsertStackElement(node, body);
        } else {
            item.node = node;
            item.body = body;
        }
        ++this.popIdx;
    },
    pop: function () {
        if (this.popIdx > 0) {
            return this.stack[--this.popIdx];
        }
    },
    reset: function () {
        this.popIdx = 0;
    }
};

function InsertStackElement(node, body) {
    this.node = node; // QuadTree node
    this.body = body; // physical body which needs to be inserted to node
}
`}var NN=ys.exports,Im={exports:{}};Im.exports=DN;Im.exports.generateFunctionBody=fx;const PN=Ia;function DN(i){let e=fx(i);return new Function("bodies","settings","random",e)}function fx(i){let e=PN(i);return`
  var boundingBox = {
    ${e("min_{var}: 0, max_{var}: 0,",{indent:4})}
  };

  return {
    box: boundingBox,

    update: updateBoundingBox,

    reset: resetBoundingBox,

    getBestNewPosition: function (neighbors) {
      var ${e("base_{var} = 0",{join:", "})};

      if (neighbors.length) {
        for (var i = 0; i < neighbors.length; ++i) {
          let neighborPos = neighbors[i].pos;
          ${e("base_{var} += neighborPos.{var};",{indent:10})}
        }

        ${e("base_{var} /= neighbors.length;",{indent:8})}
      } else {
        ${e("base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;",{indent:8})}
      }

      var springLength = settings.springLength;
      return {
        ${e("{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,",{indent:8})}
      };
    }
  };

  function updateBoundingBox() {
    var i = bodies.length;
    if (i === 0) return; // No bodies - no borders.

    ${e("var max_{var} = -Infinity;",{indent:4})}
    ${e("var min_{var} = Infinity;",{indent:4})}

    while(i--) {
      // this is O(n), it could be done faster with quadtree, if we check the root node bounds
      var bodyPos = bodies[i].pos;
      ${e("if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};",{indent:6})}
      ${e("if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};",{indent:6})}
    }

    ${e("boundingBox.min_{var} = min_{var};",{indent:4})}
    ${e("boundingBox.max_{var} = max_{var};",{indent:4})}
  }

  function resetBoundingBox() {
    ${e("boundingBox.min_{var} = boundingBox.max_{var} = 0;",{indent:4})}
  }
`}var LN=Im.exports,Um={exports:{}};const IN=Ia;Um.exports=UN;Um.exports.generateCreateDragForceFunctionBody=px;function UN(i){let e=px(i);return new Function("options",e)}function px(i){return`
  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');

  return {
    update: function(body) {
      ${IN(i)("body.force.{var} -= options.dragCoefficient * body.velocity.{var};",{indent:6})}
    }
  };
`}var FN=Um.exports,Fm={exports:{}};const BN=Ia;Fm.exports=ON;Fm.exports.generateCreateSpringForceFunctionBody=mx;function ON(i){let e=mx(i);return new Function("options","random",e)}function mx(i){let e=BN(i);return`
  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');
  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');

  return {
    /**
     * Updates forces acting on a spring
     */
    update: function (spring) {
      var body1 = spring.from;
      var body2 = spring.to;
      var length = spring.length < 0 ? options.springLength : spring.length;
      ${e("var d{var} = body2.pos.{var} - body1.pos.{var};",{indent:6})}
      var r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});

      if (r === 0) {
        ${e("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:8})}
        r = Math.sqrt(${e("d{var} * d{var}",{join:" + "})});
      }

      var d = r - length;
      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;

      ${e("body1.force.{var} += coefficient * d{var}",{indent:6})};
      body1.springCount += 1;
      body1.springLength += r;

      ${e("body2.force.{var} -= coefficient * d{var}",{indent:6})};
      body2.springCount += 1;
      body2.springLength += r;
    }
  };
`}var kN=Fm.exports,Bm={exports:{}};const GN=Ia;Bm.exports=zN;Bm.exports.generateIntegratorFunctionBody=gx;function zN(i){let e=gx(i);return new Function("bodies","timeStep","adaptiveTimeStepWeight",e)}function gx(i){let e=GN(i);return`
  var length = bodies.length;
  if (length === 0) return 0;

  ${e("var d{var} = 0, t{var} = 0;",{indent:2})}

  for (var i = 0; i < length; ++i) {
    var body = bodies[i];
    if (body.isPinned) continue;

    if (adaptiveTimeStepWeight && body.springCount) {
      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);
    }

    var coeff = timeStep / body.mass;

    ${e("body.velocity.{var} += coeff * body.force.{var};",{indent:4})}
    ${e("var v{var} = body.velocity.{var};",{indent:4})}
    var v = Math.sqrt(${e("v{var} * v{var}",{join:" + "})});

    if (v > 1) {
      // We normalize it so that we move within timeStep range. 
      // for the case when v <= 1 - we let velocity to fade out.
      ${e("body.velocity.{var} = v{var} / v;",{indent:6})}
    }

    ${e("d{var} = timeStep * body.velocity.{var};",{indent:4})}

    ${e("body.pos.{var} += d{var};",{indent:4})}

    ${e("t{var} += Math.abs(d{var});",{indent:4})}
  }

  return (${e("t{var} * t{var}",{join:" + "})})/length;
`}var VN=Bm.exports,Kd,$_;function HN(){if($_)return Kd;$_=1,Kd=i;function i(e,t,n,r){this.from=e,this.to=t,this.length=n,this.coefficient=r}return Kd}var Zd,q_;function WN(){if(q_)return Zd;q_=1,Zd=i;function i(e,t){var n;if(e||(e={}),t){for(n in t)if(t.hasOwnProperty(n)){var r=e.hasOwnProperty(n),s=typeof t[n],o=!r||typeof e[n]!==s;o?e[n]=t[n]:s==="object"&&(e[n]=i(e[n],t[n]))}}return e}return Zd}var Za={exports:{}},j_;function $N(){if(j_)return Za.exports;j_=1,Za.exports=i,Za.exports.random=i,Za.exports.randomIterator=a;function i(l){var c=typeof l=="number"?l:+new Date;return new e(c)}function e(l){this.seed=l}e.prototype.next=o,e.prototype.nextDouble=s,e.prototype.uniform=s,e.prototype.gaussian=t,e.prototype.random=s;function t(){var l,c,u;do c=this.nextDouble()*2-1,u=this.nextDouble()*2-1,l=c*c+u*u;while(l>=1||l===0);return c*Math.sqrt(-2*Math.log(l)/l)}e.prototype.levy=n;function n(){var l=1.5,c=Math.pow(r(1+l)*Math.sin(Math.PI*l/2)/(r((1+l)/2)*l*Math.pow(2,(l-1)/2)),1/l);return this.gaussian()*c/Math.pow(Math.abs(this.gaussian()),1/l)}function r(l){return Math.sqrt(2*Math.PI/l)*Math.pow(1/Math.E*(l+1/(12*l-1/(10*l))),l)}function s(){var l=this.seed;return l=l+2127912214+(l<<12)&4294967295,l=(l^3345072700^l>>>19)&4294967295,l=l+374761393+(l<<5)&4294967295,l=(l+3550635116^l<<9)&4294967295,l=l+4251993797+(l<<3)&4294967295,l=(l^3042594569^l>>>16)&4294967295,this.seed=l,(l&268435455)/268435456}function o(l){return Math.floor(this.nextDouble()*l)}function a(l,c){var u=c||i();if(typeof u.next!="function")throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:d,shuffle:h};function h(){var f,p,_;for(f=l.length-1;f>0;--f)p=u.next(f+1),_=l[p],l[p]=l[f],l[f]=_;return l}function d(f){var p,_,g;for(p=l.length-1;p>0;--p)_=u.next(p+1),g=l[_],l[_]=l[p],l[p]=g,f(g);l.length&&f(l[0])}}return Za.exports}var _x=QN,qN=RN,jN=NN,XN=LN,YN=FN,KN=kN,ZN=VN,X_={};function QN(i){var e=HN(),t=WN(),n=Pm;if(i){if(i.springCoeff!==void 0)throw new Error("springCoeff was renamed to springCoefficient");if(i.dragCoeff!==void 0)throw new Error("dragCoeff was renamed to dragCoefficient")}i=t(i,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});var r=X_[i.dimensions];if(!r){var s=i.dimensions;r={Body:qN(s,i.debug),createQuadTree:jN(s),createBounds:XN(s),createDragForce:YN(s),createSpringForce:KN(s),integrate:ZN(s)},X_[s]=r}var o=r.Body,a=r.createQuadTree,l=r.createBounds,c=r.createDragForce,u=r.createSpringForce,h=r.integrate,d=L=>new o(L),f=$N().random(42),p=[],_=[],g=a(i,f),m=l(p,i,f),v=u(i,f),x=c(i),y=0,T=[],b=new Map,M=0;S("nbody",k),S("spring",D);var w={bodies:p,quadTree:g,springs:_,settings:i,addForce:S,removeForce:C,getForces:I,step:function(){for(var L=0;L<T.length;++L)T[L](M);var B=h(p,i.timeStep,i.adaptiveTimeStepWeight);return M+=1,B},addBody:function(L){if(!L)throw new Error("Body is required");return p.push(L),L},addBodyAt:function(L){if(!L)throw new Error("Body position is required");var B=d(L);return p.push(B),B},removeBody:function(L){if(L){var B=p.indexOf(L);if(!(B<0))return p.splice(B,1),p.length===0&&m.reset(),!0}},addSpring:function(L,B,te,q){if(!L||!B)throw new Error("Cannot add null spring to force simulator");typeof te!="number"&&(te=-1);var fe=new e(L,B,te,q>=0?q:-1);return _.push(fe),fe},getTotalMovement:function(){return y},removeSpring:function(L){if(L){var B=_.indexOf(L);if(B>-1)return _.splice(B,1),!0}},getBestNewBodyPosition:function(L){return m.getBestNewPosition(L)},getBBox:E,getBoundingBox:E,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(L){return L!==void 0?(i.gravity=L,g.options({gravity:L}),this):i.gravity},theta:function(L){return L!==void 0?(i.theta=L,g.options({theta:L}),this):i.theta},random:f};return JN(i,w),n(w),w;function E(){return m.update(),m.box}function S(L,B){if(b.has(L))throw new Error("Force "+L+" is already added");b.set(L,B),T.push(B)}function C(L){var B=T.indexOf(b.get(L));B<0||(T.splice(B,1),b.delete(L))}function I(){return b}function k(){if(p.length!==0){g.insertBodies(p);for(var L=p.length;L--;){var B=p[L];B.isPinned||(B.reset(),g.updateBodyForce(B),x.update(B))}}}function D(){for(var L=_.length;L--;)v.update(_[L])}}function JN(i,e){for(var t in i)eP(i,e,t)}function eP(i,e,t){if(i.hasOwnProperty(t)&&typeof e[t]!="function"){var n=Number.isFinite(i[t]);n?e[t]=function(r){if(r!==void 0){if(!Number.isFinite(r))throw new Error("Value of "+t+" should be a valid number.");return i[t]=r,e}return i[t]}:e[t]=function(r){return r!==void 0?(i[t]=r,e):i[t]}}}Dm.exports=nP;Dm.exports.simulator=_x;var tP=Pm;function nP(i,e){if(!i)throw new Error("Graph structure cannot be undefined");var t=e&&e.createSimulator||_x,n=t(e);if(Array.isArray(e))throw new Error("Physics settings is expected to be an object");var r=i.version>19?k:I;e&&typeof e.nodeMass=="function"&&(r=e.nodeMass);var s=new Map,o={},a=0,l=n.settings.springTransform||iP;x(),g();var c=!1,u={step:function(){if(a===0)return h(!0),!0;var D=n.step();u.lastMove=D,u.fire("step");var L=D/a,B=L<=.01;return h(B),B},getNodePosition:function(D){return C(D).pos},setNodePosition:function(D){var L=C(D);L.setPosition.apply(L,Array.prototype.slice.call(arguments,1))},getLinkPosition:function(D){var L=o[D];if(L)return{from:L.from.pos,to:L.to.pos}},getGraphRect:function(){return n.getBBox()},forEachBody:d,pinNode:function(D,L){var B=C(D.id);B.isPinned=!!L},isNodePinned:function(D){return C(D.id).isPinned},dispose:function(){i.off("changed",v),u.fire("disposed")},getBody:_,getSpring:p,getForceVectorLength:f,simulator:n,graph:i,lastMove:0};return tP(u),u;function h(D){c!==D&&(c=D,m(D))}function d(D){s.forEach(D)}function f(){var D=0,L=0;return d(function(B){D+=Math.abs(B.force.x),L+=Math.abs(B.force.y)}),Math.sqrt(D*D+L*L)}function p(D,L){var B;if(L===void 0)typeof D!="object"?B=D:B=D.id;else{var te=i.hasLink(D,L);if(!te)return;B=te.id}return o[B]}function _(D){return s.get(D)}function g(){i.on("changed",v)}function m(D){u.fire("stable",D)}function v(D){for(var L=0;L<D.length;++L){var B=D[L];B.changeType==="add"?(B.node&&y(B.node.id),B.link&&b(B.link)):B.changeType==="remove"&&(B.node&&T(B.node),B.link&&M(B.link))}a=i.getNodesCount()}function x(){a=0,i.forEachNode(function(D){y(D.id),a+=1}),i.forEachLink(b)}function y(D){var L=s.get(D);if(!L){var B=i.getNode(D);if(!B)throw new Error("initBody() was called with unknown node id");var te=B.position;if(!te){var q=w(B);te=n.getBestNewBodyPosition(q)}L=n.addBodyAt(te),L.id=D,s.set(D,L),E(D),S(B)&&(L.isPinned=!0)}}function T(D){var L=D.id,B=s.get(L);B&&(s.delete(L),n.removeBody(B))}function b(D){E(D.fromId),E(D.toId);var L=s.get(D.fromId),B=s.get(D.toId),te=n.addSpring(L,B,D.length);l(D,te),o[D.id]=te}function M(D){var L=o[D.id];if(L){var B=i.getNode(D.fromId),te=i.getNode(D.toId);B&&E(B.id),te&&E(te.id),delete o[D.id],n.removeSpring(L)}}function w(D){var L=[];if(!D.links)return L;for(var B=Math.min(D.links.length,2),te=0;te<B;++te){var q=D.links[te],fe=q.fromId!==D.id?s.get(q.fromId):s.get(q.toId);fe&&fe.pos&&L.push(fe)}return L}function E(D){var L=s.get(D);if(L.mass=r(D),Number.isNaN(L.mass))throw new Error("Node mass should be a number")}function S(D){return D&&(D.isPinned||D.data&&D.data.isPinned)}function C(D){var L=s.get(D);return L||(y(D),L=s.get(D)),L}function I(D){var L=i.getLinks(D);return L?1+L.length/3:1}function k(D){var L=i.getLinks(D);return L?1+L.size/3:1}}function iP(){}var rP=Dm.exports;const sP=n0(rP);function lp(i){var e=typeof i;return i!=null&&(e=="object"||e=="function")}var oP=typeof global=="object"&&global&&global.Object===Object&&global,aP=typeof self=="object"&&self&&self.Object===Object&&self,vx=oP||aP||Function("return this")(),Qd=function(){return vx.Date.now()},lP=/\s/;function cP(i){for(var e=i.length;e--&&lP.test(i.charAt(e)););return e}var uP=/^\s+/;function hP(i){return i&&i.slice(0,cP(i)+1).replace(uP,"")}var ah=vx.Symbol,yx=Object.prototype,dP=yx.hasOwnProperty,fP=yx.toString,Qa=ah?ah.toStringTag:void 0;function pP(i){var e=dP.call(i,Qa),t=i[Qa];try{i[Qa]=void 0;var n=!0}catch{}var r=fP.call(i);return n&&(e?i[Qa]=t:delete i[Qa]),r}var mP=Object.prototype,gP=mP.toString;function _P(i){return gP.call(i)}var vP="[object Null]",yP="[object Undefined]",Y_=ah?ah.toStringTag:void 0;function xP(i){return i==null?i===void 0?yP:vP:Y_&&Y_ in Object(i)?pP(i):_P(i)}function bP(i){return i!=null&&typeof i=="object"}var SP="[object Symbol]";function TP(i){return typeof i=="symbol"||bP(i)&&xP(i)==SP}var K_=NaN,MP=/^[-+]0x[0-9a-f]+$/i,EP=/^0b[01]+$/i,wP=/^0o[0-7]+$/i,AP=parseInt;function Z_(i){if(typeof i=="number")return i;if(TP(i))return K_;if(lp(i)){var e=typeof i.valueOf=="function"?i.valueOf():i;i=lp(e)?e+"":e}if(typeof i!="string")return i===0?i:+i;i=hP(i);var t=EP.test(i);return t||wP.test(i)?AP(i.slice(2),t?2:8):MP.test(i)?K_:+i}var RP="Expected a function",CP=Math.max,NP=Math.min;function PP(i,e,t){var n,r,s,o,a,l,c=0,u=!1,h=!1,d=!0;if(typeof i!="function")throw new TypeError(RP);e=Z_(e)||0,lp(t)&&(u=!!t.leading,h="maxWait"in t,s=h?CP(Z_(t.maxWait)||0,e):s,d="trailing"in t?!!t.trailing:d);function f(b){var M=n,w=r;return n=r=void 0,c=b,o=i.apply(w,M),o}function p(b){return c=b,a=setTimeout(m,e),u?f(b):o}function _(b){var M=b-l,w=b-c,E=e-M;return h?NP(E,s-w):E}function g(b){var M=b-l,w=b-c;return l===void 0||M>=e||M<0||h&&w>=s}function m(){var b=Qd();if(g(b))return v(b);a=setTimeout(m,_(b))}function v(b){return a=void 0,d&&n?f(b):(n=r=void 0,o)}function x(){a!==void 0&&clearTimeout(a),c=0,n=l=r=a=void 0}function y(){return a===void 0?o:v(Qd())}function T(){var b=Qd(),M=g(b);if(n=arguments,r=this,l=b,M){if(a===void 0)return p(l);if(h)return clearTimeout(a),a=setTimeout(m,e),f(l)}return a===void 0&&(a=setTimeout(m,e)),o}return T.cancel=x,T.flush=y,T}function Q_(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function DP(i){if(Array.isArray(i))return i}function LP(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function IP(i,e,t){return Object.defineProperty(i,"prototype",{writable:!1}),i}function UP(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,r,s,o,a=[],l=!0,c=!1;try{if(s=(t=t.call(i)).next,e!==0)for(;!(l=(n=s.call(t)).done)&&(a.push(n.value),a.length!==e);l=!0);}catch(u){c=!0,r=u}finally{try{if(!l&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw r}}return a}}function FP(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function BP(i,e){return DP(i)||UP(i,e)||OP(i,e)||FP()}function OP(i,e){if(i){if(typeof i=="string")return Q_(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Q_(i,e):void 0}}var kP=IP(function i(e,t){var n=t.default,r=n===void 0?null:n,s=t.triggerUpdate,o=s===void 0?!0:s,a=t.onChange,l=a===void 0?function(c,u){}:a;LP(this,i),this.name=e,this.defaultVal=r,this.triggerUpdate=o,this.onChange=l});function Oh(i){var e=i.stateInit,t=e===void 0?function(){return{}}:e,n=i.props,r=n===void 0?{}:n,s=i.methods,o=s===void 0?{}:s,a=i.aliases,l=a===void 0?{}:a,c=i.init,u=c===void 0?function(){}:c,h=i.update,d=h===void 0?function(){}:h,f=Object.keys(r).map(function(p){return new kP(p,r[p])});return function p(){for(var _=arguments.length,g=new Array(_),m=0;m<_;m++)g[m]=arguments[m];var v=!!(this instanceof p&&this.constructor),x=v?g.shift():void 0,y=g[0],T=y===void 0?{}:y,b=Object.assign({},t instanceof Function?t(T):t,{initialised:!1}),M={};function w(C){return E(C,T),S(),w}var E=function(I,k){u.call(w,I,b,k),b.initialised=!0},S=PP(function(){b.initialised&&(d.call(w,b,M),M={})},1);return f.forEach(function(C){w[C.name]=I(C);function I(k){var D=k.name,L=k.triggerUpdate,B=L===void 0?!1:L,te=k.onChange,q=te===void 0?function(ne,ve){}:te,fe=k.defaultVal,Y=fe===void 0?null:fe;return function(ne){var ve=b[D];if(!arguments.length)return ve;var Be=ne===void 0?Y:ne;return b[D]=Be,q.call(w,Be,b,ve),!M.hasOwnProperty(D)&&(M[D]=ve),B&&S(),w}}}),Object.keys(o).forEach(function(C){w[C]=function(){for(var I,k=arguments.length,D=new Array(k),L=0;L<k;L++)D[L]=arguments[L];return(I=o[C]).call.apply(I,[w,b].concat(D))}}),Object.entries(l).forEach(function(C){var I=BP(C,2),k=I[0],D=I[1];return w[k]=w[D]}),w.resetProps=function(){return f.forEach(function(C){w[C.name](C.defaultVal)}),w},w.resetProps(),b._rerender=S,v&&x&&w(x),w}}var vt=function(i){return typeof i=="function"?i:typeof i=="string"?function(e){return e[i]}:function(e){return i}};class J_ extends Map{constructor(e,t=VP){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:t}}),e!=null)for(const[n,r]of e)this.set(n,r)}get(e){return super.get(ev(this,e))}has(e){return super.has(ev(this,e))}set(e,t){return super.set(GP(this,e),t)}delete(e){return super.delete(zP(this,e))}}function ev({_intern:i,_key:e},t){const n=e(t);return i.has(n)?i.get(n):t}function GP({_intern:i,_key:e},t){const n=e(t);return i.has(n)?i.get(n):(i.set(n,t),t)}function zP({_intern:i,_key:e},t){const n=e(t);return i.has(n)&&(t=i.get(n),i.delete(n)),t}function VP(i){return i!==null&&typeof i=="object"?i.valueOf():i}function HP(i,e){let t;if(e===void 0)for(const n of i)n!=null&&(t<n||t===void 0&&n>=n)&&(t=n);else{let n=-1;for(let r of i)(r=e(r,++n,i))!=null&&(t<r||t===void 0&&r>=r)&&(t=r)}return t}function WP(i,e){let t;if(e===void 0)for(const n of i)n!=null&&(t>n||t===void 0&&n>=n)&&(t=n);else{let n=-1;for(let r of i)(r=e(r,++n,i))!=null&&(t>r||t===void 0&&r>=r)&&(t=r)}return t}function cp(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function $P(i){if(Array.isArray(i))return i}function qP(i){if(Array.isArray(i))return cp(i)}function xx(i,e,t){if(typeof i=="function"?i===e:i.has(e))return arguments.length<3?e:t;throw new TypeError("Private element is not present on this object")}function jP(i,e){if(e.has(i))throw new TypeError("Cannot initialize the same private elements twice on an object")}function XP(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function Ln(i,e){return i.get(xx(i,e))}function Do(i,e,t){jP(i,e),e.set(i,t)}function pu(i,e,t){return i.set(xx(i,e),t),t}function YP(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,rD(n.key),n)}}function KP(i,e,t){return e&&YP(i.prototype,e),Object.defineProperty(i,"prototype",{writable:!1}),i}function ZP(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function QP(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,r,s,o,a=[],l=!0,c=!1;try{if(s=(t=t.call(i)).next,e!==0)for(;!(l=(n=s.call(t)).done)&&(a.push(n.value),a.length!==e);l=!0);}catch(u){c=!0,r=u}finally{try{if(!l&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw r}}return a}}function JP(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function eD(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function tD(i,e){return $P(i)||QP(i,e)||bx(i,e)||JP()}function nD(i){return qP(i)||ZP(i)||bx(i)||eD()}function iD(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(i)}function rD(i){var e=iD(i,"string");return typeof e=="symbol"?e:e+""}function bx(i,e){if(i){if(typeof i=="string")return cp(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?cp(i,e):void 0}}var Lo=new WeakMap,Ja=new WeakMap,Io=new WeakMap,Jd=new WeakMap,ef=new WeakMap,tf=new WeakMap,sD=function(){function i(){XP(this,i),Do(this,Lo,new Map),Do(this,Ja,new Map),Do(this,Io,function(e){return e}),Do(this,Jd,function(){return{}}),Do(this,ef,function(){}),Do(this,tf,function(){})}return KP(i,[{key:"getObj",value:function(t){return Ln(Lo,this).get(Ln(Io,this).call(this,t))}},{key:"getData",value:function(t){return Ln(Ja,this).get(t)}},{key:"entries",value:function(){return nD(Ln(Ja,this).entries()).map(function(t){var n=tD(t,2),r=n[0],s=n[1];return[s,r]})}},{key:"id",value:function(t){return pu(Io,this,vt(t)),this}},{key:"onCreateObj",value:function(t){return pu(Jd,this,t),this}},{key:"onUpdateObj",value:function(t){return pu(ef,this,t),this}},{key:"onRemoveObj",value:function(t){return pu(tf,this,t),this}},{key:"digest",value:function(t){var n=this;t.filter(function(s){return!Ln(Lo,n).has(Ln(Io,n).call(n,s))}).forEach(function(s){var o=Ln(Jd,n).call(n,s);Ln(Lo,n).set(Ln(Io,n).call(n,s),o),Ln(Ja,n).set(o,s)});var r=new Map(t.map(function(s){return[Ln(Io,n).call(n,s),s]}));return Ln(Lo,this).forEach(function(s,o){r.has(o)?Ln(ef,n).call(n,s,r.get(o)):(Ln(tf,n).call(n,s,o),Ln(Lo,n).delete(o),Ln(Ja,n).delete(s))}),this}},{key:"clear",value:function(){return this.digest([]),this}}])}();function oD(i,e){switch(arguments.length){case 0:break;case 1:this.range(i);break;default:this.range(e).domain(i);break}return this}const tv=Symbol("implicit");function Sx(){var i=new J_,e=[],t=[],n=tv;function r(s){let o=i.get(s);if(o===void 0){if(n!==tv)return n;i.set(s,o=e.push(s)-1)}return t[o%t.length]}return r.domain=function(s){if(!arguments.length)return e.slice();e=[],i=new J_;for(const o of s)i.has(o)||i.set(o,e.push(o)-1);return r},r.range=function(s){return arguments.length?(t=Array.from(s),r):t.slice()},r.unknown=function(s){return arguments.length?(n=s,r):n},r.copy=function(){return Sx(e,t).unknown(n)},oD.apply(r,arguments),r}function aD(i){for(var e=i.length/6|0,t=new Array(e),n=0;n<e;)t[n]="#"+i.slice(n*6,++n*6);return t}const lD=aD("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");function lh(i){"@babel/helpers - typeof";return lh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},lh(i)}var cD=/^\s+/,uD=/\s+$/;function Ue(i,e){if(i=i||"",e=e||{},i instanceof Ue)return i;if(!(this instanceof Ue))return new Ue(i,e);var t=hD(i);this._originalInput=i,this._r=t.r,this._g=t.g,this._b=t.b,this._a=t.a,this._roundA=Math.round(100*this._a)/100,this._format=e.format||t.format,this._gradientType=e.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=t.ok}Ue.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},getLuminance:function(){var e=this.toRgb(),t,n,r,s,o,a;return t=e.r/255,n=e.g/255,r=e.b/255,t<=.03928?s=t/12.92:s=Math.pow((t+.055)/1.055,2.4),n<=.03928?o=n/12.92:o=Math.pow((n+.055)/1.055,2.4),r<=.03928?a=r/12.92:a=Math.pow((r+.055)/1.055,2.4),.2126*s+.7152*o+.0722*a},setAlpha:function(e){return this._a=Tx(e),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var e=iv(this._r,this._g,this._b);return{h:e.h*360,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=iv(this._r,this._g,this._b),t=Math.round(e.h*360),n=Math.round(e.s*100),r=Math.round(e.v*100);return this._a==1?"hsv("+t+", "+n+"%, "+r+"%)":"hsva("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHsl:function(){var e=nv(this._r,this._g,this._b);return{h:e.h*360,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=nv(this._r,this._g,this._b),t=Math.round(e.h*360),n=Math.round(e.s*100),r=Math.round(e.l*100);return this._a==1?"hsl("+t+", "+n+"%, "+r+"%)":"hsla("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return rv(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return mD(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(Ht(this._r,255)*100)+"%",g:Math.round(Ht(this._g,255)*100)+"%",b:Math.round(Ht(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(Ht(this._r,255)*100)+"%, "+Math.round(Ht(this._g,255)*100)+"%, "+Math.round(Ht(this._b,255)*100)+"%)":"rgba("+Math.round(Ht(this._r,255)*100)+"%, "+Math.round(Ht(this._g,255)*100)+"%, "+Math.round(Ht(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:AD[rv(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var t="#"+sv(this._r,this._g,this._b,this._a),n=t,r=this._gradientType?"GradientType = 1, ":"";if(e){var s=Ue(e);n="#"+sv(s._r,s._g,s._b,s._a)}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,r=this._a<1&&this._a>=0,s=!t&&r&&(e==="hex"||e==="hex6"||e==="hex3"||e==="hex4"||e==="hex8"||e==="name");return s?e==="name"&&this._a===0?this.toName():this.toRgbString():(e==="rgb"&&(n=this.toRgbString()),e==="prgb"&&(n=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(n=this.toHexString()),e==="hex3"&&(n=this.toHexString(!0)),e==="hex4"&&(n=this.toHex8String(!0)),e==="hex8"&&(n=this.toHex8String()),e==="name"&&(n=this.toName()),e==="hsl"&&(n=this.toHslString()),e==="hsv"&&(n=this.toHsvString()),n||this.toHexString())},clone:function(){return Ue(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(yD,arguments)},brighten:function(){return this._applyModification(xD,arguments)},darken:function(){return this._applyModification(bD,arguments)},desaturate:function(){return this._applyModification(gD,arguments)},saturate:function(){return this._applyModification(_D,arguments)},greyscale:function(){return this._applyModification(vD,arguments)},spin:function(){return this._applyModification(SD,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(ED,arguments)},complement:function(){return this._applyCombination(TD,arguments)},monochromatic:function(){return this._applyCombination(wD,arguments)},splitcomplement:function(){return this._applyCombination(MD,arguments)},triad:function(){return this._applyCombination(ov,[3])},tetrad:function(){return this._applyCombination(ov,[4])}};Ue.fromRatio=function(i,e){if(lh(i)=="object"){var t={};for(var n in i)i.hasOwnProperty(n)&&(n==="a"?t[n]=i[n]:t[n]=vl(i[n]));i=t}return Ue(i,e)};function hD(i){var e={r:0,g:0,b:0},t=1,n=null,r=null,s=null,o=!1,a=!1;return typeof i=="string"&&(i=PD(i)),lh(i)=="object"&&(Tr(i.r)&&Tr(i.g)&&Tr(i.b)?(e=dD(i.r,i.g,i.b),o=!0,a=String(i.r).substr(-1)==="%"?"prgb":"rgb"):Tr(i.h)&&Tr(i.s)&&Tr(i.v)?(n=vl(i.s),r=vl(i.v),e=pD(i.h,n,r),o=!0,a="hsv"):Tr(i.h)&&Tr(i.s)&&Tr(i.l)&&(n=vl(i.s),s=vl(i.l),e=fD(i.h,n,s),o=!0,a="hsl"),i.hasOwnProperty("a")&&(t=i.a)),t=Tx(t),{ok:o,format:i.format||a,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:t}}function dD(i,e,t){return{r:Ht(i,255)*255,g:Ht(e,255)*255,b:Ht(t,255)*255}}function nv(i,e,t){i=Ht(i,255),e=Ht(e,255),t=Ht(t,255);var n=Math.max(i,e,t),r=Math.min(i,e,t),s,o,a=(n+r)/2;if(n==r)s=o=0;else{var l=n-r;switch(o=a>.5?l/(2-n-r):l/(n+r),n){case i:s=(e-t)/l+(e<t?6:0);break;case e:s=(t-i)/l+2;break;case t:s=(i-e)/l+4;break}s/=6}return{h:s,s:o,l:a}}function fD(i,e,t){var n,r,s;i=Ht(i,360),e=Ht(e,100),t=Ht(t,100);function o(c,u,h){return h<0&&(h+=1),h>1&&(h-=1),h<1/6?c+(u-c)*6*h:h<1/2?u:h<2/3?c+(u-c)*(2/3-h)*6:c}if(e===0)n=r=s=t;else{var a=t<.5?t*(1+e):t+e-t*e,l=2*t-a;n=o(l,a,i+1/3),r=o(l,a,i),s=o(l,a,i-1/3)}return{r:n*255,g:r*255,b:s*255}}function iv(i,e,t){i=Ht(i,255),e=Ht(e,255),t=Ht(t,255);var n=Math.max(i,e,t),r=Math.min(i,e,t),s,o,a=n,l=n-r;if(o=n===0?0:l/n,n==r)s=0;else{switch(n){case i:s=(e-t)/l+(e<t?6:0);break;case e:s=(t-i)/l+2;break;case t:s=(i-e)/l+4;break}s/=6}return{h:s,s:o,v:a}}function pD(i,e,t){i=Ht(i,360)*6,e=Ht(e,100),t=Ht(t,100);var n=Math.floor(i),r=i-n,s=t*(1-e),o=t*(1-r*e),a=t*(1-(1-r)*e),l=n%6,c=[t,o,s,s,a,t][l],u=[a,t,t,o,s,s][l],h=[s,s,a,t,t,o][l];return{r:c*255,g:u*255,b:h*255}}function rv(i,e,t,n){var r=[Zi(Math.round(i).toString(16)),Zi(Math.round(e).toString(16)),Zi(Math.round(t).toString(16))];return n&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0):r.join("")}function mD(i,e,t,n,r){var s=[Zi(Math.round(i).toString(16)),Zi(Math.round(e).toString(16)),Zi(Math.round(t).toString(16)),Zi(Mx(n))];return r&&s[0].charAt(0)==s[0].charAt(1)&&s[1].charAt(0)==s[1].charAt(1)&&s[2].charAt(0)==s[2].charAt(1)&&s[3].charAt(0)==s[3].charAt(1)?s[0].charAt(0)+s[1].charAt(0)+s[2].charAt(0)+s[3].charAt(0):s.join("")}function sv(i,e,t,n){var r=[Zi(Mx(n)),Zi(Math.round(i).toString(16)),Zi(Math.round(e).toString(16)),Zi(Math.round(t).toString(16))];return r.join("")}Ue.equals=function(i,e){return!i||!e?!1:Ue(i).toRgbString()==Ue(e).toRgbString()};Ue.random=function(){return Ue.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function gD(i,e){e=e===0?0:e||10;var t=Ue(i).toHsl();return t.s-=e/100,t.s=kh(t.s),Ue(t)}function _D(i,e){e=e===0?0:e||10;var t=Ue(i).toHsl();return t.s+=e/100,t.s=kh(t.s),Ue(t)}function vD(i){return Ue(i).desaturate(100)}function yD(i,e){e=e===0?0:e||10;var t=Ue(i).toHsl();return t.l+=e/100,t.l=kh(t.l),Ue(t)}function xD(i,e){e=e===0?0:e||10;var t=Ue(i).toRgb();return t.r=Math.max(0,Math.min(255,t.r-Math.round(255*-(e/100)))),t.g=Math.max(0,Math.min(255,t.g-Math.round(255*-(e/100)))),t.b=Math.max(0,Math.min(255,t.b-Math.round(255*-(e/100)))),Ue(t)}function bD(i,e){e=e===0?0:e||10;var t=Ue(i).toHsl();return t.l-=e/100,t.l=kh(t.l),Ue(t)}function SD(i,e){var t=Ue(i).toHsl(),n=(t.h+e)%360;return t.h=n<0?360+n:n,Ue(t)}function TD(i){var e=Ue(i).toHsl();return e.h=(e.h+180)%360,Ue(e)}function ov(i,e){if(isNaN(e)||e<=0)throw new Error("Argument to polyad must be a positive number");for(var t=Ue(i).toHsl(),n=[Ue(i)],r=360/e,s=1;s<e;s++)n.push(Ue({h:(t.h+s*r)%360,s:t.s,l:t.l}));return n}function MD(i){var e=Ue(i).toHsl(),t=e.h;return[Ue(i),Ue({h:(t+72)%360,s:e.s,l:e.l}),Ue({h:(t+216)%360,s:e.s,l:e.l})]}function ED(i,e,t){e=e||6,t=t||30;var n=Ue(i).toHsl(),r=360/t,s=[Ue(i)];for(n.h=(n.h-(r*e>>1)+720)%360;--e;)n.h=(n.h+r)%360,s.push(Ue(n));return s}function wD(i,e){e=e||6;for(var t=Ue(i).toHsv(),n=t.h,r=t.s,s=t.v,o=[],a=1/e;e--;)o.push(Ue({h:n,s:r,v:s})),s=(s+a)%1;return o}Ue.mix=function(i,e,t){t=t===0?0:t||50;var n=Ue(i).toRgb(),r=Ue(e).toRgb(),s=t/100,o={r:(r.r-n.r)*s+n.r,g:(r.g-n.g)*s+n.g,b:(r.b-n.b)*s+n.b,a:(r.a-n.a)*s+n.a};return Ue(o)};Ue.readability=function(i,e){var t=Ue(i),n=Ue(e);return(Math.max(t.getLuminance(),n.getLuminance())+.05)/(Math.min(t.getLuminance(),n.getLuminance())+.05)};Ue.isReadable=function(i,e,t){var n=Ue.readability(i,e),r,s;switch(s=!1,r=DD(t),r.level+r.size){case"AAsmall":case"AAAlarge":s=n>=4.5;break;case"AAlarge":s=n>=3;break;case"AAAsmall":s=n>=7;break}return s};Ue.mostReadable=function(i,e,t){var n=null,r=0,s,o,a,l;t=t||{},o=t.includeFallbackColors,a=t.level,l=t.size;for(var c=0;c<e.length;c++)s=Ue.readability(i,e[c]),s>r&&(r=s,n=Ue(e[c]));return Ue.isReadable(i,n,{level:a,size:l})||!o?n:(t.includeFallbackColors=!1,Ue.mostReadable(i,["#fff","#000"],t))};var up=Ue.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},AD=Ue.hexNames=RD(up);function RD(i){var e={};for(var t in i)i.hasOwnProperty(t)&&(e[i[t]]=t);return e}function Tx(i){return i=parseFloat(i),(isNaN(i)||i<0||i>1)&&(i=1),i}function Ht(i,e){CD(i)&&(i="100%");var t=ND(i);return i=Math.min(e,Math.max(0,parseFloat(i))),t&&(i=parseInt(i*e,10)/100),Math.abs(i-e)<1e-6?1:i%e/parseFloat(e)}function kh(i){return Math.min(1,Math.max(0,i))}function gi(i){return parseInt(i,16)}function CD(i){return typeof i=="string"&&i.indexOf(".")!=-1&&parseFloat(i)===1}function ND(i){return typeof i=="string"&&i.indexOf("%")!=-1}function Zi(i){return i.length==1?"0"+i:""+i}function vl(i){return i<=1&&(i=i*100+"%"),i}function Mx(i){return Math.round(parseFloat(i)*255).toString(16)}function av(i){return gi(i)/255}var Wi=function(){var i="[-\\+]?\\d+%?",e="[-\\+]?\\d*\\.\\d+%?",t="(?:"+e+")|(?:"+i+")",n="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",r="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?";return{CSS_UNIT:new RegExp(t),rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+r),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+r),hsv:new RegExp("hsv"+n),hsva:new RegExp("hsva"+r),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function Tr(i){return!!Wi.CSS_UNIT.exec(i)}function PD(i){i=i.replace(cD,"").replace(uD,"").toLowerCase();var e=!1;if(up[i])i=up[i],e=!0;else if(i=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var t;return(t=Wi.rgb.exec(i))?{r:t[1],g:t[2],b:t[3]}:(t=Wi.rgba.exec(i))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=Wi.hsl.exec(i))?{h:t[1],s:t[2],l:t[3]}:(t=Wi.hsla.exec(i))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=Wi.hsv.exec(i))?{h:t[1],s:t[2],v:t[3]}:(t=Wi.hsva.exec(i))?{h:t[1],s:t[2],v:t[3],a:t[4]}:(t=Wi.hex8.exec(i))?{r:gi(t[1]),g:gi(t[2]),b:gi(t[3]),a:av(t[4]),format:e?"name":"hex8"}:(t=Wi.hex6.exec(i))?{r:gi(t[1]),g:gi(t[2]),b:gi(t[3]),format:e?"name":"hex"}:(t=Wi.hex4.exec(i))?{r:gi(t[1]+""+t[1]),g:gi(t[2]+""+t[2]),b:gi(t[3]+""+t[3]),a:av(t[4]+""+t[4]),format:e?"name":"hex8"}:(t=Wi.hex3.exec(i))?{r:gi(t[1]+""+t[1]),g:gi(t[2]+""+t[2]),b:gi(t[3]+""+t[3]),format:e?"name":"hex"}:!1}function DD(i){var e,t;return i=i||{level:"AA",size:"small"},e=(i.level||"AA").toUpperCase(),t=(i.size||"small").toLowerCase(),e!=="AA"&&e!=="AAA"&&(e="AA"),t!=="small"&&t!=="large"&&(t="small"),{level:e,size:t}}function hp(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function LD(i){if(Array.isArray(i))return i}function ID(i){if(Array.isArray(i))return hp(i)}function Ex(i,e,t){if(typeof i=="function"?i===e:i.has(e))return arguments.length<3?e:t;throw new TypeError("Private element is not present on this object")}function UD(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function wx(i,e,t){return e=Sa(e),HD(i,Om()?Reflect.construct(e,t||[],Sa(i).constructor):e.apply(i,t))}function FD(i,e){if(e.has(i))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ax(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function nf(i,e){return i.get(Ex(i,e))}function lv(i,e,t){FD(i,e),e.set(i,t)}function cv(i,e,t){return i.set(Ex(i,e),t),t}function Rx(i,e,t){if(Om())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,e);var r=new(i.bind.apply(i,n));return r}function BD(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,Px(n.key),n)}}function Cx(i,e,t){return e&&BD(i.prototype,e),Object.defineProperty(i,"prototype",{writable:!1}),i}function Gh(i,e,t){return(e=Px(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function dp(){return dp=typeof Reflect<"u"&&Reflect.get?Reflect.get.bind():function(i,e,t){var n=WD(i,e);if(n){var r=Object.getOwnPropertyDescriptor(n,e);return r.get?r.get.call(arguments.length<3?i:t):r.value}},dp.apply(null,arguments)}function Sa(i){return Sa=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Sa(i)}function Nx(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),e&&fp(i,e)}function Om(){try{var i=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(Om=function(){return!!i})()}function OD(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function kD(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,r,s,o,a=[],l=!0,c=!1;try{if(s=(t=t.call(i)).next,e!==0)for(;!(l=(n=s.call(t)).done)&&(a.push(n.value),a.length!==e);l=!0);}catch(u){c=!0,r=u}finally{try{if(!l&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw r}}return a}}function GD(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function zD(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function uv(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function VD(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?uv(Object(t),!0).forEach(function(n){Gh(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):uv(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function HD(i,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return UD(i)}function fp(i,e){return fp=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t},fp(i,e)}function Rl(i,e){return LD(i)||kD(i,e)||Dx(i,e)||GD()}function WD(i,e){for(;!{}.hasOwnProperty.call(i,e)&&(i=Sa(i))!==null;);return i}function rf(i,e,t,n){var r=dp(Sa(i.prototype),e,t);return typeof r=="function"?function(s){return r.apply(t,s)}:r}function qi(i){return ID(i)||OD(i)||Dx(i)||zD()}function $D(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function Px(i){var e=$D(i,"string");return typeof e=="symbol"?e:e+""}function pp(i){"@babel/helpers - typeof";return pp=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pp(i)}function Dx(i,e){if(i){if(typeof i=="string")return hp(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?hp(i,e):void 0}}var Lx=function(e){e instanceof Array?e.forEach(Lx):(e.map&&e.map.dispose(),e.dispose())},Ix=function(e){e.geometry&&e.geometry.dispose(),e.material&&Lx(e.material),e.texture&&e.texture.dispose(),e.children&&e.children.forEach(Ix)},mp=function(e){for(;e.children.length;){var t=e.children[0];e.remove(t),Ix(t)}},sf=new WeakMap,mu=new WeakMap,el=function(i){function e(t){var n,r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=r.dataBindAttr,o=s===void 0?"__data":s,a=r.objBindAttr,l=a===void 0?"__threeObj":a;return Ax(this,e),n=wx(this,e),Gh(n,"scene",void 0),lv(n,sf,void 0),lv(n,mu,void 0),n.scene=t,cv(sf,n,o),cv(mu,n,l),n.onRemoveObj(function(){}),n}return Nx(e,i),Cx(e,[{key:"onCreateObj",value:function(n){var r=this;return rf(e,"onCreateObj",this)([function(s){var o=n(s);return s[nf(mu,r)]=o,o[nf(sf,r)]=s,r.scene.add(o),o}]),this}},{key:"onRemoveObj",value:function(n){var r=this;return rf(e,"onRemoveObj",this)([function(s,o){var a=rf(e,"getData",r)([s]);n(s,o),r.scene.remove(s),mp(s),delete a[nf(mu,r)]}]),this}}])}(sD),tl=function(e){return isNaN(e)?parseInt(Ue(e).toHex(),16):e},of=function(e){return isNaN(e)?Ue(e).getAlpha():1},qD=Sx(lD);function hv(i,e,t){!e||typeof t!="string"||i.filter(function(n){return!n[t]}).forEach(function(n){n[t]=qD(e(n))})}function jD(i,e){var t=i.nodes,n=i.links,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=r.nodeFilter,o=s===void 0?function(){return!0}:s,a=r.onLoopError,l=a===void 0?function(f){throw"Invalid DAG structure! Found cycle in node path: ".concat(f.join(" -> "),".")}:a,c={};t.forEach(function(f){return c[e(f)]={data:f,out:[],depth:-1,skip:!o(f)}}),n.forEach(function(f){var p=f.source,_=f.target,g=y(p),m=y(_);if(!c.hasOwnProperty(g))throw"Missing source node with id: ".concat(g);if(!c.hasOwnProperty(m))throw"Missing target node with id: ".concat(m);var v=c[g],x=c[m];v.out.push(x);function y(T){return pp(T)==="object"?e(T):T}});var u=[];d(Object.values(c));var h=Object.assign.apply(Object,[{}].concat(qi(Object.entries(c).filter(function(f){var p=Rl(f,2),_=p[1];return!_.skip}).map(function(f){var p=Rl(f,2),_=p[0],g=p[1];return Gh({},_,g.depth)}))));return h;function d(f){for(var p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],_=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,g=function(){var y=f[m];if(p.indexOf(y)!==-1){var T=[].concat(qi(p.slice(p.indexOf(y))),[y]).map(function(b){return e(b.data)});return u.some(function(b){return b.length===T.length&&b.every(function(M,w){return M===T[w]})})||(u.push(T),l(T)),1}_>y.depth&&(y.depth=_,d(y.out,[].concat(qi(p),[y]),_+(y.skip?0:1)))},m=0,v=f.length;m<v;m++)g()}}var He=window.THREE?window.THREE:{Group:js,Mesh:tn,MeshLambertMaterial:Mm,Color:Le,BufferGeometry:On,BufferAttribute:Rn,Matrix4:ft,Vector3:N,SphereGeometry:Da,CylinderGeometry:_c,TubeGeometry:Tm,ConeGeometry:Sm,Line:CM,LineBasicMaterial:Lh,QuadraticBezierCurve3:bm,CubicBezierCurve3:w0,Box3:lo},dv={graph:EN,forcelayout:sP},XD=2,af=new He.BufferGeometry().setAttribute?"setAttribute":"addAttribute",gu=new He.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",YD=Oh({props:{jsonUrl:{onChange:function(e,t){var n=this;e&&!t.fetchingJson&&(t.fetchingJson=!0,t.onLoading(),fetch(e).then(function(r){return r.json()}).then(function(r){t.fetchingJson=!1,t.onFinishLoading(r),n.graphData(r)}))},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,t){t.engineRunning=!1}},numDimensions:{default:3,onChange:function(e,t){var n=t.d3ForceLayout.force("charge");n&&n.strength(e>2?-60:-30),e<3&&r(t.graphData.nodes,"z"),e<2&&r(t.graphData.nodes,"y");function r(s,o){s.forEach(function(a){delete a[o],delete a["v".concat(o)]})}}},dagMode:{onChange:function(e,t){!e&&t.forceEngine==="d3"&&(t.graphData.nodes||[]).forEach(function(n){return n.fx=n.fy=n.fz=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(e){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4},nodeId:{default:"id"},nodeVal:{default:"val"},nodeResolution:{default:8},nodeColor:{default:"color"},nodeAutoColorBy:{},nodeOpacity:{default:.75},nodeVisibility:{default:!0},nodeThreeObject:{},nodeThreeObjectExtend:{default:!1},nodePositionUpdate:{triggerUpdate:!1},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0},linkColor:{default:"color"},linkAutoColorBy:{},linkOpacity:{default:.2},linkWidth:{},linkResolution:{default:6},linkCurvature:{default:0,triggerUpdate:!1},linkCurveRotation:{default:0,triggerUpdate:!1},linkMaterial:{},linkThreeObject:{},linkThreeObjectExtend:{default:!1},linkPositionUpdate:{triggerUpdate:!1},linkDirectionalArrowLength:{default:0},linkDirectionalArrowColor:{},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1},linkDirectionalArrowResolution:{default:8},linkDirectionalParticles:{default:0},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleWidth:{default:.5},linkDirectionalParticleColor:{},linkDirectionalParticleResolution:{default:4},forceEngine:{default:"d3"},d3AlphaMin:{default:0},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.velocityDecay(e)}},ngraphPhysics:{default:{timeStep:20,gravity:-1.2,theta:.8,springLength:30,springCoefficient:8e-4,dragCoefficient:.02}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1}},methods:{refresh:function(e){return e._flushObjects=!0,e._rerender(),this},d3Force:function(e,t,n){return n===void 0?e.d3ForceLayout.force(t):(e.d3ForceLayout.force(t,n),this)},d3ReheatSimulation:function(e){return e.d3ForceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},tickFrame:function(e){var t=e.forceEngine!=="ngraph";return e.engineRunning&&n(),r(),s(),this;function n(){++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime||t&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin?(e.engineRunning=!1,e.onEngineStop()):(e.layout[t?"tick":"step"](),e.onEngineTick());var o=vt(e.nodeThreeObjectExtend);e.nodeDataMapper.entries().forEach(function(d){var f=Rl(d,2),p=f[0],_=f[1];if(_){var g=t?p:e.layout.getNodePosition(p[e.nodeId]),m=o(p);(!e.nodePositionUpdate||!e.nodePositionUpdate(m?_.children[0]:_,{x:g.x,y:g.y,z:g.z},p)||m)&&(_.position.x=g.x,_.position.y=g.y||0,_.position.z=g.z||0)}});var a=vt(e.linkWidth),l=vt(e.linkCurvature),c=vt(e.linkCurveRotation),u=vt(e.linkThreeObjectExtend);e.linkDataMapper.entries().forEach(function(d){var f=Rl(d,2),p=f[0],_=f[1];if(_){var g=t?p:e.layout.getLinkPosition(e.layout.graph.getLink(p.source,p.target).id),m=g[t?"source":"from"],v=g[t?"target":"to"];if(!(!m||!v||!m.hasOwnProperty("x")||!v.hasOwnProperty("x"))){h(p);var x=u(p);if(!(e.linkPositionUpdate&&e.linkPositionUpdate(x?_.children[1]:_,{start:{x:m.x,y:m.y,z:m.z},end:{x:v.x,y:v.y,z:v.z}},p)&&!x)){var y=30,T=p.__curve,b=_.children.length?_.children[0]:_;if(b.type==="Line"){if(T){var w=T.getPoints(y);b.geometry.getAttribute("position").array.length!==w.length*3&&b.geometry[af]("position",new He.BufferAttribute(new Float32Array(w.length*3),3)),b.geometry.setFromPoints(w)}else{var M=b.geometry.getAttribute("position");(!M||!M.array||M.array.length!==6)&&b.geometry[af]("position",M=new He.BufferAttribute(new Float32Array(2*3),3)),M.array[0]=m.x,M.array[1]=m.y||0,M.array[2]=m.z||0,M.array[3]=v.x,M.array[4]=v.y||0,M.array[5]=v.z||0,M.needsUpdate=!0}b.geometry.computeBoundingSphere()}else if(b.type==="Mesh")if(T){b.geometry.type.match(/^Tube(Buffer)?Geometry$/)||(b.position.set(0,0,0),b.rotation.set(0,0,0),b.scale.set(1,1,1));var L=Math.ceil(a(p)*10)/10,B=L/2,te=new He.TubeGeometry(T,y,B,e.linkResolution,!1);b.geometry.dispose(),b.geometry=te}else{if(!b.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)){var E=Math.ceil(a(p)*10)/10,S=E/2,C=new He.CylinderGeometry(S,S,1,e.linkResolution,1,!1);C[gu](new He.Matrix4().makeTranslation(0,1/2,0)),C[gu](new He.Matrix4().makeRotationX(Math.PI/2)),b.geometry.dispose(),b.geometry=C}var I=new He.Vector3(m.x,m.y||0,m.z||0),k=new He.Vector3(v.x,v.y||0,v.z||0),D=I.distanceTo(k);b.position.x=I.x,b.position.y=I.y,b.position.z=I.z,b.scale.z=D,b.parent.localToWorld(k),b.lookAt(k)}}}}});function h(d){var f=t?d:e.layout.getLinkPosition(e.layout.graph.getLink(d.source,d.target).id),p=f[t?"source":"from"],_=f[t?"target":"to"];if(!(!p||!_||!p.hasOwnProperty("x")||!_.hasOwnProperty("x"))){var g=l(d);if(!g)d.__curve=null;else{var m=new He.Vector3(p.x,p.y||0,p.z||0),v=new He.Vector3(_.x,_.y||0,_.z||0),x=m.distanceTo(v),y,T=c(d);if(x>0){var b=_.x-p.x,M=_.y-p.y||0,w=new He.Vector3().subVectors(v,m),E=w.clone().multiplyScalar(g).cross(b!==0||M!==0?new He.Vector3(0,0,1):new He.Vector3(0,1,0)).applyAxisAngle(w.normalize(),T).add(new He.Vector3().addVectors(m,v).divideScalar(2));y=new He.QuadraticBezierCurve3(m,E,v)}else{var S=g*70,C=-T,I=C+Math.PI/2;y=new He.CubicBezierCurve3(m,new He.Vector3(S*Math.cos(I),S*Math.sin(I),0).add(m),new He.Vector3(S*Math.cos(C),S*Math.sin(C),0).add(m),v)}d.__curve=y}}}}function r(){var o=vt(e.linkDirectionalArrowRelPos),a=vt(e.linkDirectionalArrowLength),l=vt(e.nodeVal);e.arrowDataMapper.entries().forEach(function(c){var u=Rl(c,2),h=u[0],d=u[1];if(d){var f=t?h:e.layout.getLinkPosition(e.layout.graph.getLink(h.source,h.target).id),p=f[t?"source":"from"],_=f[t?"target":"to"];if(!(!p||!_||!p.hasOwnProperty("x")||!_.hasOwnProperty("x"))){var g=Math.cbrt(Math.max(0,l(p)||1))*e.nodeRelSize,m=Math.cbrt(Math.max(0,l(_)||1))*e.nodeRelSize,v=a(h),x=o(h),y=h.__curve?function(S){return h.__curve.getPoint(S)}:function(S){var C=function(k,D,L,B){return D[k]+(L[k]-D[k])*B||0};return{x:C("x",p,_,S),y:C("y",p,_,S),z:C("z",p,_,S)}},T=h.__curve?h.__curve.getLength():Math.sqrt(["x","y","z"].map(function(S){return Math.pow((_[S]||0)-(p[S]||0),2)}).reduce(function(S,C){return S+C},0)),b=g+v+(T-g-m-v)*x,M=y(b/T),w=y((b-v)/T);["x","y","z"].forEach(function(S){return d.position[S]=w[S]});var E=Rx(He.Vector3,qi(["x","y","z"].map(function(S){return M[S]})));d.parent.localToWorld(E),d.lookAt(E)}}})}function s(){var o=vt(e.linkDirectionalParticleSpeed);e.graphData.links.forEach(function(a){var l=e.particlesDataMapper.getObj(a),c=l&&l.children,u=a.__singleHopPhotonsObj&&a.__singleHopPhotonsObj.children;if(!((!u||!u.length)&&(!c||!c.length))){var h=t?a:e.layout.getLinkPosition(e.layout.graph.getLink(a.source,a.target).id),d=h[t?"source":"from"],f=h[t?"target":"to"];if(!(!d||!f||!d.hasOwnProperty("x")||!f.hasOwnProperty("x"))){var p=o(a),_=a.__curve?function(m){return a.__curve.getPoint(m)}:function(m){var v=function(y,T,b,M){return T[y]+(b[y]-T[y])*M||0};return{x:v("x",d,f,m),y:v("y",d,f,m),z:v("z",d,f,m)}},g=[].concat(qi(c||[]),qi(u||[]));g.forEach(function(m,v){var x=m.parent.__linkThreeObjType==="singleHopPhotons";if(m.hasOwnProperty("__progressRatio")||(m.__progressRatio=x?0:v/c.length),m.__progressRatio+=p,m.__progressRatio>=1)if(!x)m.__progressRatio=m.__progressRatio%1;else{m.parent.remove(m),mp(m);return}var y=m.__progressRatio,T=_(y);["x","y","z"].forEach(function(b){return m.position[b]=T[b]})})}}})}},emitParticle:function(e,t){if(t&&e.graphData.links.includes(t)){if(!t.__singleHopPhotonsObj){var n=new He.Group;n.__linkThreeObjType="singleHopPhotons",t.__singleHopPhotonsObj=n,e.graphScene.add(n)}var r=vt(e.linkDirectionalParticleWidth),s=Math.ceil(r(t)*10)/10/2,o=e.linkDirectionalParticleResolution,a=new He.SphereGeometry(s,o,o),l=vt(e.linkColor),c=vt(e.linkDirectionalParticleColor),u=c(t)||l(t)||"#f0f0f0",h=new He.Color(tl(u)),d=e.linkOpacity*3,f=new He.MeshLambertMaterial({color:h,transparent:!0,opacity:d});t.__singleHopPhotonsObj.add(new He.Mesh(a,f))}return this},getGraphBbox:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0};if(!e.initialised)return null;var n=function r(s){var o=[];if(s.geometry){s.geometry.computeBoundingBox();var a=new He.Box3;a.copy(s.geometry.boundingBox).applyMatrix4(s.matrixWorld),o.push(a)}return o.concat.apply(o,qi((s.children||[]).filter(function(l){return!l.hasOwnProperty("__graphObjType")||l.__graphObjType==="node"&&t(l.__data)}).map(r)))}(e.graphScene);return n.length?Object.assign.apply(Object,qi(["x","y","z"].map(function(r){return Gh({},r,[WP(n,function(s){return s.min[r]}),HP(n,function(s){return s.max[r]})])}))):null}},stateInit:function(){return{d3ForceLayout:gN().force("link",tN()).force("charge",_N()).force("center",i1()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(e,t){t.graphScene=e,t.nodeDataMapper=new el(e,{objBindAttr:"__threeObj"}),t.linkDataMapper=new el(e,{objBindAttr:"__lineObj"}),t.arrowDataMapper=new el(e,{objBindAttr:"__arrowObj"}),t.particlesDataMapper=new el(e,{objBindAttr:"__photonsObj"})},update:function(e,t){var n=function($){return $.some(function(ce){return t.hasOwnProperty(ce)})};if(e.engineRunning=!1,typeof e.onUpdate=="function"&&e.onUpdate(),e.nodeAutoColorBy!==null&&n(["nodeAutoColorBy","graphData","nodeColor"])&&hv(e.graphData.nodes,vt(e.nodeAutoColorBy),e.nodeColor),e.linkAutoColorBy!==null&&n(["linkAutoColorBy","graphData","linkColor"])&&hv(e.graphData.links,vt(e.linkAutoColorBy),e.linkColor),e._flushObjects||n(["graphData","nodeThreeObject","nodeThreeObjectExtend","nodeVal","nodeColor","nodeVisibility","nodeRelSize","nodeResolution","nodeOpacity"])){var r=vt(e.nodeThreeObject),s=vt(e.nodeThreeObjectExtend),o=vt(e.nodeVal),a=vt(e.nodeColor),l=vt(e.nodeVisibility),c={},u={};(e._flushObjects||n(["nodeThreeObject","nodeThreeObjectExtend"]))&&e.nodeDataMapper.clear(),e.nodeDataMapper.onCreateObj(function(O){var $=r(O),ce=s(O);$&&e.nodeThreeObject===$&&($=$.clone());var re;return $&&!ce?re=$:(re=new He.Mesh,re.__graphDefaultObj=!0,$&&ce&&re.add($)),re.__graphObjType="node",re}).onUpdateObj(function(O,$){if(O.__graphDefaultObj){var ce=o($)||1,re=Math.cbrt(ce)*e.nodeRelSize,we=e.nodeResolution;(!O.geometry.type.match(/^Sphere(Buffer)?Geometry$/)||O.geometry.parameters.radius!==re||O.geometry.parameters.widthSegments!==we)&&(c.hasOwnProperty(ce)||(c[ce]=new He.SphereGeometry(re,we,we)),O.geometry.dispose(),O.geometry=c[ce]);var ze=a($),Ae=new He.Color(tl(ze||"#ffffaa")),mt=e.nodeOpacity*of(ze);(O.material.type!=="MeshLambertMaterial"||!O.material.color.equals(Ae)||O.material.opacity!==mt)&&(u.hasOwnProperty(ze)||(u[ze]=new He.MeshLambertMaterial({color:Ae,transparent:!0,opacity:mt})),O.material.dispose(),O.material=u[ze])}}).digest(e.graphData.nodes.filter(l))}if(e._flushObjects||n(["graphData","linkThreeObject","linkThreeObjectExtend","linkMaterial","linkColor","linkWidth","linkVisibility","linkResolution","linkOpacity","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution"])){var h=vt(e.linkThreeObject),d=vt(e.linkThreeObjectExtend),f=vt(e.linkMaterial),p=vt(e.linkVisibility),_=vt(e.linkColor),g=vt(e.linkWidth),m={},v={},x={},y=e.graphData.links.filter(p);if((e._flushObjects||n(["linkThreeObject","linkThreeObjectExtend","linkWidth"]))&&e.linkDataMapper.clear(),e.linkDataMapper.onRemoveObj(function(O){var $=O.__data&&O.__data.__singleHopPhotonsObj;$&&($.parent.remove($),mp($),delete O.__data.__singleHopPhotonsObj)}).onCreateObj(function(O){var $=h(O),ce=d(O);$&&e.linkThreeObject===$&&($=$.clone());var re;if(!$||ce){var we=!!g(O);if(we)re=new He.Mesh;else{var ze=new He.BufferGeometry;ze[af]("position",new He.BufferAttribute(new Float32Array(2*3),3)),re=new He.Line(ze)}}var Ae;return $?ce?(Ae=new He.Group,Ae.__graphDefaultObj=!0,Ae.add(re),Ae.add($)):Ae=$:(Ae=re,Ae.__graphDefaultObj=!0),Ae.renderOrder=10,Ae.__graphObjType="link",Ae}).onUpdateObj(function(O,$){if(O.__graphDefaultObj){var ce=O.children.length?O.children[0]:O,re=Math.ceil(g($)*10)/10,we=!!re;if(we){var ze=re/2,Ae=e.linkResolution;if(!ce.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)||ce.geometry.parameters.radiusTop!==ze||ce.geometry.parameters.radialSegments!==Ae){if(!m.hasOwnProperty(re)){var mt=new He.CylinderGeometry(ze,ze,1,Ae,1,!1);mt[gu](new He.Matrix4().makeTranslation(0,1/2,0)),mt[gu](new He.Matrix4().makeRotationX(Math.PI/2)),m[re]=mt}ce.geometry.dispose(),ce.geometry=m[re]}}var At=f($);if(At)ce.material=At;else{var et=_($),U=new He.Color(tl(et||"#f0f0f0")),qt=e.linkOpacity*of(et),ut=we?"MeshLambertMaterial":"LineBasicMaterial";if(ce.material.type!==ut||!ce.material.color.equals(U)||ce.material.opacity!==qt){var ht=we?v:x;ht.hasOwnProperty(et)||(ht[et]=new He[ut]({color:U,transparent:qt<1,opacity:qt,depthWrite:qt>=1})),ce.material.dispose(),ce.material=ht[et]}}}}).digest(y),e.linkDirectionalArrowLength||t.hasOwnProperty("linkDirectionalArrowLength")){var T=vt(e.linkDirectionalArrowLength),b=vt(e.linkDirectionalArrowColor);e.arrowDataMapper.onCreateObj(function(){var O=new He.Mesh(void 0,new He.MeshLambertMaterial({transparent:!0}));return O.__linkThreeObjType="arrow",O}).onUpdateObj(function(O,$){var ce=T($),re=e.linkDirectionalArrowResolution;if(!O.geometry.type.match(/^Cone(Buffer)?Geometry$/)||O.geometry.parameters.height!==ce||O.geometry.parameters.radialSegments!==re){var we=new He.ConeGeometry(ce*.25,ce,re);we.translate(0,ce/2,0),we.rotateX(Math.PI/2),O.geometry.dispose(),O.geometry=we}var ze=b($)||_($)||"#f0f0f0";O.material.color=new He.Color(tl(ze)),O.material.opacity=e.linkOpacity*3*of(ze)}).digest(y.filter(T))}if(e.linkDirectionalParticles||t.hasOwnProperty("linkDirectionalParticles")){var M=vt(e.linkDirectionalParticles),w=vt(e.linkDirectionalParticleWidth),E=vt(e.linkDirectionalParticleColor),S={},C={};e.particlesDataMapper.onCreateObj(function(){var O=new He.Group;return O.__linkThreeObjType="photons",O.__photonDataMapper=new el(O),O}).onUpdateObj(function(O,$){var ce=Math.round(Math.abs(M($))),re=!!O.children.length&&O.children[0],we=Math.ceil(w($)*10)/10/2,ze=e.linkDirectionalParticleResolution,Ae;re&&re.geometry.parameters.radius===we&&re.geometry.parameters.widthSegments===ze?Ae=re.geometry:(C.hasOwnProperty(we)||(C[we]=new He.SphereGeometry(we,ze,ze)),Ae=C[we],re&&re.geometry.dispose());var mt=E($)||_($)||"#f0f0f0",At=new He.Color(tl(mt)),et=e.linkOpacity*3,U;re&&re.material.color.equals(At)&&re.material.opacity===et?U=re.material:(S.hasOwnProperty(mt)||(S[mt]=new He.MeshLambertMaterial({color:At,transparent:!0,opacity:et})),U=S[mt],re&&re.material.dispose()),O.__photonDataMapper.id(function(qt){return qt.idx}).onCreateObj(function(){return new He.Mesh(Ae,U)}).onUpdateObj(function(qt){qt.geometry=Ae,qt.material=U}).digest(qi(new Array(ce)).map(function(qt,ut){return{idx:ut}}))}).digest(y.filter(M))}}if(e._flushObjects=!1,n(["graphData","nodeId","linkSource","linkTarget","numDimensions","forceEngine","dagMode","dagNodeFilter","dagLevelDistance"])){e.engineRunning=!1,e.graphData.links.forEach(function(O){O.source=O[e.linkSource],O.target=O[e.linkTarget]});var I=e.forceEngine!=="ngraph",k;if(I){(k=e.d3ForceLayout).stop().alpha(1).numDimensions(e.numDimensions).nodes(e.graphData.nodes);var D=e.d3ForceLayout.force("link");D&&D.id(function(O){return O[e.nodeId]}).links(e.graphData.links);var L=e.dagMode&&jD(e.graphData,function(O){return O[e.nodeId]},{nodeFilter:e.dagNodeFilter,onLoopError:e.onDagError||void 0}),B=Math.max.apply(Math,qi(Object.values(L||[]))),te=e.dagLevelDistance||e.graphData.nodes.length/(B||1)*XD*(["radialin","radialout"].indexOf(e.dagMode)!==-1?.7:1);if(["lr","rl","td","bu","zin","zout"].includes(t.dagMode)){var q=["lr","rl"].includes(t.dagMode)?"fx":["td","bu"].includes(t.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(O){return delete O[q]})}if(["lr","rl","td","bu","zin","zout"].includes(e.dagMode)){var fe=["rl","td","zout"].includes(e.dagMode),Y=function($){return(L[$[e.nodeId]]-B/2)*te*(fe?-1:1)},ne=["lr","rl"].includes(e.dagMode)?"fx":["td","bu"].includes(e.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(O){return O[ne]=Y(O)})}e.d3ForceLayout.force("dagRadial",["radialin","radialout"].indexOf(e.dagMode)!==-1?vN(function(O){var $=L[O[e.nodeId]]||-1;return(e.dagMode==="radialin"?B-$:$)*te}).strength(function(O){return e.dagNodeFilter(O)?1:0}):null)}else{var ve=dv.graph();e.graphData.nodes.forEach(function(O){ve.addNode(O[e.nodeId])}),e.graphData.links.forEach(function(O){ve.addLink(O.source,O.target)}),k=dv.forcelayout(ve,VD({dimensions:e.numDimensions},e.ngraphPhysics)),k.graph=ve}for(var Be=0;Be<e.warmupTicks&&!(I&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin);Be++)k[I?"tick":"step"]();e.layout=k,this.resetCountdown()}e.engineRunning=!0,e.onFinishUpdate()}});function KD(i){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Object,t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,n=function(r){function s(){var o;Ax(this,s);for(var a=arguments.length,l=new Array(a),c=0;c<a;c++)l[c]=arguments[c];return o=wx(this,s,[].concat(l)),o.__kapsuleInstance=Rx(i,[].concat(qi(t?[o]:[]),l)),o}return Nx(s,r),Cx(s)}(e);return Object.keys(i()).forEach(function(r){return n.prototype[r]=function(){var s,o=(s=this.__kapsuleInstance)[r].apply(s,arguments);return o===this.__kapsuleInstance?this:o}}),n}var ZD=window.THREE?window.THREE:{Group:js},Ux=KD(YD,ZD.Group,!0);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const QD=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class JD{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=QD,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:n,material:r,object:s}=e;if(t={material:this.getMaterialData(r),geometry:{id:n.id,attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:s.matrixWorld.clone()},s.center&&(t.center=s.center.clone()),s.morphTargetInfluences&&(t.morphTargetInfluences=s.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:o,height:a}=e.context;t.bufferWidth=o,t.bufferHeight=a}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const n in e){const r=e[n];t[n]={version:r.version}}return t}containsNode(e){const t=e.material;for(const n in t)if(t[n]&&t[n].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const n of this.refreshUniforms){const r=e[n];r!=null&&(typeof r=="object"&&r.clone!==void 0?r.isTexture===!0?t[n]={id:r.id,version:r.version}:t[n]=r.clone():t[n]=r)}return t}equals(e){const{object:t,material:n,geometry:r}=e,s=this.getRenderObjectData(e);if(s.worldMatrix.equals(t.matrixWorld)!==!0)return s.worldMatrix.copy(t.matrixWorld),!1;const o=s.material;for(const _ in o){const g=o[_],m=n[_];if(g.equals!==void 0){if(g.equals(m)===!1)return g.copy(m),!1}else if(m.isTexture===!0){if(g.id!==m.id||g.version!==m.version)return g.id=m.id,g.version=m.version,!1}else if(g!==m)return o[_]=m,!1}if(o.transmission>0){const{width:_,height:g}=e.context;if(s.bufferWidth!==_||s.bufferHeight!==g)return s.bufferWidth=_,s.bufferHeight=g,!1}const a=s.geometry,l=r.attributes,c=a.attributes,u=Object.keys(c),h=Object.keys(l);if(a.id!==r.id)return a.id=r.id,!1;if(u.length!==h.length)return s.geometry.attributes=this.getAttributesData(l),!1;for(const _ of u){const g=c[_],m=l[_];if(m===void 0)return delete c[_],!1;if(g.version!==m.version)return g.version=m.version,!1}const d=r.index,f=a.indexVersion,p=d?d.version:null;if(f!==p)return a.indexVersion=p,!1;if(a.drawRange.start!==r.drawRange.start||a.drawRange.count!==r.drawRange.count)return a.drawRange.start=r.drawRange.start,a.drawRange.count=r.drawRange.count,!1;if(s.morphTargetInfluences){let _=!1;for(let g=0;g<s.morphTargetInfluences.length;g++)s.morphTargetInfluences[g]!==t.morphTargetInfluences[g]&&(_=!0);if(_)return!0}return s.center&&s.center.equals(t.center)===!1?(s.center.copy(t.center),!0):(e.bundle!==null&&(s.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;const r=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return r||s?!1:this.equals(e)!==!0}}function tc(i,e=0){let t=3735928559^e,n=1103547991^e;if(i instanceof Array)for(let r=0,s;r<i.length;r++)s=i[r],t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);else for(let r=0,s;r<i.length;r++)s=i.charCodeAt(r),t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}const eL=i=>tc(i),km=i=>tc(i),nc=(...i)=>tc(i);function Fx(i,e=!1){const t=[];i.isNode===!0&&(t.push(i.id),i=i.getSelf());for(const{property:n,childNode:r}of ch(i))t.push(tc(n.slice(0,-4)),r.getCacheKey(e));return tc(t)}function*ch(i,e=!1){for(const t in i){if(t.startsWith("_")===!0)continue;const n=i[t];if(Array.isArray(n)===!0)for(let r=0;r<n.length;r++){const s=n[r];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:r,childNode:s})}else if(n&&n.isNode===!0)yield{property:t,childNode:n};else if(typeof n=="object")for(const r in n){const s=n[r];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:r,childNode:s})}}}const tL=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),fv=new WeakMap;function nL(i){return tL.get(i)}function uh(i){if(i==null)return null;const e=typeof i;return i.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":i.isVector2===!0?"vec2":i.isVector3===!0?"vec3":i.isVector4===!0?"vec4":i.isMatrix2===!0?"mat2":i.isMatrix3===!0?"mat3":i.isMatrix4===!0?"mat4":i.isColor===!0?"color":i instanceof ArrayBuffer?"ArrayBuffer":null}function Bx(i,...e){const t=i?i.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),i==="color"?new Le(...e):t==="vec2"?new ae(...e):t==="vec3"?new N(...e):t==="vec4"?new We(...e):t==="mat2"?new Ih(...e):t==="mat3"?new Xe(...e):t==="mat4"?new ft(...e):i==="bool"?e[0]||!1:i==="float"||i==="int"||i==="uint"?e[0]||0:i==="string"?e[0]||"":i==="ArrayBuffer"?rL(e[0]):null}function Ox(i){let e=fv.get(i);return e===void 0&&(e={},fv.set(i,e)),e}function iL(i){let e="";const t=new Uint8Array(i);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function rL(i){return Uint8Array.from(atob(i),e=>e.charCodeAt(0)).buffer}const pv={VERTEX:"vertex"},ct={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},Ur={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},sL=["fragment","vertex"],mv=["setup","analyze","generate"],gv=[...sL,"compute"],Ua=["x","y","z","w"];let oL=0;class tt extends Wr{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=ct.NONE,this.updateBeforeType=ct.NONE,this.updateAfterType=ct.NONE,this.uuid=th.generateUUID(),this.version=0,this.global=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:oL++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,ct.FRAME)}onRenderUpdate(e){return this.onUpdate(e,ct.RENDER)}onObjectUpdate(e){return this.onUpdate(e,ct.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of ch(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=nc(Fx(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const r of this.getChildren())t["node"+n++]=r;return t.outputNode||null}analyze(e){if(e.increaseUsage(this)===1){const n=e.getNodeProperties(this);for(const r of Object.values(n))r&&r.isNode===!0&&r.build(e)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addChain(this);let r=null;const s=e.getBuildStage();if(s==="setup"){this.updateReference(e);const o=e.getNodeProperties(this);if(o.initialized!==!0){o.initialized=!0;const a=this.setup(e),l=a&&a.isNode===!0;for(const c of Object.values(o))c&&c.isNode===!0&&c.build(e);l&&a.build(e),o.outputNode=a}}else if(s==="analyze")this.analyze(e);else if(s==="generate")if(this.generate.length===1){const a=this.getNodeType(e),l=e.getDataFromNode(this);r=l.snippet,r===void 0?l.generated===void 0?(l.generated=!0,r=this.generate(e)||"",l.snippet=r):(console.warn("THREE.Node: Recursion detected.",this),r=""):l.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),r=e.format(r,a,t)}else r=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),r}getSerializeChildren(){return ch(this)}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:r,index:s,childNode:o}of t)s!==void 0?(n[r]===void 0&&(n[r]=Number.isInteger(s)?[]:{}),n[r][s]=o.toJSON(e.meta).uuid):n[r]=o.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const r=[];for(const s of e.inputNodes[n])r.push(t[s]);this[n]=r}else if(typeof e.inputNodes[n]=="object"){const r={};for(const s in e.inputNodes[n]){const o=e.inputNodes[n][s];r[s]=t[o]}this[n]=r}else{const r=e.inputNodes[n];this[n]=t[r]}}}toJSON(e){const{uuid:t,type:n}=this,r=e===void 0||typeof e=="string";r&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:n,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},r!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}if(r){const a=o(e.textures),l=o(e.images),c=o(e.nodes);a.length>0&&(s.textures=a),l.length>0&&(s.images=l),c.length>0&&(s.nodes=c)}return s}}class bc extends tt{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e),n=this.node.build(e),r=this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint");return`${n}[ ${r} ]`}}class kx extends tt{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const r of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(r))&&(n=r);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,r=this.getNodeType(e),s=n.build(e,r);return e.format(s,r,t)}}class on extends tt{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const r=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,r,t);if(r!=="void"&&t!=="void"&&this.hasDependencies(e)){const o=super.build(e,r),a=e.getVarFromNode(this,null,r),l=e.getPropertyName(a);return e.addLineFlowCode(`${l} = ${o}`,this),s.snippet=o,s.propertyName=l,e.format(s.propertyName,r,t)}}return super.build(e,t)}}class aL extends on{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),r=e.getTypeLength(n),s=this.nodes,o=e.getComponentType(n),a=[];let l=0;for(const u of s){if(l>=r){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${n}()' type.`);break}let h=u.getNodeType(e),d=e.getTypeLength(h),f;l+d>r&&(console.error(`THREE.TSL: Length of '${n}()' data exceeds maximum length of output type.`),d=r-l,h=e.getTypeFromLength(d)),l+=d,f=u.build(e,h);const p=e.getComponentType(h);p!==o&&(f=e.format(f,p,o)),a.push(f)}const c=`${e.getType(n)}( ${a.join(", ")} )`;return e.format(c,n,t)}}const lL=Ua.join("");class _v extends tt{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Ua.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const n=this.node,r=e.getTypeLength(n.getNodeType(e));let s=null;if(r>1){let o=null;this.getVectorLength()>=r&&(o=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const l=n.build(e,o);this.components.length===r&&this.components===lL.slice(0,this.components.length)?s=e.format(l,o,t):s=e.format(`${l}.${this.components}`,this.getNodeType(e),t)}else s=n.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class cL extends on{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:r}=this,s=this.getNodeType(e),o=e.getComponentType(r.getNodeType(e)),a=e.getTypeFromLength(n.length,o),l=r.build(e,a),c=t.build(e,s),u=e.getTypeLength(s),h=[];for(let d=0;d<u;d++){const f=Ua[d];f===n[0]?(h.push(l),d+=n.length-1):h.push(c+"."+f)}return`${e.getType(s)}( ${h.join(", ")} )`}}class uL extends on{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,r=this.getNodeType(e),s=n.build(e),o=e.getVarFromNode(this),a=e.getPropertyName(o);e.addLineFlowCode(a+" = "+s,this);const l=e.getTypeLength(r),c=[];let u=0;for(let h=0;h<l;h++){const d=Ua[h];d===t[u]?(c.push("1.0 - "+(a+"."+d)),u++):c.push(a+"."+d)}return`${e.getType(r)}( ${c.join(", ")} )`}}class Gm extends tt{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?uh(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=uh(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=iL(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Bx(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const vv=/float|u?int/;class qr extends Gm{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return vv.test(n)&&vv.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),n,t)}}class hL extends tt{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}}let Ta=null;const Wo=new Map;function Z(i,e){if(Wo.has(i)){console.warn(`THREE.TSL: Redefinition of method chaining '${i}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${i} is not a function`);Wo.set(i,e)}const Gx=i=>i.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),yv=i=>Gx(i).split("").sort().join(""),zx={setup(i,e){const t=e.shift();return i(Hh(t),...e)},get(i,e,t){if(typeof e=="string"&&i[e]===void 0){if(i.isStackNode!==!0&&e==="assign")return(...n)=>(Ta.assign(t,...n),t);if(Wo.has(e)){const n=Wo.get(e);return i.isStackNode?(...r)=>t.add(n(...r)):(...r)=>n(t,...r)}else{if(e==="self")return i;if(e.endsWith("Assign")&&Wo.has(e.slice(0,e.length-6))){const n=Wo.get(e.slice(0,e.length-6));return i.isStackNode?(...r)=>t.assign(r[0],n(...r)):(...r)=>t.assign(n(t,...r))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=Gx(e),he(new _v(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=yv(e.slice(3).toLowerCase()),n=>he(new cL(i,e,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=yv(e.slice(4).toLowerCase()),()=>he(new uL(he(i),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),he(new _v(i,e));if(/^\d+$/.test(e)===!0)return he(new bc(t,new qr(Number(e),"uint")));if(/^get$/.test(e)===!0)return n=>he(new hL(t,n))}}}return Reflect.get(i,e,t)},set(i,e,t,n){return typeof e=="string"&&i[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(n[e].assign(t),!0):Reflect.set(i,e,t,n)}},lf=new WeakMap,xv=new WeakMap,dL=function(i,e=null){const t=uh(i);if(t==="node"){let n=lf.get(i);return n===void 0&&(n=new Proxy(i,zx),lf.set(i,n),lf.set(n,n)),n}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return he(gp(i,e));if(t==="shader")return de(i)}return i},fL=function(i,e=null){for(const t in i)i[t]=he(i[t],e);return i},pL=function(i,e=null){const t=i.length;for(let n=0;n<t;n++)i[n]=he(i[n],e);return i},mL=function(i,e=null,t=null,n=null){const r=u=>he(n!==null?Object.assign(u,n):u);let s,o=e,a,l;function c(u){let h;return o?h=/[a-z]/i.test(o)?o+"()":o:h=i.type,a!==void 0&&u.length<a?(console.error(`THREE.TSL: "${h}" parameter length is less than minimum required.`),u.concat(new Array(a-u.length).fill(0))):l!==void 0&&u.length>l?(console.error(`THREE.TSL: "${h}" parameter length exceeds limit.`),u.slice(0,l)):u}return e===null?s=(...u)=>r(new i(...Qo(c(u)))):t!==null?(t=he(t),s=(...u)=>r(new i(e,...Qo(c(u)),t))):s=(...u)=>r(new i(e,...Qo(c(u)))),s.setParameterLength=(...u)=>(u.length===1?a=l=u[0]:u.length===2&&([a,l]=u),s),s.setName=u=>(o=u,s),s},gL=function(i,...e){return he(new i(...Qo(e)))};class _L extends tt{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,inputNodes:n}=this,r=e.getNodeProperties(t);if(r.onceOutput)return r.onceOutput;let s=null;if(t.layout){let o=xv.get(e.constructor);o===void 0&&(o=new WeakMap,xv.set(e.constructor,o));let a=o.get(t);a===void 0&&(a=he(e.buildFunctionNode(t)),o.set(t,a)),e.addInclude(a),s=he(a.call(n))}else{const o=t.jsFunc,a=n!==null||o.length>1?o(n||[],e):o(e);s=he(a)}return t.once&&(r.onceOutput=s),s}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class vL extends tt{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Hh(e),he(new _L(this,e))}setup(){return this.call()}}const yL=[!1,!0],xL=[0,1,2,3],bL=[-1,-2],Vx=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],zm=new Map;for(const i of yL)zm.set(i,new qr(i));const Vm=new Map;for(const i of xL)Vm.set(i,new qr(i,"uint"));const Hm=new Map([...Vm].map(i=>new qr(i.value,"int")));for(const i of bL)Hm.set(i,new qr(i,"int"));const zh=new Map([...Hm].map(i=>new qr(i.value)));for(const i of Vx)zh.set(i,new qr(i));for(const i of Vx)zh.set(-i,new qr(-i));const Vh={bool:zm,uint:Vm,ints:Hm,float:zh},bv=new Map([...zm,...zh]),gp=(i,e)=>bv.has(i)?bv.get(i):i.isNode===!0?i:new qr(i,e),SL=i=>{try{return i.getNodeType()}catch{return}},fn=function(i,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(i)&&t.every(r=>typeof r!="object"))&&(t=[Bx(i,...t)]),t.length===1&&e!==null&&e.has(t[0]))return he(e.get(t[0]));if(t.length===1){const r=gp(t[0],i);return SL(r)===i?he(r):he(new kx(r,i))}const n=t.map(r=>gp(r));return he(new aL(n,i))}},Sv=i=>typeof i=="object"&&i!==null?i.value:i,TL=i=>i!=null?i.nodeType||i.convertTo||(typeof i=="string"?i:null):null;function Wu(i,e){return new Proxy(new vL(i,e),zx)}const he=(i,e=null)=>dL(i,e),Hh=(i,e=null)=>new fL(i,e),Qo=(i,e=null)=>new pL(i,e),le=(...i)=>new mL(...i),ge=(...i)=>new gL(...i);let ML=0;const de=(i,e=null)=>{let t=null;e!==null&&(typeof e=="object"?t=e.return:(typeof e=="string"?t=e:console.error("THREE.TSL: Invalid layout type."),e=null));const n=new Wu(i,t),r=(...s)=>{let o;return Hh(s),s[0]&&s[0].isNode?o=[...s]:o=s[0],n.call(o)};if(r.shaderNode=n,r.setLayout=s=>(n.setLayout(s),r),r.once=()=>(n.once=!0,r),e!==null){if(typeof e.inputs!="object"){const s={name:"fn"+ML++,type:t,inputs:[]};for(const o in e)o!=="return"&&s.inputs.push({name:o,type:e[o]});e=s}r.setLayout(e)}return r};Z("toGlobal",i=>(i.global=!0,i));const hh=i=>{Ta=i},Hx=()=>Ta,sn=(...i)=>Ta.If(...i);function EL(i){return Ta&&Ta.add(i),i}Z("append",EL);const wL=new fn("color"),Q=new fn("float",Vh.float),Xt=new fn("int",Vh.ints),AL=new fn("uint",Vh.uint),Wx=new fn("bool",Vh.bool),_e=new fn("vec2"),Ar=new fn("ivec2"),RL=new fn("uvec2"),CL=new fn("bvec2"),ee=new fn("vec3"),NL=new fn("ivec3"),PL=new fn("uvec3"),DL=new fn("bvec3"),Qe=new fn("vec4"),LL=new fn("ivec4"),IL=new fn("uvec4"),UL=new fn("bvec4"),Wm=new fn("mat2"),$n=new fn("mat3"),Jo=new fn("mat4");Z("toColor",wL);Z("toFloat",Q);Z("toInt",Xt);Z("toUint",AL);Z("toBool",Wx);Z("toVec2",_e);Z("toIVec2",Ar);Z("toUVec2",RL);Z("toBVec2",CL);Z("toVec3",ee);Z("toIVec3",NL);Z("toUVec3",PL);Z("toBVec3",DL);Z("toVec4",Qe);Z("toIVec4",LL);Z("toUVec4",IL);Z("toBVec4",UL);Z("toMat2",Wm);Z("toMat3",$n);Z("toMat4",Jo);const FL=le(bc).setParameterLength(2),BL=(i,e)=>he(new kx(he(i),e));Z("element",FL);Z("convert",BL);class Tv extends on{static get type(){return"ArrayNode"}constructor(e,t,n=null){super(e),this.count=t,this.values=n,this.isArrayNode=!0}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const OL=(...i)=>{let e;if(i.length===1){const t=i[0];e=new Tv(null,t.length,t)}else{const t=i[0],n=i[1];e=new Tv(t,n)}return he(e)};Z("toArray",(i,e)=>OL(Array(e).fill(i)));class $x extends tt{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.shared=t,this.order=n,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const kL=i=>new $x(i),$m=(i,e=0)=>new $x(i,!0,e),GL=$m("frame"),qe=$m("render"),qx=kL("object");class Sc extends Gm{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=qx}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const n=this.getSelf();return e=e.bind(n),super.onUpdate(r=>{const s=e(r,n);s!==void 0&&(this.value=s)},t)}generate(e,t){const n=this.getNodeType(e),r=this.getUniformHash(e);let s=e.getNodeFromHash(r);s===void 0&&(e.setHashNode(this,r),s=this);const o=s.getInputType(e),a=e.getUniformFromNode(s,o,e.shaderStage,this.name||e.context.label),l=e.getPropertyName(a);return e.context.label!==void 0&&delete e.context.label,e.format(l,n,t)}}const Je=(i,e)=>{const t=TL(e||i),n=i&&i.isNode===!0?i.node&&i.node.value||i.value:i;return he(new Sc(n,t))};class wt extends tt{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Tc=(i,e)=>he(new wt(i,e)),dh=(i,e)=>he(new wt(i,e,!0)),bt=ge(wt,"vec4","DiffuseColor"),Mv=ge(wt,"vec3","EmissiveColor"),Pr=ge(wt,"float","Roughness"),fh=ge(wt,"float","Metalness"),_p=ge(wt,"float","Clearcoat"),ph=ge(wt,"float","ClearcoatRoughness"),$o=ge(wt,"vec3","Sheen"),qm=ge(wt,"float","SheenRoughness"),jm=ge(wt,"float","Iridescence"),jx=ge(wt,"float","IridescenceIOR"),Xx=ge(wt,"float","IridescenceThickness"),vp=ge(wt,"float","AlphaT"),Os=ge(wt,"float","Anisotropy"),$u=ge(wt,"vec3","AnisotropyT"),ea=ge(wt,"vec3","AnisotropyB"),_i=ge(wt,"color","SpecularColor"),mh=ge(wt,"float","SpecularF90"),yp=ge(wt,"float","Shininess"),Cl=ge(wt,"vec4","Output"),cf=ge(wt,"float","dashSize"),Ev=ge(wt,"float","gapSize"),qu=ge(wt,"float","IOR"),xp=ge(wt,"float","Transmission"),Yx=ge(wt,"float","Thickness"),Kx=ge(wt,"float","AttenuationDistance"),Zx=ge(wt,"color","AttenuationColor"),Qx=ge(wt,"float","Dispersion");class zL extends on{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return Ua.join("").slice(0,n)!==t.components}return!1}generate(e,t){const{targetNode:n,sourceNode:r}=this,s=this.needsSplitAssign(e),o=n.getNodeType(e),a=n.context({assign:!0}).build(e),l=r.build(e,o),c=r.getNodeType(e),u=e.getDataFromNode(this);let h;if(u.initialized===!0)t!=="void"&&(h=a);else if(s){const d=e.getVarFromNode(this,null,o),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${l}`,this);const p=n.node.context({assign:!0}).build(e);for(let _=0;_<n.components.length;_++){const g=n.components[_];e.addLineFlowCode(`${p}.${g} = ${f}[ ${_} ]`,this)}t!=="void"&&(h=a)}else h=`${a} = ${l}`,(t==="void"||c==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=a));return u.initialized=!0,e.format(h,o,t)}}const VL=le(zL).setParameterLength(2);Z("assign",VL);class HL extends on{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],n=this.functionNode,r=n.getInputs(e),s=this.parameters,o=(l,c)=>{const u=c.type,h=u==="pointer";let d;return h?d="&"+l.build(e):d=l.build(e,u),d};if(Array.isArray(s)){if(s.length>r.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),s.length=r.length;else if(s.length<r.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");s.length<r.length;)s.push(Q(0));for(let l=0;l<s.length;l++)t.push(o(s[l],r[l]))}else for(const l of r){const c=s[l.name];c!==void 0?t.push(o(c,l)):(console.error(`THREE.TSL: Input '${l.name}' not found in 'Fn()'.`),t.push(o(Q(0),l)))}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const WL=(i,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Qo(e):Hh(e[0]),he(new HL(he(i),e)));Z("call",WL);class $t extends on{static get type(){return"OperatorNode"}constructor(e,t,n,...r){if(super(),r.length>0){let s=new $t(e,t,n);for(let o=0;o<r.length-1;o++)s=new $t(e,s,r[o]);t=s,n=r[r.length-1]}this.op=e,this.aNode=t,this.bNode=n,this.isOperatorNode=!0}getNodeType(e,t){const n=this.op,r=this.aNode,s=this.bNode,o=r.getNodeType(e),a=typeof s<"u"?s.getNodeType(e):null;if(o==="void"||a==="void")return"void";if(n==="%")return o;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(o);if(n==="!"||n==="=="||n==="!="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){const l=t?e.getTypeLength(t):Math.max(e.getTypeLength(o),e.getTypeLength(a));return l>1?`bvec${l}`:"bool"}else{if(e.isMatrix(o)){if(a==="float")return o;if(e.isVector(a))return e.getVectorFromMatrix(o);if(e.isMatrix(a))return o}else if(e.isMatrix(a)){if(o==="float")return a;if(e.isVector(o))return e.getVectorFromMatrix(a)}return e.getTypeLength(a)>e.getTypeLength(o)?a:o}}generate(e,t){const n=this.op,r=this.aNode,s=this.bNode,o=this.getNodeType(e,t);let a=null,l=null;o!=="void"?(a=r.getNodeType(e),l=typeof s<"u"?s.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="||n==="!="?e.isVector(a)?l=a:a!==l&&(a=l="float"):n===">>"||n==="<<"?(a=o,l=e.changeComponentType(l,"uint")):n==="%"?(a=o,l=e.isInteger(a)&&e.isInteger(l)?l:a):e.isMatrix(a)?l==="float"?l="float":e.isVector(l)?l=e.getVectorFromMatrix(a):e.isMatrix(l)||(a=l=o):e.isMatrix(l)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(l):a=l=o:a=l=o):a=l=o;const c=r.build(e,a),u=typeof s<"u"?s.build(e,l):null,h=e.getTypeLength(t),d=e.getFunctionOperator(n);if(t!=="void"){const f=e.renderer.coordinateSystem===ei;if(n==="==")return f?h>1?e.format(`${e.getMethod("equal",t)}( ${c}, ${u} )`,o,t):e.format(`( ${c} ${n} ${u} )`,o,t):h>1||!e.isVector(a)?e.format(`( ${c} == ${u} )`,o,t):e.format(`all( ${c} == ${u} )`,o,t);if(n==="<"&&h>1)return f?e.format(`${e.getMethod("lessThan",t)}( ${c}, ${u} )`,o,t):e.format(`( ${c} < ${u} )`,o,t);if(n==="<="&&h>1)return f?e.format(`${e.getMethod("lessThanEqual",t)}( ${c}, ${u} )`,o,t):e.format(`( ${c} <= ${u} )`,o,t);if(n===">"&&h>1)return f?e.format(`${e.getMethod("greaterThan",t)}( ${c}, ${u} )`,o,t):e.format(`( ${c} > ${u} )`,o,t);if(n===">="&&h>1)return f?e.format(`${e.getMethod("greaterThanEqual",t)}( ${c}, ${u} )`,o,t):e.format(`( ${c} >= ${u} )`,o,t);if(n==="%")return e.isInteger(l)?e.format(`( ${c} % ${u} )`,o,t):e.format(`${e.getMethod("mod",o)}( ${c}, ${u} )`,o,t);if(n==="!"||n==="~")return e.format(`(${n}${c})`,a,t);if(d)return e.format(`${d}( ${c}, ${u} )`,o,t);if(e.isMatrix(a)&&l==="float")return e.format(`( ${u} ${n} ${c} )`,o,t);if(a==="float"&&e.isMatrix(l))return e.format(`${c} ${n} ${u}`,o,t);{let p=`( ${c} ${n} ${u} )`;return!f&&o==="bool"&&e.isVector(a)&&e.isVector(l)&&(p=`all${p}`),e.format(p,o,t)}}else if(a!=="void")return d?e.format(`${d}( ${c}, ${u} )`,o,t):e.isMatrix(a)&&l==="float"?e.format(`${u} ${n} ${c}`,o,t):e.format(`${c} ${n} ${u}`,o,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const qn=le($t,"+").setParameterLength(2,1/0).setName("add"),Qn=le($t,"-").setParameterLength(2,1/0).setName("sub"),dt=le($t,"*").setParameterLength(2,1/0).setName("mul"),zr=le($t,"/").setParameterLength(2,1/0).setName("div"),Wh=le($t,"%").setParameterLength(2).setName("mod"),Jx=le($t,"==").setParameterLength(2).setName("equal"),$L=le($t,"!=").setParameterLength(2).setName("notEqual"),qL=le($t,"<").setParameterLength(2).setName("lessThan"),jL=le($t,">").setParameterLength(2).setName("greaterThan"),XL=le($t,"<=").setParameterLength(2).setName("lessThanEqual"),YL=le($t,">=").setParameterLength(2).setName("greaterThanEqual"),KL=le($t,"&&").setParameterLength(2,1/0).setName("and"),ZL=le($t,"||").setParameterLength(2,1/0).setName("or"),QL=le($t,"!").setParameterLength(1).setName("not"),JL=le($t,"^^").setParameterLength(2).setName("xor"),e2=le($t,"&").setParameterLength(2).setName("bitAnd"),t2=le($t,"~").setParameterLength(2).setName("bitNot"),n2=le($t,"|").setParameterLength(2).setName("bitOr"),i2=le($t,"^").setParameterLength(2).setName("bitXor"),r2=le($t,"<<").setParameterLength(2).setName("shiftLeft"),s2=le($t,">>").setParameterLength(2).setName("shiftRight");Z("add",qn);Z("sub",Qn);Z("mul",dt);Z("div",zr);Z("mod",Wh);Z("equal",Jx);Z("notEqual",$L);Z("lessThan",qL);Z("greaterThan",jL);Z("lessThanEqual",XL);Z("greaterThanEqual",YL);Z("and",KL);Z("or",ZL);Z("not",QL);Z("xor",JL);Z("bitAnd",e2);Z("bitNot",t2);Z("bitOr",n2);Z("bitXor",i2);Z("shiftLeft",r2);Z("shiftRight",s2);const o2=(i,e)=>(console.warn('THREE.TSL: "remainder()" is deprecated. Use "mod( int( ... ) )" instead.'),Wh(i,e)),a2=(i,e)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),Wh(Xt(i),Xt(e)));Z("remainder",o2);Z("modInt",a2);class V extends on{static get type(){return"MathNode"}constructor(e,t,n=null,r=null){if(super(),(e===V.MAX||e===V.MIN)&&arguments.length>3){let s=new V(e,t,n);for(let o=2;o<arguments.length-1;o++)s=new V(e,s,arguments[o]);t=s,n=arguments[arguments.length-1],r=null}this.method=e,this.aNode=t,this.bNode=n,this.cNode=r,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),o=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(r)?0:e.getTypeLength(r);return s>o&&s>a?t:o>a?n:a>s?r:t}getNodeType(e){const t=this.method;return t===V.LENGTH||t===V.DISTANCE||t===V.DOT?"float":t===V.CROSS?"vec3":t===V.ALL||t===V.ANY?"bool":t===V.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}generate(e,t){let n=this.method;const r=this.getNodeType(e),s=this.getInputType(e),o=this.aNode,a=this.bNode,l=this.cNode,c=e.renderer.coordinateSystem;if(n===V.TRANSFORM_DIRECTION){let u=o,h=a;e.isMatrix(u.getNodeType(e))?h=Qe(ee(h),0):u=Qe(ee(u),0);const d=dt(u,h).xyz;return rc(d).build(e,t)}else{if(n===V.NEGATE)return e.format("( - "+o.build(e,s)+" )",r,t);if(n===V.ONE_MINUS)return Qn(1,o).build(e,t);if(n===V.RECIPROCAL)return zr(1,o).build(e,t);if(n===V.DIFFERENCE)return Ri(Qn(o,a)).build(e,t);{const u=[];return n===V.CROSS?u.push(o.build(e,r),a.build(e,r)):c===ei&&n===V.STEP?u.push(o.build(e,e.getTypeLength(o.getNodeType(e))===1?"float":s),a.build(e,s)):c===ei&&(n===V.MIN||n===V.MAX)?u.push(o.build(e,s),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":s)):n===V.REFRACT?u.push(o.build(e,s),a.build(e,s),l.build(e,"float")):n===V.MIX?u.push(o.build(e,s),a.build(e,s),l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":s)):(c===gs&&n===V.ATAN&&a!==null&&(n="atan2"),u.push(o.build(e,s)),a!==null&&u.push(a.build(e,s)),l!==null&&u.push(l.build(e,s))),e.format(`${e.getMethod(n,r)}( ${u.join(", ")} )`,r,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}V.ALL="all";V.ANY="any";V.RADIANS="radians";V.DEGREES="degrees";V.EXP="exp";V.EXP2="exp2";V.LOG="log";V.LOG2="log2";V.SQRT="sqrt";V.INVERSE_SQRT="inversesqrt";V.FLOOR="floor";V.CEIL="ceil";V.NORMALIZE="normalize";V.FRACT="fract";V.SIN="sin";V.COS="cos";V.TAN="tan";V.ASIN="asin";V.ACOS="acos";V.ATAN="atan";V.ABS="abs";V.SIGN="sign";V.LENGTH="length";V.NEGATE="negate";V.ONE_MINUS="oneMinus";V.DFDX="dFdx";V.DFDY="dFdy";V.ROUND="round";V.RECIPROCAL="reciprocal";V.TRUNC="trunc";V.FWIDTH="fwidth";V.TRANSPOSE="transpose";V.BITCAST="bitcast";V.EQUALS="equals";V.MIN="min";V.MAX="max";V.STEP="step";V.REFLECT="reflect";V.DISTANCE="distance";V.DIFFERENCE="difference";V.DOT="dot";V.CROSS="cross";V.POW="pow";V.TRANSFORM_DIRECTION="transformDirection";V.MIX="mix";V.CLAMP="clamp";V.REFRACT="refract";V.SMOOTHSTEP="smoothstep";V.FACEFORWARD="faceforward";const l2=Q(1e-6),c2=Q(Math.PI),u2=le(V,V.ALL).setParameterLength(1),h2=le(V,V.ANY).setParameterLength(1),d2=le(V,V.RADIANS).setParameterLength(1),f2=le(V,V.DEGREES).setParameterLength(1),eb=le(V,V.EXP).setParameterLength(1),ic=le(V,V.EXP2).setParameterLength(1),tb=le(V,V.LOG).setParameterLength(1),kr=le(V,V.LOG2).setParameterLength(1),Xm=le(V,V.SQRT).setParameterLength(1),p2=le(V,V.INVERSE_SQRT).setParameterLength(1),Qs=le(V,V.FLOOR).setParameterLength(1),Ym=le(V,V.CEIL).setParameterLength(1),rc=le(V,V.NORMALIZE).setParameterLength(1),xs=le(V,V.FRACT).setParameterLength(1),Xi=le(V,V.SIN).setParameterLength(1),ss=le(V,V.COS).setParameterLength(1),m2=le(V,V.TAN).setParameterLength(1),g2=le(V,V.ASIN).setParameterLength(1),_2=le(V,V.ACOS).setParameterLength(1),nb=le(V,V.ATAN).setParameterLength(1,2),Ri=le(V,V.ABS).setParameterLength(1),gh=le(V,V.SIGN).setParameterLength(1),ds=le(V,V.LENGTH).setParameterLength(1),v2=le(V,V.NEGATE).setParameterLength(1),y2=le(V,V.ONE_MINUS).setParameterLength(1),ib=le(V,V.DFDX).setParameterLength(1),rb=le(V,V.DFDY).setParameterLength(1),x2=le(V,V.ROUND).setParameterLength(1),b2=le(V,V.RECIPROCAL).setParameterLength(1),S2=le(V,V.TRUNC).setParameterLength(1),T2=le(V,V.FWIDTH).setParameterLength(1),M2=le(V,V.TRANSPOSE).setParameterLength(1),E2=(i,e)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),Jx(i,e)),sc=le(V,V.MIN).setParameterLength(2,1/0),li=le(V,V.MAX).setParameterLength(2,1/0),sb=le(V,V.STEP).setParameterLength(2),w2=le(V,V.REFLECT).setParameterLength(2),A2=le(V,V.DISTANCE).setParameterLength(2),R2=le(V,V.DIFFERENCE).setParameterLength(2),Km=le(V,V.DOT).setParameterLength(2),ob=le(V,V.CROSS).setParameterLength(2),$h=le(V,V.POW).setParameterLength(2),ab=le(V,V.POW,2).setParameterLength(1),C2=le(V,V.POW,3).setParameterLength(1),N2=le(V,V.POW,4).setParameterLength(1),P2=le(V,V.TRANSFORM_DIRECTION).setParameterLength(2),D2=i=>dt(gh(i),$h(Ri(i),1/3)),lb=i=>Km(i,i),kt=le(V,V.MIX).setParameterLength(3),Vr=(i,e=0,t=1)=>he(new V(V.CLAMP,he(i),he(e),he(t))),L2=i=>Vr(i),cb=le(V,V.REFRACT).setParameterLength(3),vs=le(V,V.SMOOTHSTEP).setParameterLength(3),I2=le(V,V.FACEFORWARD).setParameterLength(3),U2=de(([i])=>{const n=43758.5453,r=Km(i.xy,_e(12.9898,78.233)),s=Wh(r,c2);return xs(Xi(s).mul(n))}),F2=(i,e,t)=>kt(e,t,i),B2=(i,e,t)=>vs(e,t,i),O2=(i,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),nb(i,e));Z("all",u2);Z("any",h2);Z("equals",E2);Z("radians",d2);Z("degrees",f2);Z("exp",eb);Z("exp2",ic);Z("log",tb);Z("log2",kr);Z("sqrt",Xm);Z("inverseSqrt",p2);Z("floor",Qs);Z("ceil",Ym);Z("normalize",rc);Z("fract",xs);Z("sin",Xi);Z("cos",ss);Z("tan",m2);Z("asin",g2);Z("acos",_2);Z("atan",nb);Z("abs",Ri);Z("sign",gh);Z("length",ds);Z("lengthSq",lb);Z("negate",v2);Z("oneMinus",y2);Z("dFdx",ib);Z("dFdy",rb);Z("round",x2);Z("reciprocal",b2);Z("trunc",S2);Z("fwidth",T2);Z("atan2",O2);Z("min",sc);Z("max",li);Z("step",sb);Z("reflect",w2);Z("distance",A2);Z("dot",Km);Z("cross",ob);Z("pow",$h);Z("pow2",ab);Z("pow3",C2);Z("pow4",N2);Z("transformDirection",P2);Z("mix",F2);Z("clamp",Vr);Z("refract",cb);Z("smoothstep",B2);Z("faceForward",I2);Z("difference",R2);Z("saturate",L2);Z("cbrt",D2);Z("transpose",M2);Z("rand",U2);class k2 extends tt{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const{ifNode:t,elseNode:n}=e.getNodeProperties(this);if(t===void 0)return this.setup(e),this.getNodeType(e);const r=t.getNodeType(e);if(n!==null){const s=n.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(r))return s}return r}setup(e){const t=this.condNode.cache(),n=this.ifNode.cache(),r=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=s,r!==null&&(e.getDataFromNode(r).parentNodeBlock=s);const o=e.getNodeProperties(this);o.condNode=t,o.ifNode=n.context({nodeBlock:n}),o.elseNode=r?r.context({nodeBlock:r}):null}generate(e,t){const n=this.getNodeType(e),r=e.getDataFromNode(this);if(r.nodeProperty!==void 0)return r.nodeProperty;const{condNode:s,ifNode:o,elseNode:a}=e.getNodeProperties(this),l=e.currentFunctionNode,c=t!=="void",u=c?Tc(n).build(e):"";r.nodeProperty=u;const h=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${h} ) {

`).addFlowTab();let d=o.build(e,n);if(d&&(c?d=u+" = "+d+";":(d="return "+d+";",l===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),d="// "+d))),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let f=a.build(e,n);f&&(c?f=u+" = "+f+";":(f="return "+f+";",l===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),f="// "+f))),e.removeFlowTab().addFlowCode(e.tab+"	"+f+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(u,n,t)}}const ti=le(k2).setParameterLength(2,3);Z("select",ti);const G2=(...i)=>(console.warn("THREE.TSL: cond() has been renamed to select()."),ti(...i));Z("cond",G2);class ub extends tt{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e);return e.setContext(t),n}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.value});const r=this.node.build(e,t);return e.setContext(n),r}}const Zm=le(ub).setParameterLength(1,2),z2=(i,e)=>Zm(i,{label:e});Z("context",Zm);Z("label",z2);class ju extends tt{static get type(){return"VarNode"}constructor(e,t=null,n=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=n}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:n,readOnly:r}=this,{renderer:s}=e,o=s.backend.isWebGPUBackend===!0;let a=!1,l=!1;r&&(a=e.isDeterministic(t),l=o?r:a);const c=e.getVectorType(this.getNodeType(e)),u=t.build(e,c),h=e.getVarFromNode(this,n,c,void 0,l),d=e.getPropertyName(h);let f=d;if(l)if(o)f=a?`const ${d}`:`let ${d}`;else{const p=e.getArrayCount(t);f=`const ${e.getVar(h.type,d,p)}`}return e.addLineFlowCode(`${f} = ${u}`,this),d}}const Qm=le(ju),V2=(i,e=null)=>Qm(i,e).append(),H2=(i,e=null)=>Qm(i,e,!0).append();Z("toVar",V2);Z("toConst",H2);const W2=i=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),Qm(i));Z("temp",W2);class $2 extends tt{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(n===void 0){const r=this.name,s=this.getNodeType(e);t.varying=n=e.getVaryingFromNode(this,r,s),t.node=this.node}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),n=this.setupVarying(e),r=e.shaderStage==="fragment"&&t.reassignPosition===!0&&e.context.needsPositionReassign;if(t.propertyName===void 0||r){const s=this.getNodeType(e),o=e.getPropertyName(n,pv.VERTEX);e.flowNodeFromShaderStage(pv.VERTEX,this.node,s,o),t.propertyName=o,r?t.reassignPosition=!1:t.reassignPosition===void 0&&e.context.isPositionNodeInput&&(t.reassignPosition=!0)}return e.getPropertyName(n)}}const tr=le($2).setParameterLength(1,2),q2=i=>tr(i);Z("toVarying",tr);Z("toVertexStage",q2);Z("varying",(...i)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),tr(...i)));Z("vertexStage",(...i)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),tr(...i)));const j2=de(([i])=>{const e=i.mul(.9478672986).add(.0521327014).pow(2.4),t=i.mul(.0773993808),n=i.lessThanEqual(.04045);return kt(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),X2=de(([i])=>{const e=i.pow(.41666).mul(1.055).sub(.055),t=i.mul(12.92),n=i.lessThanEqual(.0031308);return kt(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Mc="WorkingColorSpace",Jm="OutputColorSpace";class qh extends on{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===Mc?lt.workingColorSpace:t===Jm?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),r=this.resolveColorSpace(e,this.target);let s=t;return lt.enabled===!1||n===r||!n||!r||(lt.getTransfer(n)===Et&&(s=Qe(j2(s.rgb),s.a)),lt.getPrimaries(n)!==lt.getPrimaries(r)&&(s=Qe($n(lt._getMatrix(new Xe,n,r)).mul(s.rgb),s.a)),lt.getTransfer(r)===Et&&(s=Qe(X2(s.rgb),s.a))),s}}const Y2=i=>he(new qh(he(i),Mc,Jm)),K2=i=>he(new qh(he(i),Jm,Mc)),Z2=(i,e)=>he(new qh(he(i),Mc,e)),eg=(i,e)=>he(new qh(he(i),e,Mc));Z("toOutputColorSpace",Y2);Z("toWorkingColorSpace",K2);Z("workingToColorSpace",Z2);Z("colorSpaceToWorking",eg);let Q2=class extends bc{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,n,r)}};class hb extends tt{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,r=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=r,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=ct.OBJECT}setGroup(e){return this.group=e,this}element(e){return he(new Q2(this,he(e)))}setNodeType(e){const t=Je(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let r=1;r<t.length;r++)n=n[t[r]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const J2=(i,e,t)=>he(new hb(i,e,t));class eI extends hb{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(qe)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const tI=(i,e,t=null)=>he(new eI(i,e,t));class nI extends on{static get type(){return"ToneMappingNode"}constructor(e,t=rI,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}customCacheKey(){return nc(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,n=this.toneMapping;if(n===oi)return t;let r=null;const s=e.renderer.library.getToneMappingFunction(n);return s!==null?r=Qe(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),r=t),r}}const iI=(i,e,t)=>he(new nI(i,he(e),he(t))),rI=tI("toneMappingExposure","float");Z("toneMapping",(i,e,t)=>iI(e,t,i));class sI extends Gm{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=r,this.usage=eh,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),n=this.value,r=e.getTypeLength(t),s=this.bufferStride||r,o=this.bufferOffset,a=n.isInterleavedBuffer===!0?n:new ym(n,s),l=new Jl(a,r,o);a.setUsage(this.usage),this.attribute=l,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(n);let s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=r,s=r):s=tr(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const tg=(i,e=null,t=0,n=0)=>he(new sI(i,e,t,n)),oI=(i,e=null,t=0,n=0)=>tg(i,e,t,n).setUsage(Vo),wv=(i,e=null,t=0,n=0)=>tg(i,e,t,n).setInstanced(!0),Av=(i,e=null,t=0,n=0)=>oI(i,e,t,n).setInstanced(!0);Z("toAttribute",i=>tg(i.value));class aI extends tt{static get type(){return"ComputeNode"}constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.name="",this.updateBeforeType=ct.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}label(e){return this.name=e,this}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let n=t[0];for(let r=1;r<t.length;r++)n*=t[r];this.dispatchCount=Math.ceil(e/n)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.setup(e);if(t){const n=e.getNodeProperties(this);n.outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:n}=e;if(n==="compute"){const r=this.computeNode.build(e,"void");r!==""&&e.addLineFlowCode(r,this)}else{const s=e.getNodeProperties(this).outputComputeNode;if(s)return s.build(e,t)}}}const lI=(i,e,t)=>he(new aI(he(i),e,t));Z("compute",lI);class cI extends tt{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const r=this.node.getNodeType(e);return e.setCache(t),r}build(e,...t){const n=e.getCache(),r=e.getCacheFromNode(this,this.parent);e.setCache(r);const s=this.node.build(e,...t);return e.setCache(n),s}}const Xu=(i,e)=>he(new cI(he(i),e));Z("cache",Xu);class uI extends tt{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const hI=le(uI).setParameterLength(2);Z("bypass",hI);class db extends tt{static get type(){return"RemapNode"}constructor(e,t,n,r=Q(0),s=Q(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=r,this.outHighNode=s,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:r,outHighNode:s,doClamp:o}=this;let a=e.sub(t).div(n.sub(t));return o===!0&&(a=a.clamp()),a.mul(s.sub(r)).add(r)}}const dI=le(db,null,null,{doClamp:!1}).setParameterLength(3,5),fI=le(db).setParameterLength(3,5);Z("remap",dI);Z("remapClamp",fI);class Yu extends tt{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),r=this.snippet;if(n==="void")e.addLineFlowCode(r,this);else return e.format(r,n,t)}}const oc=le(Yu).setParameterLength(1,2),pI=i=>(i?ti(i,oc("discard")):oc("discard")).append();Z("discard",pI);class mI extends on{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const n=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||oi,r=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||yi;return n!==oi&&(t=t.toneMapping(n)),r!==yi&&r!==lt.workingColorSpace&&(t=t.workingToColorSpace(r)),t}}const gI=(i,e=null,t=null)=>he(new mI(he(i),e,t));Z("renderOutput",gI);class _I extends on{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,n=this.node.build(e);let r="";return r+=`// #--- TSL Debug ---#
`,r+=e.flow.code.replace(/^\t/mg,"")+`
`,r+="/* ... */ "+n+` /* ... */
`,r+=`// #-----------------#
`,t!==null?t(r):console.log(r),n}}const vI=(i,e=null)=>he(new _I(he(i),e));Z("debug",vI);class yI extends tt{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const r=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const s=e.geometry.getAttribute(t),o=e.getTypeFromAttribute(s),a=e.getAttribute(t,o);return e.shaderStage==="vertex"?e.format(a.name,o,n):tr(this).build(e,n)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Hr=(i,e)=>he(new yI(i,e)),Ec=(i=0)=>Hr("uv"+(i>0?i:""),"vec2");class xI extends tt{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),r=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${r} )`,this.getNodeType(e),t)}}const Nl=le(xI).setParameterLength(1,2);class bI extends Sc{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=ct.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){const{width:r,height:s}=n;this.value=Math.log2(Math.max(r,s))}}}const SI=le(bI).setParameterLength(1);class wc extends Sc{static get type(){return"TextureNode"}constructor(e,t=null,n=null,r=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=r,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=ct.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Lt?"uvec4":this.value.type===Sn?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Ec(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=Je(this.value.matrix)),this._matrixUniform.mul(ee(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?ct.RENDER:ct.NONE,this}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.image instanceof ImageBitmap&&n.flipY===!0||n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(Xt(Nl(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const n=this.value;if(!n||n.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let r=this.uvNode;(r===null||e.context.forceUVContext===!0)&&e.context.getUV&&(r=e.context.getUV(this)),r||(r=this.getDefaultUV()),this.updateMatrix===!0&&(r=this.getTransformedUV(r)),r=this.setupUV(e,r);let s=this.levelNode;s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),t.uvNode=r,t.levelNode=s,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,n,r,s,o,a,l){const c=this.value;let u;return r?u=e.generateTextureLevel(c,t,n,r,o):s?u=e.generateTextureBias(c,t,n,s,o):l?u=e.generateTextureGrad(c,t,n,l,o):a?u=e.generateTextureCompare(c,t,n,a,o):this.sampler===!1?u=e.generateTextureLoad(c,t,n,o):u=e.generateTexture(c,t,n,o),u}generate(e,t){const n=this.value,r=e.getNodeProperties(this),s=super.generate(e,"property");if(/^sampler/.test(t))return s+"_sampler";if(e.isReference(t))return s;{const o=e.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:p,gradNode:_}=r,g=this.generateUV(e,u),m=h?h.build(e,"float"):null,v=d?d.build(e,"float"):null,x=p?p.build(e,"int"):null,y=f?f.build(e,"float"):null,T=_?[_[0].build(e,"vec2"),_[1].build(e,"vec2")]:null,b=e.getVarFromNode(this);a=e.getPropertyName(b);const M=this.generateSnippet(e,s,g,m,v,x,y,T);e.addLineFlowCode(`${a} = ${M}`,this),o.snippet=M,o.propertyName=a}let l=a;const c=this.getNodeType(e);return e.needsToWorkingColorSpace(n)&&(l=eg(oc(l,c),n.colorSpace).setup(e).build(e,c)),e.format(l,c,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=he(e),t.referenceNode=this.getSelf(),he(t)}blur(e){const t=this.clone();t.biasNode=he(e).mul(SI(t)),t.referenceNode=this.getSelf();const n=t.value;return(n&&n.generateMipmaps===!1||n.minFilter===Bt||n.magFilter===Bt)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),he(t)}level(e){const t=this.clone();return t.levelNode=he(e),t.referenceNode=this.getSelf(),he(t)}size(e){return Nl(this,e)}bias(e){const t=this.clone();return t.biasNode=he(e),t.referenceNode=this.getSelf(),he(t)}compare(e){const t=this.clone();return t.compareNode=he(e),t.referenceNode=this.getSelf(),he(t)}grad(e,t){const n=this.clone();return n.gradNode=[he(e),he(t)],n.referenceNode=this.getSelf(),he(n)}depth(e){const t=this.clone();return t.depthNode=he(e),t.referenceNode=this.getSelf(),he(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const yt=le(wc).setParameterLength(1,4),$i=(...i)=>yt(...i).setSampler(!1);class fb extends Sc{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const pb=(i,e,t)=>he(new fb(i,e,t));class TI extends bc{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType(),r=this.node.getPaddedType();return e.format(t,r,n)}}class MI extends fb{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?uh(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=ct.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){const{array:e,value:t}=this,n=this.elementType;if(n==="float"||n==="int"||n==="uint")for(let r=0;r<e.length;r++){const s=r*4;t[s]=e[r]}else if(n==="color")for(let r=0;r<e.length;r++){const s=r*4,o=e[r];t[s]=o.r,t[s+1]=o.g,t[s+2]=o.b||0}else if(n==="mat2")for(let r=0;r<e.length;r++){const s=r*4,o=e[r];t[s]=o.elements[0],t[s+1]=o.elements[1],t[s+2]=o.elements[2],t[s+3]=o.elements[3]}else if(n==="mat3")for(let r=0;r<e.length;r++){const s=r*16,o=e[r];t[s]=o.elements[0],t[s+1]=o.elements[1],t[s+2]=o.elements[2],t[s+4]=o.elements[3],t[s+5]=o.elements[4],t[s+6]=o.elements[5],t[s+8]=o.elements[6],t[s+9]=o.elements[7],t[s+10]=o.elements[8],t[s+15]=1}else if(n==="mat4")for(let r=0;r<e.length;r++){const s=r*16,o=e[r];for(let a=0;a<o.elements.length;a++)t[s+a]=o.elements[a]}else for(let r=0;r<e.length;r++){const s=r*4,o=e[r];t[s]=o.x,t[s+1]=o.y,t[s+2]=o.z||0,t[s+3]=o.w||0}}setup(e){const t=this.array.length,n=this.elementType;let r=Float32Array;const s=this.paddedType,o=e.getTypeLength(s);return n.charAt(0)==="i"&&(r=Int32Array),n.charAt(0)==="u"&&(r=Uint32Array),this.value=new r(t*o),this.bufferCount=t,this.bufferType=s,super.setup(e)}element(e){return he(new TI(this,he(e)))}}const ar=(i,e)=>he(new MI(i,e)),mb=Je(0,"uint").setGroup($m("cameraIndex")).toVarying("v_cameraIndex"),Vs=Je("float").label("cameraNear").setGroup(qe).onRenderUpdate(({camera:i})=>i.near),Hs=Je("float").label("cameraFar").setGroup(qe).onRenderUpdate(({camera:i})=>i.far),ng=de(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const r of i.cameras)t.push(r.projectionMatrix);e=ar(t).setGroup(qe).label("cameraProjectionMatrices").element(mb).toVar("cameraProjectionMatrix")}else e=Je("mat4").label("cameraProjectionMatrix").setGroup(qe).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),jr=de(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const r of i.cameras)t.push(r.matrixWorldInverse);e=ar(t).setGroup(qe).label("cameraViewMatrices").element(mb).toVar("cameraViewMatrix")}else e=Je("mat4").label("cameraViewMatrix").setGroup(qe).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()(),EI=Je(new N).label("cameraPosition").setGroup(qe).onRenderUpdate(({camera:i},e)=>e.value.setFromMatrixPosition(i.matrixWorld)),Rv=new gc;class Ct extends tt{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=ct.OBJECT,this._uniformNode=new Sc(null)}getNodeType(){const e=this.scope;if(e===Ct.WORLD_MATRIX)return"mat4";if(e===Ct.POSITION||e===Ct.VIEW_POSITION||e===Ct.DIRECTION||e===Ct.SCALE)return"vec3";if(e===Ct.RADIUS)return"float"}update(e){const t=this.object3d,n=this._uniformNode,r=this.scope;if(r===Ct.WORLD_MATRIX)n.value=t.matrixWorld;else if(r===Ct.POSITION)n.value=n.value||new N,n.value.setFromMatrixPosition(t.matrixWorld);else if(r===Ct.SCALE)n.value=n.value||new N,n.value.setFromMatrixScale(t.matrixWorld);else if(r===Ct.DIRECTION)n.value=n.value||new N,t.getWorldDirection(n.value);else if(r===Ct.VIEW_POSITION){const s=e.camera;n.value=n.value||new N,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(s.matrixWorldInverse)}else if(r===Ct.RADIUS){const s=e.object.geometry;s.boundingSphere===null&&s.computeBoundingSphere(),Rv.copy(s.boundingSphere).applyMatrix4(t.matrixWorld),n.value=Rv.radius}}generate(e){const t=this.scope;return t===Ct.WORLD_MATRIX?this._uniformNode.nodeType="mat4":t===Ct.POSITION||t===Ct.VIEW_POSITION||t===Ct.DIRECTION||t===Ct.SCALE?this._uniformNode.nodeType="vec3":t===Ct.RADIUS&&(this._uniformNode.nodeType="float"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Ct.WORLD_MATRIX="worldMatrix";Ct.POSITION="position";Ct.SCALE="scale";Ct.VIEW_POSITION="viewPosition";Ct.DIRECTION="direction";Ct.RADIUS="radius";const wI=le(Ct,Ct.POSITION).setParameterLength(1);class Fi extends Ct{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}Fi.DIRECTION;const oo=ge(Fi,Fi.WORLD_MATRIX);Fi.POSITION;Fi.SCALE;Fi.VIEW_POSITION;Fi.RADIUS;const AI=Je(new Xe).onObjectUpdate(({object:i},e)=>e.value.getNormalMatrix(i.matrixWorld)),jh=de(i=>i.renderer.nodes.modelViewMatrix||RI).once()().toVar("modelViewMatrix"),RI=jr.mul(oo),Xh=Hr("position","vec3"),Un=Xh.toVarying("positionLocal"),Cv=Xh.toVarying("positionPrevious"),ac=oo.mul(Un).xyz.toVarying("v_positionWorld").context({needsPositionReassign:!0}),gb=Un.transformDirection(oo).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection").context({needsPositionReassign:!0}),hn=de(i=>i.context.setupPositionView(),"vec3").once()().toVarying("v_positionView").context({needsPositionReassign:!0}),jt=hn.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class CI extends tt{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:n}=e;return t.coordinateSystem===ei&&n.side===It?"false":e.getFrontFacing()}}const NI=ge(CI),Yh=Q(NI).mul(2).sub(1),_b=Hr("normal","vec3"),fr=de(i=>i.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),ee(0,1,0)):_b,"vec3").once()().toVar("normalLocal"),PI=hn.dFdx().cross(hn.dFdy()).normalize().toVar("normalFlat"),er=de(i=>{let e;return i.material.flatShading===!0?e=PI:e=tr(yb(fr),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),vb=tr(er.transformDirection(jr),"v_normalWorld").normalize().toVar("normalWorld"),un=de(i=>i.context.setupNormal().context({getUV:null}),"vec3").once()().mul(Yh).toVar("transformedNormalView"),ig=un.transformDirection(jr).toVar("transformedNormalWorld"),yl=de(i=>i.context.setupClearcoatNormal().context({getUV:null}),"vec3").once()().mul(Yh).toVar("transformedClearcoatNormalView"),DI=de(([i,e=oo])=>{const t=$n(e),n=i.div(ee(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(n).xyz}),yb=de(([i],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(i);const n=AI.mul(i);return jr.transformDirection(n)}),Nv=new ai,uf=new ft,LI=Je(0).onReference(({material:i})=>i).onObjectUpdate(({material:i})=>i.refractionRatio),hf=Je(1).onReference(({material:i})=>i).onObjectUpdate(function({material:i,scene:e}){return i.envMap?i.envMapIntensity:e.environmentIntensity}),xb=Je(new ft).onReference(function(i){return i.material}).onObjectUpdate(function({material:i,scene:e}){const t=e.environment!==null&&i.envMap===null?e.environmentRotation:i.envMapRotation;return t?(Nv.copy(t),uf.makeRotationFromEuler(Nv)):uf.identity(),uf}),II=jt.negate().reflect(un),UI=jt.negate().refract(un,LI),FI=II.transformDirection(jr).toVar("reflectVector"),BI=UI.transformDirection(jr).toVar("reflectVector");class OI extends wc{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,r=null){super(e,t,n,r),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Ii?FI:e.mapping===Ui?BI:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),ee(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return(e.renderer.coordinateSystem===gs||!n.isRenderTargetTexture)&&(t=ee(t.x.negate(),t.yz)),xb.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const lc=le(OI).setParameterLength(1,4).setName("cubeTexture");class kI extends bc{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,n,r)}}class rg extends tt{static get type(){return"ReferenceNode"}constructor(e,t,n=null,r=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=r,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=ct.OBJECT}element(e){return he(new kI(this,he(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=pb(null,e,this.count):Array.isArray(this.getValueFromReference())?t=ar(null,e):e==="texture"?t=yt(null):e==="cubeTexture"?t=lc(null):t=Je(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let r=1;r<t.length;r++)n=n[t[r]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Dt=(i,e,t)=>he(new rg(i,e,t)),Pv=(i,e,t,n)=>he(new rg(i,e,n,t));class GI extends rg{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const os=(i,e,t=null)=>he(new GI(i,e,t)),bb=de(i=>(i.geometry.hasAttribute("tangent")===!1&&i.geometry.computeTangents(),Hr("tangent","vec4")))(),sg=bb.xyz.toVar("tangentLocal"),Sb=jh.mul(Qe(sg,0)).xyz.toVarying("v_tangentView").normalize().toVar("tangentView"),zI=i=>i.mul(bb.w).xyz,VI=tr(zI(er.cross(Sb)),"v_bitangentView").normalize().toVar("bitangentView"),xl=$n(Sb,VI,er),HI=(()=>{let i=ea.cross(jt);return i=i.cross(ea).normalize(),i=kt(i,un,Os.mul(Pr.oneMinus()).oneMinus().pow2().pow2()).normalize(),i})(),WI=de(i=>{const{eye_pos:e,surf_norm:t,mapN:n,uv:r}=i,s=e.dFdx(),o=e.dFdy(),a=r.dFdx(),l=r.dFdy(),c=t,u=o.cross(c),h=c.cross(s),d=u.mul(a.x).add(h.mul(l.x)),f=u.mul(a.y).add(h.mul(l.y)),p=d.dot(d).max(f.dot(f)),_=Yh.mul(p.inverseSqrt());return qn(d.mul(n.x,_),f.mul(n.y,_),c.mul(n.z)).normalize()});class $I extends on{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Gr}setup(e){const{normalMapType:t,scaleNode:n}=this;let r=this.node.mul(2).sub(1);n!==null&&(r=ee(r.xy.mul(n),r.z));let s=null;return t===m0?s=yb(r):t===Gr&&(e.hasGeometryAttribute("tangent")===!0?s=xl.mul(r).normalize():s=WI({eye_pos:hn,surf_norm:er,mapN:r,uv:Ec()})),s}}const Dv=le($I).setParameterLength(1,2),qI=de(({textureNode:i,bumpScale:e})=>{const t=r=>i.cache().context({getUV:s=>r(s.uvNode||Ec()),forceUVContext:!0}),n=Q(t(r=>r));return _e(Q(t(r=>r.add(r.dFdx()))).sub(n),Q(t(r=>r.add(r.dFdy()))).sub(n)).mul(e)}),jI=de(i=>{const{surf_pos:e,surf_norm:t,dHdxy:n}=i,r=e.dFdx().normalize(),s=e.dFdy().normalize(),o=t,a=s.cross(o),l=o.cross(r),c=r.dot(a).mul(Yh),u=c.sign().mul(n.x.mul(a).add(n.y.mul(l)));return c.abs().mul(t).sub(u).normalize()});class XI extends on{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=qI({textureNode:this.textureNode,bumpScale:e});return jI({surf_pos:hn,surf_norm:er,dHdxy:t})}}const YI=le(XI).setParameterLength(1,2),Lv=new Map;class K extends tt{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=Lv.get(e);return n===void 0&&(n=os(e,t),Lv.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let r=null;if(n===K.COLOR){const s=t.color!==void 0?this.getColor(n):ee();t.map&&t.map.isTexture===!0?r=s.mul(this.getTexture("map")):r=s}else if(n===K.OPACITY){const s=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?r=s.mul(this.getTexture("alpha")):r=s}else if(n===K.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?r=this.getTexture("specular").r:r=Q(1);else if(n===K.SPECULAR_INTENSITY){const s=this.getFloat(n);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?r=s.mul(this.getTexture(n).a):r=s}else if(n===K.SPECULAR_COLOR){const s=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?r=s.mul(this.getTexture(n).rgb):r=s}else if(n===K.ROUGHNESS){const s=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?r=s.mul(this.getTexture(n).g):r=s}else if(n===K.METALNESS){const s=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?r=s.mul(this.getTexture(n).b):r=s}else if(n===K.EMISSIVE){const s=this.getFloat("emissiveIntensity"),o=this.getColor(n).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?r=o.mul(this.getTexture(n)):r=o}else if(n===K.NORMAL)t.normalMap?(r=Dv(this.getTexture("normal"),this.getCache("normalScale","vec2")),r.normalMapType=t.normalMapType):t.bumpMap?r=YI(this.getTexture("bump").r,this.getFloat("bumpScale")):r=er;else if(n===K.CLEARCOAT){const s=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?r=s.mul(this.getTexture(n).r):r=s}else if(n===K.CLEARCOAT_ROUGHNESS){const s=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?r=s.mul(this.getTexture(n).r):r=s}else if(n===K.CLEARCOAT_NORMAL)t.clearcoatNormalMap?r=Dv(this.getTexture(n),this.getCache(n+"Scale","vec2")):r=er;else if(n===K.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?r=s.mul(this.getTexture("sheenColor").rgb):r=s}else if(n===K.SHEEN_ROUGHNESS){const s=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?r=s.mul(this.getTexture(n).a):r=s,r=r.clamp(.07,1)}else if(n===K.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const s=this.getTexture(n);r=Wm(nl.x,nl.y,nl.y.negate(),nl.x).mul(s.rg.mul(2).sub(_e(1)).normalize().mul(s.b))}else r=nl;else if(n===K.IRIDESCENCE_THICKNESS){const s=Dt("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const o=Dt("0","float",t.iridescenceThicknessRange);r=s.sub(o).mul(this.getTexture(n).g).add(o)}else r=s}else if(n===K.TRANSMISSION){const s=this.getFloat(n);t.transmissionMap?r=s.mul(this.getTexture(n).r):r=s}else if(n===K.THICKNESS){const s=this.getFloat(n);t.thicknessMap?r=s.mul(this.getTexture(n).g):r=s}else if(n===K.IOR)r=this.getFloat(n);else if(n===K.LIGHT_MAP)r=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===K.AO)r=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const s=this.getNodeType(e);r=this.getCache(n,s)}return r}}K.ALPHA_TEST="alphaTest";K.COLOR="color";K.OPACITY="opacity";K.SHININESS="shininess";K.SPECULAR="specular";K.SPECULAR_STRENGTH="specularStrength";K.SPECULAR_INTENSITY="specularIntensity";K.SPECULAR_COLOR="specularColor";K.REFLECTIVITY="reflectivity";K.ROUGHNESS="roughness";K.METALNESS="metalness";K.NORMAL="normal";K.CLEARCOAT="clearcoat";K.CLEARCOAT_ROUGHNESS="clearcoatRoughness";K.CLEARCOAT_NORMAL="clearcoatNormal";K.EMISSIVE="emissive";K.ROTATION="rotation";K.SHEEN="sheen";K.SHEEN_ROUGHNESS="sheenRoughness";K.ANISOTROPY="anisotropy";K.IRIDESCENCE="iridescence";K.IRIDESCENCE_IOR="iridescenceIOR";K.IRIDESCENCE_THICKNESS="iridescenceThickness";K.IOR="ior";K.TRANSMISSION="transmission";K.THICKNESS="thickness";K.ATTENUATION_DISTANCE="attenuationDistance";K.ATTENUATION_COLOR="attenuationColor";K.LINE_SCALE="scale";K.LINE_DASH_SIZE="dashSize";K.LINE_GAP_SIZE="gapSize";K.LINE_WIDTH="linewidth";K.LINE_DASH_OFFSET="dashOffset";K.POINT_SIZE="size";K.DISPERSION="dispersion";K.LIGHT_MAP="light";K.AO="ao";const KI=ge(K,K.ALPHA_TEST),ZI=ge(K,K.COLOR),QI=ge(K,K.SHININESS),JI=ge(K,K.EMISSIVE),Tb=ge(K,K.OPACITY),eU=ge(K,K.SPECULAR),Iv=ge(K,K.SPECULAR_INTENSITY),tU=ge(K,K.SPECULAR_COLOR),Ku=ge(K,K.SPECULAR_STRENGTH),df=ge(K,K.REFLECTIVITY),nU=ge(K,K.ROUGHNESS),iU=ge(K,K.METALNESS),rU=ge(K,K.NORMAL),sU=ge(K,K.CLEARCOAT),oU=ge(K,K.CLEARCOAT_ROUGHNESS),aU=ge(K,K.CLEARCOAT_NORMAL),lU=ge(K,K.ROTATION),cU=ge(K,K.SHEEN),uU=ge(K,K.SHEEN_ROUGHNESS),hU=ge(K,K.ANISOTROPY),dU=ge(K,K.IRIDESCENCE),fU=ge(K,K.IRIDESCENCE_IOR),pU=ge(K,K.IRIDESCENCE_THICKNESS),mU=ge(K,K.TRANSMISSION),gU=ge(K,K.THICKNESS),_U=ge(K,K.IOR),vU=ge(K,K.ATTENUATION_DISTANCE),yU=ge(K,K.ATTENUATION_COLOR),xU=ge(K,K.LINE_SCALE),bU=ge(K,K.LINE_DASH_SIZE),SU=ge(K,K.LINE_GAP_SIZE);K.LINE_WIDTH;const TU=ge(K,K.LINE_DASH_OFFSET),MU=ge(K,K.POINT_SIZE),EU=ge(K,K.DISPERSION),Mb=ge(K,K.LIGHT_MAP),wU=ge(K,K.AO),nl=Je(new ae).onReference(function(i){return i.material}).onRenderUpdate(function({material:i}){this.value.set(i.anisotropy*Math.cos(i.anisotropyRotation),i.anisotropy*Math.sin(i.anisotropyRotation))}),Eb=de(i=>i.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class Gt extends tt{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let r;if(n===Gt.VERTEX)r=e.getVertexIndex();else if(n===Gt.INSTANCE)r=e.getInstanceIndex();else if(n===Gt.DRAW)r=e.getDrawIndex();else if(n===Gt.INVOCATION_LOCAL)r=e.getInvocationLocalIndex();else if(n===Gt.INVOCATION_SUBGROUP)r=e.getInvocationSubgroupIndex();else if(n===Gt.SUBGROUP)r=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=r:s=tr(this).build(e,t),s}}Gt.VERTEX="vertex";Gt.INSTANCE="instance";Gt.SUBGROUP="subgroup";Gt.INVOCATION_LOCAL="invocationLocal";Gt.INVOCATION_SUBGROUP="invocationSubgroup";Gt.DRAW="draw";const AU=ge(Gt,Gt.VERTEX),og=ge(Gt,Gt.INSTANCE);Gt.SUBGROUP;Gt.INVOCATION_SUBGROUP;Gt.INVOCATION_LOCAL;const RU=ge(Gt,Gt.DRAW);class CU extends tt{static get type(){return"InstanceNode"}constructor(e,t,n){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=n,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=ct.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:n,instanceColor:r}=this;let{instanceMatrixNode:s,instanceColorNode:o}=this;if(s===null){if(t<=1e3)s=pb(n.array,"mat4",Math.max(t,1)).element(og);else{const l=new pE(n.array,16,1);this.buffer=l;const c=n.usage===Vo?Av:wv,u=[c(l,"vec4",16,0),c(l,"vec4",16,4),c(l,"vec4",16,8),c(l,"vec4",16,12)];s=Jo(...u)}this.instanceMatrixNode=s}if(r&&o===null){const l=new wM(r.array,3),c=r.usage===Vo?Av:wv;this.bufferColor=l,o=ee(c(l,"vec3",3,0)),this.instanceColorNode=o}const a=s.mul(Un).xyz;if(Un.assign(a),e.hasGeometryAttribute("normal")){const l=DI(fr,s);fr.assign(l)}this.instanceColorNode!==null&&dh("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==Vo&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==Vo&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}class NU extends CU{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:n,instanceColor:r}=e;super(t,n,r),this.instancedMesh=e}}const PU=le(NU).setParameterLength(1);class DU extends tt{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=og:this.batchingIdNode=RU);const n=de(([p])=>{const _=Xt(Nl($i(this.batchMesh._indirectTexture),0).x),g=Xt(p).mod(_),m=Xt(p).div(_);return $i(this.batchMesh._indirectTexture,Ar(g,m)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Xt(this.batchingIdNode)),r=this.batchMesh._matricesTexture,s=Xt(Nl($i(r),0).x),o=Q(n).mul(4).toInt().toVar(),a=o.mod(s),l=o.div(s),c=Jo($i(r,Ar(a,l)),$i(r,Ar(a.add(1),l)),$i(r,Ar(a.add(2),l)),$i(r,Ar(a.add(3),l))),u=this.batchMesh._colorsTexture;if(u!==null){const _=de(([g])=>{const m=Xt(Nl($i(u),0).x),v=g,x=v.mod(m),y=v.div(m);return $i(u,Ar(x,y)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);dh("vec3","vBatchColor").assign(_)}const h=$n(c);Un.assign(c.mul(Un));const d=fr.div(ee(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;fr.assign(f),e.hasGeometryAttribute("tangent")&&sg.mulAssign(h)}}const LU=le(DU).setParameterLength(1),Uv=new WeakMap;class IU extends tt{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=ct.OBJECT,this.skinIndexNode=Hr("skinIndex","uvec4"),this.skinWeightNode=Hr("skinWeight","vec4"),this.bindMatrixNode=Dt("bindMatrix","mat4"),this.bindMatrixInverseNode=Dt("bindMatrixInverse","mat4"),this.boneMatricesNode=Pv("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=Un,this.toPositionNode=Un,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:n,skinWeightNode:r,bindMatrixNode:s,bindMatrixInverseNode:o}=this,a=e.element(n.x),l=e.element(n.y),c=e.element(n.z),u=e.element(n.w),h=s.mul(t),d=qn(a.mul(r.x).mul(h),l.mul(r.y).mul(h),c.mul(r.z).mul(h),u.mul(r.w).mul(h));return o.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=fr){const{skinIndexNode:n,skinWeightNode:r,bindMatrixNode:s,bindMatrixInverseNode:o}=this,a=e.element(n.x),l=e.element(n.y),c=e.element(n.z),u=e.element(n.w);let h=qn(r.x.mul(a),r.y.mul(l),r.z.mul(c),r.w.mul(u));return h=o.mul(h).mul(s),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Pv("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Cv)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||Ox(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&Cv.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const n=this.getSkinnedNormal();fr.assign(n),e.hasGeometryAttribute("tangent")&&sg.assign(n)}return t}generate(e,t){if(t!=="void")return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;Uv.get(t)!==e.frameId&&(Uv.set(t,e.frameId),this.previousBoneMatricesNode!==null&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const UU=i=>he(new IU(i));class FU extends tt{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const n={};for(let s=0,o=this.params.length-1;s<o;s++){const a=this.params[s],l=a.isNode!==!0&&a.name||this.getVarName(s),c=a.isNode!==!0&&a.type||"int";n[l]=oc(l,c)}const r=e.addStack();return t.returnsNode=this.params[this.params.length-1](n,r,e),t.stackNode=r,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),n=this.params,r=t.stackNode;for(let a=0,l=n.length-1;a<l;a++){const c=n[a];let u=!1,h=null,d=null,f=null,p=null,_=null,g=null;c.isNode?c.getNodeType(e)==="bool"?(u=!0,p="bool",d=c.build(e,p)):(p="int",f=this.getVarName(a),h="0",d=c.build(e,p),_="<"):(p=c.type||"int",f=c.name||this.getVarName(a),h=c.start,d=c.end,_=c.condition,g=c.update,typeof h=="number"?h=e.generateConst(p,h):h&&h.isNode&&(h=h.build(e,p)),typeof d=="number"?d=e.generateConst(p,d):d&&d.isNode&&(d=d.build(e,p)),h!==void 0&&d===void 0?(h=h+" - 1",d="0",_=">="):d!==void 0&&h===void 0&&(h="0",_="<"),_===void 0&&(Number(h)>Number(d)?_=">=":_="<"));let m;if(u)m=`while ( ${d} )`;else{const v={start:h,end:d},x=v.start,y=v.end;let T="",b="",M="";g||(p==="int"||p==="uint"?_.includes("<")?g="++":g="--":_.includes("<")?g="+= 1.":g="-= 1."),T+=e.getVar(p,f)+" = "+x,b+=f+" "+_+" "+y,M+=f+" "+g,m=`for ( ${T}; ${b}; ${M} )`}e.addFlowCode((a===0?`
`:"")+e.tab+m+` {

`).addFlowTab()}const s=r.build(e,"void"),o=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let a=0,l=this.params.length-1;a<l;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),o}}const Yi=(...i)=>he(new FU(Qo(i,"int"))).append(),BU=()=>oc("break").append(),ff=new WeakMap,mi=new We,Fv=de(({bufferMap:i,influence:e,stride:t,width:n,depth:r,offset:s})=>{const o=Xt(AU).mul(t).add(s),a=o.div(n),l=o.sub(a.mul(n));return $i(i,Ar(l,a)).depth(r).xyz.mul(e)});function OU(i){const e=i.morphAttributes.position!==void 0,t=i.morphAttributes.normal!==void 0,n=i.morphAttributes.color!==void 0,r=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,s=r!==void 0?r.length:0;let o=ff.get(i);if(o===void 0||o.count!==s){let m=function(){_.dispose(),ff.delete(i),i.removeEventListener("dispose",m)};o!==void 0&&o.texture.dispose();const a=i.morphAttributes.position||[],l=i.morphAttributes.normal||[],c=i.morphAttributes.color||[];let u=0;e===!0&&(u=1),t===!0&&(u=2),n===!0&&(u=3);let h=i.attributes.position.count*u,d=1;const f=4096;h>f&&(d=Math.ceil(h/f),h=f);const p=new Float32Array(h*d*4*s),_=new pm(p,h,d,s);_.type=Jt,_.needsUpdate=!0;const g=u*4;for(let v=0;v<s;v++){const x=a[v],y=l[v],T=c[v],b=h*d*4*v;for(let M=0;M<x.count;M++){const w=M*g;e===!0&&(mi.fromBufferAttribute(x,M),p[b+w+0]=mi.x,p[b+w+1]=mi.y,p[b+w+2]=mi.z,p[b+w+3]=0),t===!0&&(mi.fromBufferAttribute(y,M),p[b+w+4]=mi.x,p[b+w+5]=mi.y,p[b+w+6]=mi.z,p[b+w+7]=0),n===!0&&(mi.fromBufferAttribute(T,M),p[b+w+8]=mi.x,p[b+w+9]=mi.y,p[b+w+10]=mi.z,p[b+w+11]=T.itemSize===4?mi.w:1)}}o={count:s,texture:_,stride:u,size:new ae(h,d)},ff.set(i,o),i.addEventListener("dispose",m)}return o}class kU extends tt{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Je(1),this.updateType=ct.OBJECT}setup(e){const{geometry:t}=e,n=t.morphAttributes.position!==void 0,r=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=s!==void 0?s.length:0,{texture:a,stride:l,size:c}=OU(t);n===!0&&Un.mulAssign(this.morphBaseInfluence),r===!0&&fr.mulAssign(this.morphBaseInfluence);const u=Xt(c.width);Yi(o,({i:h})=>{const d=Q(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign($i(this.mesh.morphTexture,Ar(Xt(h).add(1),Xt(og))).r):d.assign(Dt("morphTargetInfluences","float").element(h).toVar()),sn(d.notEqual(0),()=>{n===!0&&Un.addAssign(Fv({bufferMap:a,influence:d,stride:l,width:u,depth:h,offset:Xt(0)})),r===!0&&fr.addAssign(Fv({bufferMap:a,influence:d,stride:l,width:u,depth:h,offset:Xt(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,n)=>t+n,0)}}const GU=le(kU).setParameterLength(1);class Fa extends tt{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class zU extends Fa{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class VU extends ub{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,r=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=r,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,n=ee().toVar("directDiffuse"),r=ee().toVar("directSpecular"),s=ee().toVar("indirectDiffuse"),o=ee().toVar("indirectSpecular"),a={directDiffuse:n,directSpecular:r,indirectDiffuse:s,indirectSpecular:o};return{radiance:ee().toVar("radiance"),irradiance:ee().toVar("irradiance"),iblIrradiance:ee().toVar("iblIrradiance"),ambientOcclusion:Q(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const HU=le(VU);class WU extends Fa{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let il,rl;class cn extends tt{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===cn.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=ct.NONE;return(this.scope===cn.SIZE||this.scope===cn.VIEWPORT)&&(e=ct.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===cn.VIEWPORT?t!==null?rl.copy(t.viewport):(e.getViewport(rl),rl.multiplyScalar(e.getPixelRatio())):t!==null?(il.width=t.width,il.height=t.height):e.getDrawingBufferSize(il)}setup(){const e=this.scope;let t=null;return e===cn.SIZE?t=Je(il||(il=new ae)):e===cn.VIEWPORT?t=Je(rl||(rl=new We)):t=_e(Kh.div(bp)),t}generate(e){if(this.scope===cn.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(bp).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}cn.COORDINATE="coordinate";cn.VIEWPORT="viewport";cn.SIZE="size";cn.UV="uv";const cc=ge(cn,cn.UV),bp=ge(cn,cn.SIZE),Kh=ge(cn,cn.COORDINATE),Pl=ge(cn,cn.VIEWPORT);Pl.zw;Pl.xy;const sl=new ae;class wb extends wc{static get type(){return"ViewportTextureNode"}constructor(e=cc,t=null,n=null){n===null&&(n=new PM,n.minFilter=Jn),super(n,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=ct.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(sl);const n=this.value;(n.image.width!==sl.width||n.image.height!==sl.height)&&(n.image.width=sl.width,n.image.height=sl.height,n.needsUpdate=!0);const r=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const Ab=le(wb,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let pf=null;class $U extends wb{static get type(){return"ViewportDepthTextureNode"}constructor(e=cc,t=null){pf===null&&(pf=new Di),super(e,t,pf)}}const qU=le($U).setParameterLength(0,2);class ni extends tt{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===ni.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let r=null;if(t===ni.DEPTH_BASE)n!==null&&(r=Nb().assign(n));else if(t===ni.DEPTH)e.isPerspectiveCamera?r=jU(hn.z,Vs,Hs):r=Dl(hn.z,Vs,Hs);else if(t===ni.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){const s=Rb(n,Vs,Hs);r=Dl(s,Vs,Hs)}else r=n;else r=Dl(hn.z,Vs,Hs);return r}}ni.DEPTH_BASE="depthBase";ni.DEPTH="depth";ni.LINEAR_DEPTH="linearDepth";const Dl=(i,e,t)=>i.add(e).div(e.sub(t)),jU=(i,e,t)=>e.add(i).mul(t).div(t.sub(e).mul(i)),Rb=(i,e,t)=>e.mul(t).div(t.sub(e).mul(i).sub(t)),Cb=(i,e,t)=>{e=e.max(1e-6).toVar();const n=kr(i.negate().div(e)),r=kr(t.div(e));return n.div(r)},Nb=le(ni,ni.DEPTH_BASE),Pb=ge(ni,ni.DEPTH),XU=le(ni,ni.LINEAR_DEPTH).setParameterLength(0,1);qU();Pb.assign=i=>Nb(i);class YU extends tt{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const KU=le(YU).setParameterLength(1);class Li extends tt{static get type(){return"ClippingNode"}constructor(e=Li.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:n,unionPlanes:r}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Li.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,r):this.scope===Li.HARDWARE?this.setupHardwareClipping(r,e):this.setupDefault(n,r)}setupAlphaToCoverage(e,t){return de(()=>{const n=Q().toVar("distanceToPlane"),r=Q().toVar("distanceToGradient"),s=Q(1).toVar("clipOpacity"),o=t.length;if(this.hardwareClipping===!1&&o>0){const l=ar(t);Yi(o,({i:c})=>{const u=l.element(c);n.assign(hn.dot(u.xyz).negate().add(u.w)),r.assign(n.fwidth().div(2)),s.mulAssign(vs(r.negate(),r,n))})}const a=e.length;if(a>0){const l=ar(e),c=Q(1).toVar("intersectionClipOpacity");Yi(a,({i:u})=>{const h=l.element(u);n.assign(hn.dot(h.xyz).negate().add(h.w)),r.assign(n.fwidth().div(2)),c.mulAssign(vs(r.negate(),r,n).oneMinus())}),s.mulAssign(c.oneMinus())}bt.a.mulAssign(s),bt.a.equal(0).discard()})()}setupDefault(e,t){return de(()=>{const n=t.length;if(this.hardwareClipping===!1&&n>0){const s=ar(t);Yi(n,({i:o})=>{const a=s.element(o);hn.dot(a.xyz).greaterThan(a.w).discard()})}const r=e.length;if(r>0){const s=ar(e),o=Wx(!0).toVar("clipped");Yi(r,({i:a})=>{const l=s.element(a);o.assign(hn.dot(l.xyz).greaterThan(l.w).and(o))}),o.discard()}})()}setupHardwareClipping(e,t){const n=e.length;return t.enableHardwareClipping(n),de(()=>{const r=ar(e),s=KU(t.getClipDistance());Yi(n,({i:o})=>{const a=r.element(o),l=hn.dot(a.xyz).sub(a.w).negate();s.element(o).assign(l)})})()}}Li.ALPHA_TO_COVERAGE="alphaToCoverage";Li.DEFAULT="default";Li.HARDWARE="hardware";const ZU=()=>he(new Li),QU=()=>he(new Li(Li.ALPHA_TO_COVERAGE)),JU=()=>he(new Li(Li.HARDWARE)),eF=.05,Bv=de(([i])=>xs(dt(1e4,Xi(dt(17,i.x).add(dt(.1,i.y)))).mul(qn(.1,Ri(Xi(dt(13,i.y).add(i.x))))))),Ov=de(([i])=>Bv(_e(Bv(i.xy),i.z))),tF=de(([i])=>{const e=li(ds(ib(i.xyz)),ds(rb(i.xyz))),t=Q(1).div(Q(eF).mul(e)).toVar("pixScale"),n=_e(ic(Qs(kr(t))),ic(Ym(kr(t)))),r=_e(Ov(Qs(n.x.mul(i.xyz))),Ov(Qs(n.y.mul(i.xyz)))),s=xs(kr(t)),o=qn(dt(s.oneMinus(),r.x),dt(s,r.y)),a=sc(s,s.oneMinus()),l=ee(o.mul(o).div(dt(2,a).mul(Qn(1,a))),o.sub(dt(.5,a)).div(Qn(1,a)),Qn(1,Qn(1,o).mul(Qn(1,o)).div(dt(2,a).mul(Qn(1,a))))),c=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(l.x,l.y),l.z);return Vr(c,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class yn extends Bn{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+Fx(this)}build(e){this.setup(e)}setupObserver(e){return new JD(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,n=t.getRenderTarget();e.addStack();const r=this.vertexNode||this.setupVertex(e);e.stack.outputNode=r,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let s;const o=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(n!==null?n.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const a=this.setupLighting(e);o!==null&&e.stack.add(o);const l=Qe(a,bt.a).max(0);s=this.setupOutput(e,l),Cl.assign(s);const c=this.outputNode!==null;if(c&&(s=this.outputNode),n!==null){const u=t.getMRT(),h=this.mrtNode;u!==null?(c&&Cl.assign(s),s=u,h!==null&&(s=u.merge(h))):h!==null&&(s=h)}}else{let a=this.fragmentNode;a.isOutputStructNode!==!0&&(a=Qe(a)),s=this.setupOutput(e,a)}e.stack.outputNode=s,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:n}=e.clippingContext;let r=null;if(t.length>0||n.length>0){const s=e.renderer.samples;this.alphaToCoverage&&s>1?r=QU():e.stack.add(ZU())}return r}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(JU()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:n}=e;let r=this.depthNode;if(r===null){const s=t.getMRT();s&&s.has("depth")?r=s.get("depth"):t.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?r=Cb(hn.z,Vs,Hs):r=Dl(hn.z,Vs,Hs))}r!==null&&Pb.assign(r).append()}setupPositionView(){return jh.mul(Un).xyz}setupModelViewProjection(){return ng.mul(hn)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),Eb}setupPosition(e){const{object:t,geometry:n}=e;if((n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&GU(t).append(),t.isSkinnedMesh===!0&&UU(t).append(),this.displacementMap){const r=os("displacementMap","texture"),s=os("displacementScale","float"),o=os("displacementBias","float");Un.addAssign(fr.normalize().mul(r.x.mul(s).add(o)))}return t.isBatchedMesh&&LU(t).append(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&PU(t).append(),this.positionNode!==null&&Un.assign(this.positionNode.context({isPositionNodeInput:!0})),Un}setupDiffuseColor({object:e,geometry:t}){let n=this.colorNode?Qe(this.colorNode):ZI;this.vertexColors===!0&&t.hasAttribute("color")&&(n=Qe(n.xyz.mul(Hr("color","vec3")),n.a)),e.instanceColor&&(n=dh("vec3","vInstanceColor").mul(n)),e.isBatchedMesh&&e._colorsTexture&&(n=dh("vec3","vBatchColor").mul(n)),bt.assign(n);const r=this.opacityNode?Q(this.opacityNode):Tb;if(bt.a.assign(bt.a.mul(r)),this.alphaTestNode!==null||this.alphaTest>0){const s=this.alphaTestNode!==null?Q(this.alphaTestNode):KI;bt.a.lessThanEqual(s).discard()}this.alphaHash===!0&&bt.a.lessThan(tF(Un)).discard(),this.transparent===!1&&this.blending===Pi&&this.alphaToCoverage===!1&&bt.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?ee(0):bt.rgb}setupNormal(){return this.normalNode?ee(this.normalNode):rU}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?os("envMap","cubeTexture"):os("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new WU(Mb)),t}setupLights(e){const t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);const r=this.setupLightMap(e);if(r&&r.isLightingNode&&t.push(r),this.aoNode!==null||e.material.aoMap){const o=this.aoNode!==null?this.aoNode:wU;t.push(new zU(o))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=e.renderer.lighting.createNode([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:n,backdropAlphaNode:r,emissiveNode:s}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let l=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const c=this.setupLightingModel(e)||null;l=HU(a,c,n,r)}else n!==null&&(l=ee(r!==null?kt(l,n,r):n));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(Mv.assign(ee(s||JI)),l=l.add(Mv)),l}setupFog(e,t){const n=e.fogNode;return n&&(Cl.assign(t),t=Qe(n)),t}setupOutput(e,t){return this.fog===!0&&(t=this.setupFog(e,t)),t}setDefaultValues(e){for(const n in e){const r=e[n];this[n]===void 0&&(this[n]=r,r&&r.clone&&(this[n]=r.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const n in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&t[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const n=Bn.prototype.toJSON.call(this,e),r=ch(this);n.inputNodes={};for(const{property:o,childNode:a}of r)n.inputNodes[o]=a.toJSON(e).uuid;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}if(t){const o=s(e.textures),a=s(e.images),l=s(e.nodes);o.length>0&&(n.textures=o),a.length>0&&(n.images=a),l.length>0&&(n.nodes=l)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowPositionNode=e.shadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const nF=new Lh;class iF extends yn{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(nF),this.setValues(e)}}const rF=new nE;class sF extends yn{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(rF),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?Q(this.offsetNode):TU,t=this.dashScaleNode?Q(this.dashScaleNode):xU,n=this.dashSizeNode?Q(this.dashSizeNode):bU,r=this.gapSizeNode?Q(this.gapSizeNode):SU;cf.assign(n),Ev.assign(r);const s=tr(Hr("lineDistance").mul(t));(e?s.add(e):s).mod(cf.add(Ev)).greaterThan(cf).discard()}}const oF=i=>he(i).mul(.5).add(.5),aF=new QM;class lF extends yn{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(aF),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Q(this.opacityNode):Tb;bt.assign(eg(Qe(oF(un),e),Ie))}}class cF extends on{static get type(){return"EquirectUVNode"}constructor(e=gb){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan(e.x).mul(1/(Math.PI*2)).add(.5),n=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return _e(t,n)}}const Db=le(cF).setParameterLength(0,1);class Lb extends S0{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const n=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s=new co(5,5,5),o=Db(gb),a=new yn;a.colorNode=yt(t,o,0),a.side=It,a.blending=si;const l=new tn(s,a),c=new Nh;c.add(l),t.minFilter===Jn&&(t.minFilter=en);const u=new b0(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,c),e.setMRT(h),t.minFilter=n,t.currentGenerateMipmaps=r,l.geometry.dispose(),l.material.dispose(),this}}const Ll=new WeakMap;class uF extends on{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=lc(null);const t=new Ch;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=ct.RENDER}updateBefore(e){const{renderer:t,material:n}=e,r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const s=r.isTextureNode?r.value:n[r.property];if(s&&s.isTexture){const o=s.mapping;if(o===ps||o===ms){if(Ll.has(s)){const a=Ll.get(s);kv(a,s.mapping),this._cubeTexture=a}else{const a=s.image;if(hF(a)){const l=new Lb(a.height);l.fromEquirectangularTexture(t,s),kv(l.texture,s.mapping),this._cubeTexture=l.texture,Ll.set(s,l.texture),s.addEventListener("dispose",Ib)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function hF(i){return i==null?!1:i.height>0}function Ib(i){const e=i.target;e.removeEventListener("dispose",Ib);const t=Ll.get(e);t!==void 0&&(Ll.delete(e),t.dispose())}function kv(i,e){e===ps?i.mapping=Ii:e===ms&&(i.mapping=Ui)}const Ub=le(uF).setParameterLength(1);class ag extends Fa{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=Ub(this.envNode)}}class dF extends Fa{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=Q(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class Zh{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Fb extends Zh{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,n=e.reflectedLight,r=e.irradianceLightMap;n.indirectDiffuse.assign(Qe(0)),r?n.indirectDiffuse.addAssign(r):n.indirectDiffuse.addAssign(Qe(1,1,1,0)),n.indirectDiffuse.mulAssign(t),n.indirectDiffuse.mulAssign(bt.rgb)}finish(e){const{material:t,context:n}=e,r=n.outgoingLight,s=e.context.environment;if(s)switch(t.combine){case fc:r.rgb.assign(kt(r.rgb,r.rgb.mul(s.rgb),Ku.mul(df)));break;case a0:r.rgb.assign(kt(r.rgb,s.rgb,Ku.mul(df)));break;case l0:r.rgb.addAssign(s.rgb.mul(Ku.mul(df)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",t.combine);break}}}const fF=new or;class pF extends yn{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(fF),this.setValues(e)}setupNormal(){return er}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ag(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new dF(Mb)),t}setupOutgoingLight(){return bt.rgb}setupLightingModel(){return new Fb}}const uc=de(({f0:i,f90:e,dotVH:t})=>{const n=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return i.mul(n.oneMinus()).add(e.mul(n))}),Ma=de(i=>i.diffuseColor.mul(1/Math.PI)),mF=()=>Q(.25),gF=de(({dotNH:i})=>yp.mul(Q(.5)).add(1).mul(Q(1/Math.PI)).mul(i.pow(yp))),_F=de(({lightDirection:i})=>{const e=i.add(jt).normalize(),t=un.dot(e).clamp(),n=jt.dot(e).clamp(),r=uc({f0:_i,f90:1,dotVH:n}),s=mF(),o=gF({dotNH:t});return r.mul(s).mul(o)});class Bb extends Fb{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const s=un.dot(e).clamp().mul(t);n.directDiffuse.addAssign(s.mul(Ma({diffuseColor:bt.rgb}))),this.specular===!0&&n.directSpecular.addAssign(s.mul(_F({lightDirection:e})).mul(Ku))}indirect(e){const{ambientOcclusion:t,irradiance:n,reflectedLight:r}=e.context;r.indirectDiffuse.addAssign(n.mul(Ma({diffuseColor:bt}))),r.indirectDiffuse.mulAssign(t)}}const vF=new Mm;class yF extends yn{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(vF),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ag(t):null}setupLightingModel(){return new Bb(!1)}}const xF=new KM;class bF extends yn{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(xF),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ag(t):null}setupLightingModel(){return new Bb}setupVariants(){const e=(this.shininessNode?Q(this.shininessNode):QI).max(1e-4);yp.assign(e);const t=this.specularNode||eU;_i.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const SF=de(i=>{if(i.geometry.hasAttribute("normal")===!1)return Q(0);const e=er.dFdx().abs().max(er.dFdy().abs());return e.x.max(e.y).max(e.z)}),Ob=de(i=>{const{roughness:e}=i,t=SF();let n=e.max(.0525);return n=n.add(t),n=n.min(1),n}),TF=de(({alpha:i,dotNL:e,dotNV:t})=>{const n=i.pow2(),r=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt()),s=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return zr(.5,r.add(s).max(l2))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),MF=de(({alphaT:i,alphaB:e,dotTV:t,dotBV:n,dotTL:r,dotBL:s,dotNV:o,dotNL:a})=>{const l=a.mul(ee(i.mul(t),e.mul(n),o).length()),c=o.mul(ee(i.mul(r),e.mul(s),a).length());return zr(.5,l.add(c)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),EF=de(({alpha:i,dotNH:e})=>{const t=i.pow2(),n=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),wF=Q(1/Math.PI),AF=de(({alphaT:i,alphaB:e,dotNH:t,dotTH:n,dotBH:r})=>{const s=i.mul(e),o=ee(e.mul(n),i.mul(r),s.mul(t)),a=o.dot(o),l=s.div(a);return wF.mul(s.mul(l.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Gv=de(i=>{const{lightDirection:e,f0:t,f90:n,roughness:r,f:s,USE_IRIDESCENCE:o,USE_ANISOTROPY:a}=i,l=i.normalView||un,c=r.pow2(),u=e.add(jt).normalize(),h=l.dot(e).clamp(),d=l.dot(jt).clamp(),f=l.dot(u).clamp(),p=jt.dot(u).clamp();let _=uc({f0:t,f90:n,dotVH:p}),g,m;if(Sv(o)&&(_=jm.mix(_,s)),Sv(a)){const v=$u.dot(e),x=$u.dot(jt),y=$u.dot(u),T=ea.dot(e),b=ea.dot(jt),M=ea.dot(u);g=MF({alphaT:vp,alphaB:c,dotTV:x,dotBV:b,dotTL:v,dotBL:T,dotNV:d,dotNL:h}),m=AF({alphaT:vp,alphaB:c,dotNH:f,dotTH:y,dotBH:M})}else g=TF({alpha:c,dotNL:h,dotNV:d}),m=EF({alpha:c,dotNH:f});return _.mul(g).mul(m)}),kb=de(({roughness:i,dotNV:e})=>{const t=Qe(-1,-.0275,-.572,.022),n=Qe(1,.0425,1.04,-.04),r=i.mul(t).add(n),s=r.x.mul(r.x).min(e.mul(-9.28).exp2()).mul(r.x).add(r.y);return _e(-1.04,1.04).mul(s).add(r.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Gb=de(i=>{const{dotNV:e,specularColor:t,specularF90:n,roughness:r}=i,s=kb({dotNV:e,roughness:r});return t.mul(s.x).add(n.mul(s.y))}),RF=de(({f:i,f90:e,dotVH:t})=>{const n=t.oneMinus().saturate(),r=n.mul(n),s=n.mul(r,r).clamp(0,.9999);return i.sub(ee(e).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),CF=de(({roughness:i,dotNH:e})=>{const t=i.pow2(),n=Q(1).div(t),s=e.pow2().oneMinus().max(.0078125);return Q(2).add(n).mul(s.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),NF=de(({dotNV:i,dotNL:e})=>Q(1).div(Q(4).mul(e.add(i).sub(e.mul(i))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),PF=de(({lightDirection:i})=>{const e=i.add(jt).normalize(),t=un.dot(i).clamp(),n=un.dot(jt).clamp(),r=un.dot(e).clamp(),s=CF({roughness:qm,dotNH:r}),o=NF({dotNV:n,dotNL:t});return $o.mul(s).mul(o)}),DF=de(({N:i,V:e,roughness:t})=>{const s=.0078125,o=i.dot(e).saturate(),a=_e(t,o.oneMinus().sqrt());return a.assign(a.mul(.984375).add(s)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),LF=de(({f:i})=>{const e=i.length();return li(e.mul(e).add(i.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),_u=de(({v1:i,v2:e})=>{const t=i.dot(e),n=t.abs().toVar(),r=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),s=n.add(4.1616724).mul(n).add(3.417594).toVar(),o=r.div(s),a=t.greaterThan(0).select(o,li(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return i.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),zv=de(({N:i,V:e,P:t,mInv:n,p0:r,p1:s,p2:o,p3:a})=>{const l=s.sub(r).toVar(),c=a.sub(r).toVar(),u=l.cross(c),h=ee().toVar();return sn(u.dot(t.sub(r)).greaterThanEqual(0),()=>{const d=e.sub(i.mul(e.dot(i))).normalize(),f=i.cross(d).negate(),p=n.mul($n(d,f,i).transpose()).toVar(),_=p.mul(r.sub(t)).normalize().toVar(),g=p.mul(s.sub(t)).normalize().toVar(),m=p.mul(o.sub(t)).normalize().toVar(),v=p.mul(a.sub(t)).normalize().toVar(),x=ee(0).toVar();x.addAssign(_u({v1:_,v2:g})),x.addAssign(_u({v1:g,v2:m})),x.addAssign(_u({v1:m,v2:v})),x.addAssign(_u({v1:v,v2:_})),h.assign(ee(LF({f:x})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Qh=1/6,zb=i=>dt(Qh,dt(i,dt(i,i.negate().add(3)).sub(3)).add(1)),Sp=i=>dt(Qh,dt(i,dt(i,dt(3,i).sub(6))).add(4)),Vb=i=>dt(Qh,dt(i,dt(i,dt(-3,i).add(3)).add(3)).add(1)),Tp=i=>dt(Qh,$h(i,3)),Vv=i=>zb(i).add(Sp(i)),Hv=i=>Vb(i).add(Tp(i)),Wv=i=>qn(-1,Sp(i).div(zb(i).add(Sp(i)))),$v=i=>qn(1,Tp(i).div(Vb(i).add(Tp(i)))),qv=(i,e,t)=>{const n=i.uvNode,r=dt(n,e.zw).add(.5),s=Qs(r),o=xs(r),a=Vv(o.x),l=Hv(o.x),c=Wv(o.x),u=$v(o.x),h=Wv(o.y),d=$v(o.y),f=_e(s.x.add(c),s.y.add(h)).sub(.5).mul(e.xy),p=_e(s.x.add(u),s.y.add(h)).sub(.5).mul(e.xy),_=_e(s.x.add(c),s.y.add(d)).sub(.5).mul(e.xy),g=_e(s.x.add(u),s.y.add(d)).sub(.5).mul(e.xy),m=Vv(o.y).mul(qn(a.mul(i.sample(f).level(t)),l.mul(i.sample(p).level(t)))),v=Hv(o.y).mul(qn(a.mul(i.sample(_).level(t)),l.mul(i.sample(g).level(t))));return m.add(v)},IF=de(([i,e=Q(3)])=>{const t=_e(i.size(Xt(e))),n=_e(i.size(Xt(e.add(1)))),r=zr(1,t),s=zr(1,n),o=qv(i,Qe(r,t),Qs(e)),a=qv(i,Qe(s,n),Ym(e));return xs(e).mix(o,a)}),jv=de(([i,e,t,n,r])=>{const s=ee(cb(e.negate(),rc(i),zr(1,n))),o=ee(ds(r[0].xyz),ds(r[1].xyz),ds(r[2].xyz));return rc(s).mul(t.mul(o))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),UF=de(([i,e])=>i.mul(Vr(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),FF=Ab(),BF=Ab(),Xv=de(([i,e,t],{material:n})=>{const s=(n.side===It?FF:BF).sample(i),o=kr(bp.x).mul(UF(e,t));return IF(s,o)}),Yv=de(([i,e,t])=>(sn(t.notEqual(0),()=>{const n=tb(e).negate().div(t);return eb(n.negate().mul(i))}),ee(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),OF=de(([i,e,t,n,r,s,o,a,l,c,u,h,d,f,p])=>{let _,g;if(p){_=Qe().toVar(),g=ee().toVar();const T=u.sub(1).mul(p.mul(.025)),b=ee(u.sub(T),u,u.add(T));Yi({start:0,end:3},({i:M})=>{const w=b.element(M),E=jv(i,e,h,w,a),S=o.add(E),C=c.mul(l.mul(Qe(S,1))),I=_e(C.xy.div(C.w)).toVar();I.addAssign(1),I.divAssign(2),I.assign(_e(I.x,I.y.oneMinus()));const k=Xv(I,t,w);_.element(M).assign(k.element(M)),_.a.addAssign(k.a),g.element(M).assign(n.element(M).mul(Yv(ds(E),d,f).element(M)))}),_.a.divAssign(3)}else{const T=jv(i,e,h,u,a),b=o.add(T),M=c.mul(l.mul(Qe(b,1))),w=_e(M.xy.div(M.w)).toVar();w.addAssign(1),w.divAssign(2),w.assign(_e(w.x,w.y.oneMinus())),_=Xv(w,t,u),g=n.mul(Yv(ds(T),d,f))}const m=g.rgb.mul(_.rgb),v=i.dot(e).clamp(),x=ee(Gb({dotNV:v,specularColor:r,specularF90:s,roughness:t})),y=g.r.add(g.g,g.b).div(3);return Qe(x.oneMinus().mul(m),_.a.oneMinus().mul(y).oneMinus())}),kF=$n(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),GF=i=>{const e=i.sqrt();return ee(1).add(e).div(ee(1).sub(e))},Kv=(i,e)=>i.sub(e).div(i.add(e)).pow2(),zF=(i,e)=>{const t=i.mul(2*Math.PI*1e-9),n=ee(54856e-17,44201e-17,52481e-17),r=ee(1681e3,1795300,2208400),s=ee(43278e5,93046e5,66121e5),o=Q(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=n.mul(s.mul(2*Math.PI).sqrt()).mul(r.mul(t).add(e).cos()).mul(t.pow2().negate().mul(s).exp());return a=ee(a.x.add(o),a.y,a.z).div(10685e-11),kF.mul(a)},VF=de(({outsideIOR:i,eta2:e,cosTheta1:t,thinFilmThickness:n,baseF0:r})=>{const s=kt(i,e,vs(0,.03,n)),a=i.div(s).pow2().mul(t.pow2().oneMinus()).oneMinus();sn(a.lessThan(0),()=>ee(1));const l=a.sqrt(),c=Kv(s,i),u=uc({f0:c,f90:1,dotVH:t}),h=u.oneMinus(),d=s.lessThan(i).select(Math.PI,0),f=Q(Math.PI).sub(d),p=GF(r.clamp(0,.9999)),_=Kv(p,s.toVec3()),g=uc({f0:_,f90:1,dotVH:l}),m=ee(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),v=s.mul(n,l,2),x=ee(f).add(m),y=u.mul(g).clamp(1e-5,.9999),T=y.sqrt(),b=h.pow2().mul(g).div(ee(1).sub(y)),w=u.add(b).toVar(),E=b.sub(h).toVar();return Yi({start:1,end:2,condition:"<=",name:"m"},({m:S})=>{E.mulAssign(T);const C=zF(Q(S).mul(v),Q(S).mul(x)).mul(2);w.addAssign(E.mul(C))}),w.max(ee(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),HF=de(({normal:i,viewDir:e,roughness:t})=>{const n=i.dot(e).saturate(),r=t.pow2(),s=ti(t.lessThan(.25),Q(-339.2).mul(r).add(Q(161.4).mul(t)).sub(25.9),Q(-8.48).mul(r).add(Q(14.3).mul(t)).sub(9.95)),o=ti(t.lessThan(.25),Q(44).mul(r).sub(Q(23.7).mul(t)).add(3.26),Q(1.97).mul(r).sub(Q(3.27).mul(t)).add(.72));return ti(t.lessThan(.25),0,Q(.1).mul(t).sub(.025)).add(s.mul(n).add(o).exp()).mul(1/Math.PI).saturate()}),mf=ee(.04),gf=Q(1);class Hb extends Zh{constructor(e=!1,t=!1,n=!1,r=!1,s=!1,o=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=r,this.transmission=s,this.dispersion=o,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=ee().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=ee().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=ee().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=ee().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=ee().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=un.dot(jt).clamp();this.iridescenceFresnel=VF({outsideIOR:Q(1),eta2:jx,cosTheta1:t,thinFilmThickness:Xx,baseF0:_i}),this.iridescenceF0=RF({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=ac,n=EI.sub(ac).normalize(),r=ig,s=e.context;s.backdrop=OF(r,n,Pr,bt,_i,mh,t,oo,jr,ng,qu,Yx,Zx,Kx,this.dispersion?Qx:null),s.backdropAlpha=xp,bt.a.mulAssign(kt(1,s.backdrop.a,xp))}super.start(e)}computeMultiscattering(e,t,n){const r=un.dot(jt).clamp(),s=kb({roughness:Pr,dotNV:r}),a=(this.iridescenceF0?jm.mix(_i,this.iridescenceF0):_i).mul(s.x).add(n.mul(s.y)),c=s.x.add(s.y).oneMinus(),u=_i.add(_i.oneMinus().mul(.047619)),h=a.mul(u).div(c.mul(u).oneMinus());e.addAssign(a),t.addAssign(h.mul(c))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const s=un.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(s.mul(PF({lightDirection:e}))),this.clearcoat===!0){const a=yl.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(Gv({lightDirection:e,f0:mf,f90:gf,roughness:ph,normalView:yl})))}n.directDiffuse.addAssign(s.mul(Ma({diffuseColor:bt.rgb}))),n.directSpecular.addAssign(s.mul(Gv({lightDirection:e,f0:_i,f90:1,roughness:Pr,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:r,reflectedLight:s,ltc_1:o,ltc_2:a}){const l=t.add(n).sub(r),c=t.sub(n).sub(r),u=t.sub(n).add(r),h=t.add(n).add(r),d=un,f=jt,p=hn.toVar(),_=DF({N:d,V:f,roughness:Pr}),g=o.sample(_).toVar(),m=a.sample(_).toVar(),v=$n(ee(g.x,0,g.y),ee(0,1,0),ee(g.z,0,g.w)).toVar(),x=_i.mul(m.x).add(_i.oneMinus().mul(m.y)).toVar();s.directSpecular.addAssign(e.mul(x).mul(zv({N:d,V:f,P:p,mInv:v,p0:l,p1:c,p2:u,p3:h}))),s.directDiffuse.addAssign(e.mul(bt).mul(zv({N:d,V:f,P:p,mInv:$n(1,0,0,0,1,0,0,0,1),p0:l,p1:c,p2:u,p3:h})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(t.mul(Ma({diffuseColor:bt})))}indirectSpecular(e){const{radiance:t,iblIrradiance:n,reflectedLight:r}=e.context;if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(n.mul($o,HF({normal:un,viewDir:jt,roughness:qm}))),this.clearcoat===!0){const u=yl.dot(jt).clamp(),h=Gb({dotNV:u,specularColor:mf,specularF90:gf,roughness:ph});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(h))}const s=ee().toVar("singleScattering"),o=ee().toVar("multiScattering"),a=n.mul(1/Math.PI);this.computeMultiscattering(s,o,mh);const l=s.add(o),c=bt.mul(l.r.max(l.g).max(l.b).oneMinus());r.indirectSpecular.addAssign(t.mul(s)),r.indirectSpecular.addAssign(o.mul(a)),r.indirectDiffuse.addAssign(c.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:n}=e.context,s=un.dot(jt).clamp().add(t),o=Pr.mul(-16).oneMinus().negate().exp2(),a=t.sub(s.pow(o).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(t),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(t),n.indirectDiffuse.mulAssign(t),n.indirectSpecular.mulAssign(a)}finish({context:e}){const{outgoingLight:t}=e;if(this.clearcoat===!0){const n=yl.dot(jt).clamp(),r=uc({dotVH:n,f0:mf,f90:gf}),s=t.mul(_p.mul(r).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(_p));t.assign(s)}if(this.sheen===!0){const n=$o.r.max($o.g).max($o.b).mul(.157).oneMinus(),r=t.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(r)}}}const Zv=Q(1),Mp=Q(-2),vu=Q(.8),_f=Q(-1),yu=Q(.4),vf=Q(2),xu=Q(.305),yf=Q(3),Qv=Q(.21),WF=Q(4),Jv=Q(4),$F=Q(16),qF=de(([i])=>{const e=ee(Ri(i)).toVar(),t=Q(-1).toVar();return sn(e.x.greaterThan(e.z),()=>{sn(e.x.greaterThan(e.y),()=>{t.assign(ti(i.x.greaterThan(0),0,3))}).Else(()=>{t.assign(ti(i.y.greaterThan(0),1,4))})}).Else(()=>{sn(e.z.greaterThan(e.y),()=>{t.assign(ti(i.z.greaterThan(0),2,5))}).Else(()=>{t.assign(ti(i.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),jF=de(([i,e])=>{const t=_e().toVar();return sn(e.equal(0),()=>{t.assign(_e(i.z,i.y).div(Ri(i.x)))}).ElseIf(e.equal(1),()=>{t.assign(_e(i.x.negate(),i.z.negate()).div(Ri(i.y)))}).ElseIf(e.equal(2),()=>{t.assign(_e(i.x.negate(),i.y).div(Ri(i.z)))}).ElseIf(e.equal(3),()=>{t.assign(_e(i.z.negate(),i.y).div(Ri(i.x)))}).ElseIf(e.equal(4),()=>{t.assign(_e(i.x.negate(),i.z).div(Ri(i.y)))}).Else(()=>{t.assign(_e(i.x,i.y).div(Ri(i.z)))}),dt(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),XF=de(([i])=>{const e=Q(0).toVar();return sn(i.greaterThanEqual(vu),()=>{e.assign(Zv.sub(i).mul(_f.sub(Mp)).div(Zv.sub(vu)).add(Mp))}).ElseIf(i.greaterThanEqual(yu),()=>{e.assign(vu.sub(i).mul(vf.sub(_f)).div(vu.sub(yu)).add(_f))}).ElseIf(i.greaterThanEqual(xu),()=>{e.assign(yu.sub(i).mul(yf.sub(vf)).div(yu.sub(xu)).add(vf))}).ElseIf(i.greaterThanEqual(Qv),()=>{e.assign(xu.sub(i).mul(WF.sub(yf)).div(xu.sub(Qv)).add(yf))}).Else(()=>{e.assign(Q(-2).mul(kr(dt(1.16,i))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),YF=de(([i,e])=>{const t=i.toVar();t.assign(dt(2,t).sub(1));const n=ee(t,1).toVar();return sn(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),KF=de(([i,e,t,n,r,s])=>{const o=Q(t),a=ee(e),l=Vr(XF(o),Mp,s),c=xs(l),u=Qs(l),h=ee(Ep(i,a,u,n,r,s)).toVar();return sn(c.notEqual(0),()=>{const d=ee(Ep(i,a,u.add(1),n,r,s)).toVar();h.assign(kt(h,d,c))}),h}),Ep=de(([i,e,t,n,r,s])=>{const o=Q(t).toVar(),a=ee(e),l=Q(qF(a)).toVar(),c=Q(li(Jv.sub(o),0)).toVar();o.assign(li(o,Jv));const u=Q(ic(o)).toVar(),h=_e(jF(a,l).mul(u.sub(2)).add(1)).toVar();return sn(l.greaterThan(2),()=>{h.y.addAssign(u),l.subAssign(3)}),h.x.addAssign(l.mul(u)),h.x.addAssign(c.mul(dt(3,$F))),h.y.addAssign(dt(4,ic(s).sub(u))),h.x.mulAssign(n),h.y.mulAssign(r),i.sample(h).grad(_e(),_e())}),xf=de(({envMap:i,mipInt:e,outputDirection:t,theta:n,axis:r,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const l=ss(n),c=t.mul(l).add(r.cross(t).mul(Xi(n))).add(r.mul(r.dot(t).mul(l.oneMinus())));return Ep(i,c,e,s,o,a)}),ZF=de(({n:i,latitudinal:e,poleAxis:t,outputDirection:n,weights:r,samples:s,dTheta:o,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=ee(ti(e,t,ob(t,n))).toVar();sn(d.equal(ee(0)),()=>{d.assign(ee(n.z,0,n.x.negate()))}),d.assign(rc(d));const f=ee().toVar();return f.addAssign(r.element(0).mul(xf({theta:0,axis:d,outputDirection:n,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),Yi({start:Xt(1),end:i},({i:p})=>{sn(p.greaterThanEqual(s),()=>{BU()});const _=Q(o.mul(Q(p))).toVar();f.addAssign(r.element(p).mul(xf({theta:_.mul(-1),axis:d,outputDirection:n,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(r.element(p).mul(xf({theta:_,axis:d,outputDirection:n,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),Qe(f,1)}),qo=4,ey=[.125,.215,.35,.446,.526,.582],Ws=20,bf=new yc(-1,1,1,-1,0,1),QF=new Tn(90,1),ty=new Le;let Sf=null,Tf=0,Mf=0;const ks=(1+Math.sqrt(5))/2,Uo=1/ks,ny=[new N(-ks,Uo,0),new N(ks,Uo,0),new N(-Uo,0,ks),new N(Uo,0,ks),new N(0,ks,-Uo),new N(0,ks,Uo),new N(-1,1,-1),new N(1,1,-1),new N(-1,1,1),new N(1,1,1)],JF=new N,Wb=new WeakMap,eB=[3,1,5,0,4,2],Ef=YF(Ec(),Hr("faceIndex")).normalize(),lg=ee(Ef.x,Ef.y,Ef.z);class tB{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,n=.1,r=100,s={}){const{size:o=256,position:a=JF,renderTarget:l=null}=s;if(this._setSize(o),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const u=l||this._allocateTargets();return s.renderTarget=u,this.fromSceneAsync(e,t,n,r,s),u}Sf=this._renderer.getRenderTarget(),Tf=this._renderer.getActiveCubeFace(),Mf=this._renderer.getActiveMipmapLevel();const c=l||this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,r,c,a),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}async fromSceneAsync(e,t=0,n=.1,r=100,s={}){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,n,r,s)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTargets();return this.fromEquirectangularAsync(e,n),n}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTargets();return this.fromCubemapAsync(e,t),n}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=ry(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=sy(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Ii||e.mapping===Ui?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Sf,Tf,Mf),e.scissorTest=!1,bu(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),Sf=this._renderer.getRenderTarget(),Tf=this._renderer.getActiveCubeFace(),Mf=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:en,minFilter:en,generateMipmaps:!1,type:Fn,format:Qt,colorSpace:hr},r=iy(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=iy(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=nB(s)),this._blurMaterial=iB(s,e,t)}return r}async _compileMaterial(e){const t=new tn(this._lodPlanes[0],e);await this._renderer.compile(t,bf)}_sceneToCubeUV(e,t,n,r,s){const o=QF;o.near=t,o.far=n;const a=[1,1,1,1,-1,1],l=[1,-1,1,-1,1,-1],c=this._renderer,u=c.autoClear;c.getClearColor(ty),c.autoClear=!1;let h=this._backgroundBox;if(h===null){const p=new or({name:"PMREM.Background",side:It,depthWrite:!1,depthTest:!1});h=new tn(new co,p)}let d=!1;const f=e.background;f?f.isColor&&(h.material.color.copy(f),e.background=null,d=!0):(h.material.color.copy(ty),d=!0),c.setRenderTarget(r),c.clear(),d&&c.render(h,o);for(let p=0;p<6;p++){const _=p%3;_===0?(o.up.set(0,a[p],0),o.position.set(s.x,s.y,s.z),o.lookAt(s.x+l[p],s.y,s.z)):_===1?(o.up.set(0,0,a[p]),o.position.set(s.x,s.y,s.z),o.lookAt(s.x,s.y+l[p],s.z)):(o.up.set(0,a[p],0),o.position.set(s.x,s.y,s.z),o.lookAt(s.x,s.y,s.z+l[p]));const g=this._cubeSize;bu(r,_*g,p>2?g:0,g,g),c.render(e,o)}c.autoClear=u,e.background=f}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Ii||e.mapping===Ui;r?this._cubemapMaterial===null&&(this._cubemapMaterial=ry(e)):this._equirectMaterial===null&&(this._equirectMaterial=sy(e));const s=r?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;const o=this._lodMeshes[0];o.material=s;const a=this._cubeSize;bu(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(o,bf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=ny[(r-s-1)%ny.length];this._blur(e,s-1,s,o,a)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[r];h.material=c;const d=Wb.get(c),f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Ws-1),_=s/p,g=isFinite(s)?1+Math.floor(u*_):Ws;g>Ws&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Ws}`);const m=[];let v=0;for(let M=0;M<Ws;++M){const w=M/_,E=Math.exp(-w*w/2);m.push(E),M===0?v+=E:M<g&&(v+=2*E)}for(let M=0;M<m.length;M++)m[M]=m[M]/v;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value=o==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=p,d.mipInt.value=x-n;const y=this._sizeLods[r],T=3*y*(r>x-qo?r-x+qo:0),b=4*(this._cubeSize-y);bu(t,T,b,3*y,2*y),l.setRenderTarget(t),l.render(h,bf)}}function nB(i){const e=[],t=[],n=[],r=[];let s=i;const o=i-qo+1+ey.length;for(let a=0;a<o;a++){const l=Math.pow(2,s);t.push(l);let c=1/l;a>i-qo?c=ey[a-i+qo-1]:a===0&&(c=0),n.push(c);const u=1/(l-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,_=6,g=3,m=2,v=1,x=new Float32Array(g*_*p),y=new Float32Array(m*_*p),T=new Float32Array(v*_*p);for(let M=0;M<p;M++){const w=M%3*2/3-1,E=M>2?0:-1,S=[w,E,0,w+2/3,E,0,w+2/3,E+1,0,w,E,0,w+2/3,E+1,0,w,E+1,0],C=eB[M];x.set(S,g*_*C),y.set(f,m*_*C);const I=[C,C,C,C,C,C];T.set(I,v*_*C)}const b=new On;b.setAttribute("position",new Rn(x,g)),b.setAttribute("uv",new Rn(y,m)),b.setAttribute("faceIndex",new Rn(T,v)),e.push(b),r.push(new tn(b,null)),s>qo&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n,lodMeshes:r}}function iy(i,e,t){const n=new ao(i,e,t);return n.texture.mapping=eo,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function bu(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function cg(i){const e=new yn;return e.depthTest=!1,e.depthWrite=!1,e.blending=si,e.name=`PMREM_${i}`,e}function iB(i,e,t){const n=ar(new Array(Ws).fill(0)),r=Je(new N(0,1,0)),s=Je(0),o=Q(Ws),a=Je(0),l=Je(1),c=yt(null),u=Je(0),h=Q(1/e),d=Q(1/t),f=Q(i),p={n:o,latitudinal:a,weights:n,poleAxis:r,outputDirection:lg,dTheta:s,samples:l,envMap:c,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},_=cg("blur");return _.fragmentNode=ZF({...p,latitudinal:a.equal(1)}),Wb.set(_,p),_}function ry(i){const e=cg("cubemap");return e.fragmentNode=lc(i,lg),e}function sy(i){const e=cg("equirect");return e.fragmentNode=yt(i,Db(lg),0),e}const oy=new WeakMap;function rB(i){const e=Math.log2(i)-2,t=1/i;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function sB(i,e,t){const n=oB(e);let r=n.get(i);if((r!==void 0?r.pmremVersion:-1)!==i.pmremVersion){const o=i.image;if(i.isCubeTexture)if(lB(o))r=t.fromCubemap(i,r);else return null;else if(cB(o))r=t.fromEquirectangular(i,r);else return null;r.pmremVersion=i.pmremVersion,n.set(i,r)}return r.texture}function oB(i){let e=oy.get(i);return e===void 0&&(e=new WeakMap,oy.set(i,e)),e}class aB extends on{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;const r=new dn;r.isRenderTargetTexture=!0,this._texture=yt(r),this._width=Je(0),this._height=Je(0),this._maxMip=Je(0),this.updateBeforeType=ct.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=rB(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const n=t?t.pmremVersion:-1,r=this._value;n!==r.pmremVersion&&(r.isPMREMTexture===!0?t=r:t=sB(r,e.renderer,this._generator),t!==null&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){this._generator===null&&(this._generator=new tB(e.renderer)),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this)),t=xb.mul(ee(t.x,t.y.negate(),t.z));let n=this.levelNode;return n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),KF(this._texture,t,n,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function lB(i){if(i==null)return!1;let e=0;const t=6;for(let n=0;n<t;n++)i[n]!==void 0&&e++;return e===t}function cB(i){return i==null?!1:i.height>0}const $b=le(aB).setParameterLength(1,3),ay=new WeakMap;class uB extends Fa{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const h=n.isTextureNode?n.value:t[n.property];let d=ay.get(h);d===void 0&&(d=$b(h),ay.set(h,d)),n=d}const s=t.useAnisotropy===!0||t.anisotropy>0?HI:un,o=n.context(ly(Pr,s)).mul(hf),a=n.context(hB(ig)).mul(Math.PI).mul(hf),l=Xu(o),c=Xu(a);e.context.radiance.addAssign(l),e.context.iblIrradiance.addAssign(c);const u=e.context.lightingModel.clearcoatRadiance;if(u){const h=n.context(ly(ph,yl)).mul(hf),d=Xu(h);u.addAssign(d)}}}const ly=(i,e)=>{let t=null;return{getUV:()=>(t===null&&(t=jt.negate().reflect(e),t=i.mul(i).mix(t,e).normalize(),t=t.transformDirection(jr)),t),getTextureLevel:()=>i}},hB=i=>({getUV:()=>i,getTextureLevel:()=>Q(1)}),dB=new A0;class qb extends yn{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(dB),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new uB(t):null}setupLightingModel(){return new Hb}setupSpecular(){const e=kt(ee(.04),bt.rgb,fh);_i.assign(e),mh.assign(1)}setupVariants(){const e=this.metalnessNode?Q(this.metalnessNode):iU;fh.assign(e);let t=this.roughnessNode?Q(this.roughnessNode):nU;t=Ob({roughness:t}),Pr.assign(t),this.setupSpecular(),bt.assign(Qe(bt.rgb.mul(e.oneMinus()),bt.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const fB=new YM;class pB extends qb{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(fB),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?Q(this.iorNode):_U;qu.assign(e),_i.assign(kt(sc(ab(qu.sub(1).div(qu.add(1))).mul(tU),ee(1)).mul(Iv),bt.rgb,fh)),mh.assign(kt(Iv,1,fh))}setupLightingModel(){return new Hb(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?Q(this.clearcoatNode):sU,n=this.clearcoatRoughnessNode?Q(this.clearcoatRoughnessNode):oU;_p.assign(t),ph.assign(Ob({roughness:n}))}if(this.useSheen){const t=this.sheenNode?ee(this.sheenNode):cU,n=this.sheenRoughnessNode?Q(this.sheenRoughnessNode):uU;$o.assign(t),qm.assign(n)}if(this.useIridescence){const t=this.iridescenceNode?Q(this.iridescenceNode):dU,n=this.iridescenceIORNode?Q(this.iridescenceIORNode):fU,r=this.iridescenceThicknessNode?Q(this.iridescenceThicknessNode):pU;jm.assign(t),jx.assign(n),Xx.assign(r)}if(this.useAnisotropy){const t=(this.anisotropyNode?_e(this.anisotropyNode):hU).toVar();Os.assign(t.length()),sn(Os.equal(0),()=>{t.assign(_e(1,0))}).Else(()=>{t.divAssign(_e(Os)),Os.assign(Os.saturate())}),vp.assign(Os.pow2().mix(Pr.pow2(),1)),$u.assign(xl[0].mul(t.x).add(xl[1].mul(t.y))),ea.assign(xl[1].mul(t.x).sub(xl[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?Q(this.transmissionNode):mU,n=this.thicknessNode?Q(this.thicknessNode):gU,r=this.attenuationDistanceNode?Q(this.attenuationDistanceNode):vU,s=this.attenuationColorNode?ee(this.attenuationColorNode):yU;if(xp.assign(t),Yx.assign(n),Kx.assign(r),Zx.assign(s),this.useDispersion){const o=this.dispersionNode?Q(this.dispersionNode):EU;Qx.assign(o)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?ee(this.clearcoatNormalNode):aU}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const mB=de(({normal:i,lightDirection:e,builder:t})=>{const n=i.dot(e),r=_e(n.mul(.5).add(.5),0);if(t.material.gradientMap){const s=os("gradientMap","texture").context({getUV:()=>r});return ee(s.r)}else{const s=r.fwidth().mul(.5);return kt(ee(.7),ee(1),vs(Q(.7).sub(s.x),Q(.7).add(s.x),r.x))}});class gB extends Zh{direct({lightDirection:e,lightColor:t,reflectedLight:n},r){const s=mB({normal:_b,lightDirection:e,builder:r}).mul(t);n.directDiffuse.addAssign(s.mul(Ma({diffuseColor:bt.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:n,reflectedLight:r}=e.context;r.indirectDiffuse.addAssign(n.mul(Ma({diffuseColor:bt}))),r.indirectDiffuse.mulAssign(t)}}const _B=new ZM;class vB extends yn{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(_B),this.setValues(e)}setupLightingModel(){return new gB}}class yB extends on{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=ee(jt.z,0,jt.x.negate()).normalize(),t=jt.cross(e);return _e(e.dot(un),t.dot(un)).mul(.495).add(.5)}}const xB=ge(yB),bB=new tE;class SB extends yn{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(bB),this.setValues(e)}setupVariants(e){const t=xB;let n;e.material.matcap?n=os("matcap","texture").context({getUV:()=>t}):n=ee(kt(.2,.8,t.y)),bt.rgb.mulAssign(n.rgb)}}class TB extends on{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:n}=this;if(this.getNodeType(e)==="vec2"){const s=t.cos(),o=t.sin();return Wm(s,o,o.negate(),s).mul(n)}else{const s=t,o=Jo(Qe(1,0,0,0),Qe(0,ss(s.x),Xi(s.x).negate(),0),Qe(0,Xi(s.x),ss(s.x),0),Qe(0,0,0,1)),a=Jo(Qe(ss(s.y),0,Xi(s.y),0),Qe(0,1,0,0),Qe(Xi(s.y).negate(),0,ss(s.y),0),Qe(0,0,0,1)),l=Jo(Qe(ss(s.z),Xi(s.z).negate(),0,0),Qe(Xi(s.z),ss(s.z),0,0),Qe(0,0,1,0),Qe(0,0,0,1));return o.mul(a).mul(l).mul(Qe(n,1)).xyz}}}const jb=le(TB).setParameterLength(2),MB=new Ph;class Xb extends yn{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(MB),this.setValues(e)}setupPositionView(e){const{object:t,camera:n}=e,r=this.sizeAttenuation,{positionNode:s,rotationNode:o,scaleNode:a}=this,l=jh.mul(ee(s||0));let c=_e(oo[0].xyz.length(),oo[1].xyz.length());if(a!==null&&(c=c.mul(_e(a))),r===!1)if(n.isPerspectiveCamera)c=c.mul(l.z.negate());else{const f=Q(2).div(ng.element(1).element(1));c=c.mul(f.mul(2))}let u=Xh.xy;if(t.center&&t.center.isVector2===!0){const f=J2("center","vec2",t);u=u.sub(f.sub(.5))}u=u.mul(c);const h=Q(o||lU),d=jb(u,h);return Qe(l.xy.add(d),l.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const EB=new NM;class wB extends Xb{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(EB),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return jh.mul(ee(e||Un)).xyz}setupVertex(e){const t=super.setupVertex(e);if(e.material.isNodeMaterial!==!0)return t;const{rotationNode:n,scaleNode:r,sizeNode:s}=this,o=Xh.xy.toVar(),a=Pl.z.div(Pl.w);if(n&&n.isNode){const c=Q(n);o.assign(jb(o,c))}let l=s!==null?_e(s):MU;return this.sizeAttenuation===!0&&(l=l.mul(l.div(hn.z.negate()))),r&&r.isNode&&(l=l.mul(_e(r))),o.mulAssign(l.mul(2)),o.assign(o.div(Pl.z)),o.y.assign(o.y.mul(a)),o.assign(o.mul(t.w)),t.addAssign(Qe(o,0,0)),t}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}class AB extends Zh{constructor(){super(),this.shadowNode=Q(1).toVar("shadowMask")}direct({lightNode:e}){this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){bt.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(bt.rgb)}}const RB=new XM;class CB extends yn{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(RB),this.setValues(e)}setupLightingModel(){return new AB}}Tc("vec3");Tc("vec3");Tc("vec3");class NB{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){const e=(t,n)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,n)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class pr{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let r=0;r<e.length-1;r++){const s=e[r];n.has(s)===!1&&n.set(s,new WeakMap),n=n.get(s)}return n.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),t===void 0)return!1;return t.delete(e[e.length-1])}}let PB=0;function DB(i){const e=Object.keys(i);let t=Object.getPrototypeOf(i);for(;t;){const n=Object.getOwnPropertyDescriptors(t);for(const r in n)if(n[r]!==void 0){const s=n[r];s&&typeof s.get=="function"&&e.push(r)}t=Object.getPrototypeOf(t)}return e}class LB{constructor(e,t,n,r,s,o,a,l,c,u){this.id=PB++,this._nodes=e,this._geometries=t,this.renderer=n,this.object=r,this.material=s,this.scene=o,this.camera=a,this.lightsNode=l,this.context=c,this.geometry=r.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=u!==null?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],r=new Set;for(const s of e){const o=s.node&&s.node.attribute?s.node.attribute:t.getAttribute(s.name);if(o===void 0)continue;n.push(o);const a=o.isInterleavedBufferAttribute?o.data:o;r.add(a)}return this.attributes=n,this.vertexBuffers=Array.from(r.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:n,group:r,drawRange:s}=this,o=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),l=a!==null,c=n.isInstancedBufferGeometry?n.instanceCount:e.count>1?e.count:1;if(c===0)return null;if(o.instanceCount=c,e.isBatchedMesh===!0)return o;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=s.start*u,d=(s.start+s.count)*u;r!==null&&(h=Math.max(h,r.start*u),d=Math.min(d,(r.start+r.count)*u));const f=n.attributes.position;let p=1/0;l?p=a.count:f!=null&&(p=f.count),h=Math.max(h,0),d=Math.min(d,p);const _=d-h;return _<0||_===1/0?null:(o.vertexCount=_,o.firstVertex=h,o)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const n of Object.keys(e.attributes).sort()){const r=e.attributes[n];t+=n+",",r.data&&(t+=r.data.stride+","),r.offset&&(t+=r.offset+","),r.itemSize&&(t+=r.itemSize+","),r.normalized&&(t+="n,")}for(const n of Object.keys(e.morphAttributes).sort()){const r=e.morphAttributes[n];t+="morph-"+n+",";for(let s=0,o=r.length;s<o;s++){const a=r[s];t+=a.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let n=t.customProgramCacheKey();for(const r of DB(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(r))continue;const s=t[r];let o;if(s!==null){const a=typeof s;a==="number"?o=s!==0?"1":"0":a==="object"?(o="{",s.isTexture&&(o+=s.mapping),o+="}"):o=String(s)}else o=String(s);n+=o+","}return n+=this.clippingContextCacheKey+",",e.geometry&&(n+=this.getGeometryCacheKey()),e.skeleton&&(n+=e.skeleton.bones.length+","),e.isBatchedMesh&&(n+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(n+=e._colorsTexture.uuid+",")),e.count>1&&(n+=e.uuid+","),n+=e.receiveShadow+",",eL(n)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=nc(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=nc(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Ls=[];class IB{constructor(e,t,n,r,s,o){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=r,this.bindings=s,this.info=o,this.chainMaps={}}get(e,t,n,r,s,o,a,l){const c=this.getChainMap(l);Ls[0]=e,Ls[1]=t,Ls[2]=o,Ls[3]=s;let u=c.get(Ls);return u===void 0?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,r,s,o,a,l),c.set(Ls,u)):(u.updateClipping(a),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,n,r,s,o,a,l)):u.version=t.version)),Ls.length=0,u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new pr)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,r,s,o,a,l,c,u,h){const d=this.getChainMap(h),f=new LB(e,t,n,r,s,o,a,l,c,u);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),d.delete(f.getChainArray())},f}}class bs{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Ni={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},as=16,UB=211,FB=212;class BB extends bs{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==null&&this.backend.destroyAttribute(e),t}update(e,t){const n=this.get(e);if(n.version===void 0)t===Ni.VERTEX?this.backend.createAttribute(e):t===Ni.INDEX?this.backend.createIndexAttribute(e):t===Ni.STORAGE?this.backend.createStorageAttribute(e):t===Ni.INDIRECT&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{const r=this._getBufferAttribute(e);(n.version<r.version||r.usage===Vo)&&(this.backend.updateAttribute(e),n.version=r.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Yb(i){return i.index!==null?i.index.version:i.attributes.position.version}function cy(i){const e=[],t=i.index,n=i.attributes.position;if(t!==null){const s=t.array;for(let o=0,a=s.length;o<a;o+=3){const l=s[o+0],c=s[o+1],u=s[o+2];e.push(l,c,c,u,u,l)}}else{const s=n.array;for(let o=0,a=s.length/3-1;o<a;o+=3){const l=o+0,c=o+1,u=o+2;e.push(l,c,c,u,u,l)}}const r=new(dm(e)?_m:gm)(e,1);return r.version=Yb(i),r}class OB extends bs{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,n=this.get(t);n.initialized=!0,this.info.memory.geometries++;const r=()=>{this.info.memory.geometries--;const s=t.index,o=e.getAttributes();s!==null&&this.attributes.delete(s);for(const l of o)this.attributes.delete(l);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",r)};t.addEventListener("dispose",r)}updateAttributes(e){const t=e.getAttributes();for(const s of t)s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute?this.updateAttribute(s,Ni.STORAGE):this.updateAttribute(s,Ni.VERTEX);const n=this.getIndex(e);n!==null&&this.updateAttribute(n,Ni.INDEX);const r=e.geometry.indirect;r!==null&&this.updateAttribute(r,Ni.INDIRECT)}updateAttribute(e,t){const n=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:n}=e;let r=t.index;if(n.wireframe===!0){const s=this.wireframes;let o=s.get(t);o===void 0?(o=cy(t),s.set(t,o)):o.version!==Yb(t)&&(this.attributes.delete(o),o=cy(t),s.set(t,o)),r=o}return r}}class kB{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class Kb{constructor(e){this.cacheKey=e,this.usedTimes=0}}class GB extends Kb{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}}class zB extends Kb{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let VB=0;class wf{constructor(e,t,n,r=null,s=null){this.id=VB++,this.code=e,this.stage=t,this.name=n,this.transforms=r,this.attributes=s,this.usedTimes=0}}class HB extends bs{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:n}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const s=r.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);const o=this.nodes.getForCompute(e);let a=this.programs.compute.get(o.computeShader);a===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),a=new wf(o.computeShader,"compute",e.name,o.transforms,o.nodeAttributes),this.programs.compute.set(o.computeShader,a),n.createProgram(a));const l=this._getComputeCacheKey(e,a);let c=this.caches.get(l);c===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),c=this._getComputePipeline(e,a,l,t)),c.usedTimes++,a.usedTimes++,r.version=e.version,r.pipeline=c}return r.pipeline}getForRender(e,t=null){const{backend:n}=this,r=this.get(e);if(this._needsRenderUpdate(e)){const s=r.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);const o=e.getNodeBuilderState(),a=e.material?e.material.name:"";let l=this.programs.vertex.get(o.vertexShader);l===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),l=new wf(o.vertexShader,"vertex",a),this.programs.vertex.set(o.vertexShader,l),n.createProgram(l));let c=this.programs.fragment.get(o.fragmentShader);c===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),c=new wf(o.fragmentShader,"fragment",a),this.programs.fragment.set(o.fragmentShader,c),n.createProgram(c));const u=this._getRenderCacheKey(e,l,c);let h=this.caches.get(u);h===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),h=this._getRenderPipeline(e,l,c,u,t)):e.pipeline=h,h.usedTimes++,l.usedTimes++,c.usedTimes++,r.pipeline=h}return r.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,r){n=n||this._getComputeCacheKey(e,t);let s=this.caches.get(n);return s===void 0&&(s=new zB(n,t),this.caches.set(n,s),this.backend.createComputePipeline(s,r)),s}_getRenderPipeline(e,t,n,r,s){r=r||this._getRenderCacheKey(e,t,n);let o=this.caches.get(r);return o===void 0&&(o=new GB(r,t,n),this.caches.set(r,o),e.pipeline=o,this.backend.createRenderPipeline(e,s)),o}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class WB extends bs{constructor(e,t,n,r,s,o){super(),this.backend=e,this.textures=n,this.pipelines=s,this.attributes=r,this.nodes=t,this.info=o,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const n of t){const r=this.get(n);r.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),r.bindGroup=n)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t){const r=this.get(n);r.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),r.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const n=t.attribute,r=n.isIndirectStorageBufferAttribute?Ni.INDIRECT:Ni.STORAGE;this.attributes.update(n,r)}}_update(e,t){const{backend:n}=this;let r=!1,s=!0,o=0,a=0;for(const l of e.bindings)if(!(l.isNodeUniformsGroup&&this.nodes.updateGroup(l)===!1)){if(l.isStorageBuffer){const c=l.attribute,u=c.isIndirectStorageBufferAttribute?Ni.INDIRECT:Ni.STORAGE;this.attributes.update(c,u)}if(l.isUniformBuffer)l.update()&&n.updateBinding(l);else if(l.isSampler)l.update();else if(l.isSampledTexture){const c=this.textures.get(l.texture);l.needsBindingsUpdate(c.generation)&&(r=!0);const u=l.update(),h=l.texture;u&&this.textures.updateTexture(h);const d=n.get(h);if(d.externalTexture!==void 0||c.isDefaultTexture?s=!1:(o=o*10+h.id,a+=h.version),n.isWebGPUBackend===!0&&d.texture===void 0&&d.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",l,u,h,l.textureNode.value,r),this.textures.updateTexture(h),r=!0),h.isStorageTexture===!0){const f=this.get(h);l.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(h)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(h),f.needsMipmap=!1)}}}r===!0&&this.backend.updateBindings(e,t,s?o:0,a)}}function $B(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function uy(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function hy(i){return(i.transmission>0||i.transmissionNode)&&i.side===Vn&&i.forceSinglePass===!1}class qB{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,r,s,o,a){let l=this.renderItems[this.renderItemsIndex];return l===void 0?(l={id:e.id,object:e,geometry:t,material:n,groupOrder:r,renderOrder:e.renderOrder,z:s,group:o,clippingContext:a},this.renderItems[this.renderItemsIndex]=l):(l.id=e.id,l.object=e,l.geometry=t,l.material=n,l.groupOrder=r,l.renderOrder=e.renderOrder,l.z=s,l.group=o,l.clippingContext=a),this.renderItemsIndex++,l}push(e,t,n,r,s,o,a){const l=this.getNextRenderItem(e,t,n,r,s,o,a);e.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0?(hy(n)&&this.transparentDoublePass.push(l),this.transparent.push(l)):this.opaque.push(l)}unshift(e,t,n,r,s,o,a){const l=this.getNextRenderItem(e,t,n,r,s,o,a);n.transparent===!0||n.transmission>0?(hy(n)&&this.transparentDoublePass.unshift(l),this.transparent.unshift(l)):this.opaque.unshift(l)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||$B),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||uy),this.transparent.length>1&&this.transparent.sort(t||uy)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const n=this.renderItems[e];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null,n.clippingContext=null}}}const ol=[];class jB{constructor(e){this.lighting=e,this.lists=new pr}get(e,t){const n=this.lists;ol[0]=e,ol[1]=t;let r=n.get(ol);return r===void 0&&(r=new qB(this.lighting,e,t),n.set(ol,r)),ol.length=0,r}dispose(){this.lists=new pr}}let XB=0;class YB{constructor(){this.id=XB++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new We,this.scissor=!1,this.scissorValue=new We,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return Zb(this)}}function Zb(i){const{textures:e,activeCubeFace:t}=i,n=[t];for(const r of e)n.push(r.id);return km(n)}const al=[],KB=new Nh,ZB=new vm;class QB{constructor(){this.chainMaps={}}get(e,t,n=null){al[0]=e,al[1]=t;let r;if(n===null)r="default";else{const a=n.texture.format;r=`${n.textures.length}:${a}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const s=this._getChainMap(r);let o=s.get(al);return o===void 0&&(o=new YB,s.set(al,o)),al.length=0,n!==null&&(o.sampleCount=n.samples===0?1:n.samples),o}getForClear(e=null){return this.get(KB,ZB,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new pr)}dispose(){this.chainMaps={}}}const JB=new N;class eO extends bs{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){const n=this.get(e),r=e.samples===0?1:e.samples,s=n.depthTextureMips||(n.depthTextureMips={}),o=e.textures,a=this.getSize(o[0]),l=a.width>>t,c=a.height>>t;let u=e.depthTexture||s[t];const h=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;u===void 0&&h&&(u=new Di,u.format=e.stencilBuffer?Si:bi,u.type=e.stencilBuffer?xi:Lt,u.image.width=l,u.image.height=c,s[t]=u),(n.width!==a.width||a.height!==n.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=l,u.image.height=c)),n.width=a.width,n.height=a.height,n.textures=o,n.depthTexture=u||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==r&&(d=!0,u&&(u.needsUpdate=!0),n.sampleCount=r);const f={sampleCount:r};if(e.isXRRenderTarget!==!0){for(let p=0;p<o.length;p++){const _=o[p];d&&(_.needsUpdate=!0),this.updateTexture(_,f)}u&&this.updateTexture(u,f)}if(n.initialized!==!0){n.initialized=!0;const p=()=>{e.removeEventListener("dispose",p);for(let _=0;_<o.length;_++)this._destroyTexture(o[_]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",p)}}updateTexture(e,t={}){const n=this.get(e);if(n.initialized===!0&&n.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(r&&n.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const c=this.renderer.getRenderTarget();c?e.type=c.texture.type:e.type=Zt}const{width:o,height:a,depth:l}=this.getSize(e);if(t.width=o,t.height=a,t.depth=l,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,o,a):1,r||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),n.generation=e.version;else if(n.initialized!==!0&&s.createSampler(e),e.version>0){const u=e.image;if(u===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(u.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const h=[];for(const d of e.images)h.push(d);t.images=h}else t.image=u;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(s.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version;if(n.initialized!==!0){n.initialized=!0,n.generation=e.version,this.info.memory.textures++;const c=()=>{e.removeEventListener("dispose",c),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",c)}n.version=e.version}getSize(e,t=JB){let n=e.images?e.images[0]:e.image;return n?(n.image!==void 0&&(n=n.image),t.width=n.width||1,t.height=n.height||1,t.depth=e.isCubeTexture?6:n.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let r;return e.isCompressedTexture?e.mipmaps?r=e.mipmaps.length:r=1:r=Math.floor(Math.log2(Math.max(t,n)))+1,r}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===ps||t===ms||t===Ii||t===Ui}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class ug extends Le{constructor(e,t,n,r=1){super(e,t,n),this.a=r}set(e,t,n,r=1){return this.a=r,super.set(e,t,n)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class tO extends wt{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class nO extends tt{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){const n=new Wu(t);return this._currentCond=ti(e,n),this.add(this._currentCond)}ElseIf(e,t){const n=new Wu(t),r=ti(e,n);return this._currentCond.elseNode=r,this._currentCond=r,this}Else(e){return this._currentCond.elseNode=new Wu(e),this}build(e,...t){const n=Hx();hh(this);for(const r of this.nodes)r.build(e,"void");return hh(n),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("THREE.TSL: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("THREE.TSL: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Af=le(nO).setParameterLength(0,1);new ji;new N;new N;new N;new ft;new N(0,0,-1);new We;new N;new N;new We;new ae;const iO=new ao;cc.flipX();iO.depthTexture=new Di(1,1);const Rf=new yc(-1,1,1,-1,0,1);class rO extends On{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new rn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new rn(t,2))}}const sO=new rO;class Qb extends tn{constructor(e=null){super(sO,e),this.camera=Rf,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Rf)}render(e){e.render(this,Rf)}}const ll=new ai,Cf=new ft;class ii extends tt{static get type(){return"SceneNode"}constructor(e=ii.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=this.scene!==null?this.scene:e.scene;let r;return t===ii.BACKGROUND_BLURRINESS?r=Dt("backgroundBlurriness","float",n):t===ii.BACKGROUND_INTENSITY?r=Dt("backgroundIntensity","float",n):t===ii.BACKGROUND_ROTATION?r=Je("mat4").label("backgroundRotation").setGroup(qe).onRenderUpdate(()=>{const s=n.background;return s!==null&&s.isTexture&&s.mapping!==Jp?(ll.copy(n.backgroundRotation),ll.x*=-1,ll.y*=-1,ll.z*=-1,Cf.makeRotationFromEuler(ll)):Cf.identity(),Cf}):console.error("THREE.SceneNode: Unknown scope:",t),r}}ii.BACKGROUND_BLURRINESS="backgroundBlurriness";ii.BACKGROUND_INTENSITY="backgroundIntensity";ii.BACKGROUND_ROTATION="backgroundRotation";const oO=ge(ii,ii.BACKGROUND_BLURRINESS),dy=ge(ii,ii.BACKGROUND_INTENSITY),aO=ge(ii,ii.BACKGROUND_ROTATION);de(({texture:i,uv:e})=>{const n=ee().toVar();return sn(e.x.lessThan(1e-4),()=>{n.assign(ee(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(ee(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(ee(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(ee(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(ee(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(ee(0,0,-1))}).Else(()=>{const s=i.sample(e.add(ee(-.01,0,0))).r.sub(i.sample(e.add(ee(.01,0,0))).r),o=i.sample(e.add(ee(0,-.01,0))).r.sub(i.sample(e.add(ee(0,.01,0))).r),a=i.sample(e.add(ee(0,0,-.01))).r.sub(i.sample(e.add(ee(0,0,.01))).r);n.assign(ee(s,o,a))}),n.normalize()});const Su=new ae;class lO extends wc{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class fy extends lO{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class Jh extends on{static get type(){return"PassNode"}constructor(e,t,n,r={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=r,this._pixelRatio=1,this._width=1,this._height=1;const s=new Di;s.isRenderTargetTexture=!0,s.name="depth";const o=new ao(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Fn,...r});o.texture.name="output",o.depthTexture=s,this.renderTarget=o,this._textures={output:o.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Je(0),this._cameraFar=Je(0),this._mrt=null,this._layers=null,this._resolution=1,this.isPassNode=!0,this.updateBeforeType=ct.FRAME}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const n=this._textures[e],r=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[r]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=he(new fy(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=he(new fy(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const n=this._cameraNear,r=this._cameraFar;this._viewZNodes[e]=t=Rb(this.getTextureNode(e),n,r)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const n=this._cameraNear,r=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=Dl(s,n,r)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.texture.type=e.getColorBufferType(),this.scope===Jh.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n}=this;let r,s;const o=t.getOutputRenderTarget();o&&o.isXRRenderTarget===!0?(s=1,r=t.xr.getCamera(),t.xr.updateCamera(r),Su.set(o.width,o.height)):(r=this.camera,s=t.getPixelRatio(),t.getSize(Su)),this._pixelRatio=s,this.setSize(Su.width,Su.height);const a=t.getRenderTarget(),l=t.getMRT(),c=r.layers.mask;this._cameraNear.value=r.near,this._cameraFar.value=r.far,this._layers!==null&&(r.layers.mask=this._layers.mask);for(const u in this._previousTextures)this.toggleTexture(u);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,r),t.setRenderTarget(a),t.setMRT(l),r.layers.mask=c}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio*this._resolution,r=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Jh.COLOR="color";Jh.DEPTH="depth";const cO=de(([i,e])=>i.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),uO=de(([i,e])=>(i=i.mul(e),i.div(i.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),hO=de(([i,e])=>{i=i.mul(e),i=i.sub(.004).max(0);const t=i.mul(i.mul(6.2).add(.5)),n=i.mul(i.mul(6.2).add(1.7)).add(.06);return t.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),dO=de(([i])=>{const e=i.mul(i.add(.0245786)).sub(90537e-9),t=i.mul(i.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),fO=de(([i,e])=>{const t=$n(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=$n(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return i=i.mul(e).div(.6),i=t.mul(i),i=dO(i),i=n.mul(i),i.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),pO=$n(ee(1.6605,-.1246,-.0182),ee(-.5876,1.1329,-.1006),ee(-.0728,-.0083,1.1187)),mO=$n(ee(.6274,.0691,.0164),ee(.3293,.9195,.088),ee(.0433,.0113,.8956)),gO=de(([i])=>{const e=ee(i).toVar(),t=ee(e.mul(e)).toVar(),n=ee(t.mul(t)).toVar();return Q(15.5).mul(n.mul(t)).sub(dt(40.14,n.mul(e))).add(dt(31.96,n).sub(dt(6.868,t.mul(e))).add(dt(.4298,t).add(dt(.1191,e).sub(.00232))))}),_O=de(([i,e])=>{const t=ee(i).toVar(),n=$n(ee(.856627153315983,.137318972929847,.11189821299995),ee(.0951212405381588,.761241990602591,.0767994186031903),ee(.0482516061458583,.101439036467562,.811302368396859)),r=$n(ee(1.1271005818144368,-.1413297634984383,-.14132976349843826),ee(-.11060664309660323,1.157823702216272,-.11060664309660294),ee(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=Q(-12.47393),o=Q(4.026069);return t.mulAssign(e),t.assign(mO.mul(t)),t.assign(n.mul(t)),t.assign(li(t,1e-10)),t.assign(kr(t)),t.assign(t.sub(s).div(o.sub(s))),t.assign(Vr(t,0,1)),t.assign(gO(t)),t.assign(r.mul(t)),t.assign($h(li(ee(0),t),ee(2.2))),t.assign(pO.mul(t)),t.assign(Vr(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),vO=de(([i,e])=>{const t=Q(.76),n=Q(.15);i=i.mul(e);const r=sc(i.r,sc(i.g,i.b)),s=ti(r.lessThan(.08),r.sub(dt(6.25,r.mul(r))),.04);i.subAssign(s);const o=li(i.r,li(i.g,i.b));sn(o.lessThan(t),()=>i);const a=Qn(1,t),l=Qn(1,a.mul(a).div(o.add(a.sub(t))));i.mulAssign(l.div(o));const c=Qn(1,zr(1,n.mul(o.sub(l)).add(1)));return kt(i,ee(l),c)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class gn extends tt{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.code=e,this.includes=t,this.language=n}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const r of t)r.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class yO extends gn{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return n===void 0&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),r=n.name,s=n.type,o=e.getCodeFromNode(this,s);r!==""&&(o.name=r);const a=e.getPropertyName(o),l=this.getNodeFunction(e).getCode(a);return o.code=l+`
`,t==="property"?a:e.format(`${a}()`,s,t)}}function Jb(i){let e;const t=i.context.getViewZ;return t!==void 0&&(e=t(this)),(e||hn.z).negate()}const xO=de(([i,e],t)=>{const n=Jb(t);return vs(i,e,n)}),bO=de(([i],e)=>{const t=Jb(e);return i.mul(i,t,t).negate().exp().oneMinus()}),py=de(([i,e])=>Qe(e.toFloat().mix(Cl.rgb,i.toVec3()),Cl.a));class SO extends tt{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}le(SO);class gr extends on{static get type(){return"AtomicFunctionNode"}constructor(e,t,n){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,n=this.getNodeType(e),r=this.getInputType(e),s=this.pointerNode,o=this.valueNode,a=[];a.push(`&${s.build(e,r)}`),o!==null&&a.push(o.build(e,r));const l=`${e.getMethod(t,n)}( ${a.join(", ")} )`;return o!==null&&e.addLineFlowCode(l,this),l}}gr.ATOMIC_LOAD="atomicLoad";gr.ATOMIC_STORE="atomicStore";gr.ATOMIC_ADD="atomicAdd";gr.ATOMIC_SUB="atomicSub";gr.ATOMIC_MAX="atomicMax";gr.ATOMIC_MIN="atomicMin";gr.ATOMIC_AND="atomicAnd";gr.ATOMIC_OR="atomicOr";gr.ATOMIC_XOR="atomicXor";le(gr);let Tu;function ed(i){Tu=Tu||new WeakMap;let e=Tu.get(i);return e===void 0&&Tu.set(i,e={}),e}function eS(i){const e=ed(i);return e.shadowMatrix||(e.shadowMatrix=Je("mat4").setGroup(qe).onRenderUpdate(()=>(i.castShadow!==!0&&i.shadow.updateMatrices(i),i.shadow.matrix)))}function TO(i,e=ac){const t=eS(i).mul(e);return t.xyz.div(t.w)}function tS(i){const e=ed(i);return e.position||(e.position=Je(new N).setGroup(qe).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(i.matrixWorld)))}function MO(i){const e=ed(i);return e.targetPosition||(e.targetPosition=Je(new N).setGroup(qe).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(i.target.matrixWorld)))}function nS(i){const e=ed(i);return e.viewPosition||(e.viewPosition=Je(new N).setGroup(qe).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new N,n.value.setFromMatrixPosition(i.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}const iS=i=>jr.transformDirection(tS(i).sub(MO(i))),EO=i=>i.sort((e,t)=>e.id-t.id),wO=(i,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===i)return t;return null},Nf=new WeakMap;class rS extends tt{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=ee().toVar(),this.totalSpecularNode=ee().toVar(),this.outgoingLightNode=ee().toVar(),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=[],t=this._lights;for(let n=0;n<t.length;n++)e.push(t[n].id);return km(e)}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const n of this._lightNodes)t.push(n.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const n of t.nodes)n.build(e)}setupLightsNode(e){const t=[],n=this._lightNodes,r=EO(this._lights),s=e.renderer.library;for(const o of r)if(o.isNode)t.push(he(o));else{let a=null;if(n!==null&&(a=wO(o.id,n)),a===null){const l=s.getLightNodeClass(o.constructor);if(l===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${o.constructor.name}`);continue}let c=null;Nf.has(o)?c=Nf.get(o):(c=he(new l(o)),Nf.set(o,c)),t.push(c)}}this._lightNodes=t}setupDirectLight(e,t,n){const{lightingModel:r,reflectedLight:s}=e.context;r.direct({...n,lightNode:t,reflectedLight:s},e)}setupDirectRectAreaLight(e,t,n){const{lightingModel:r,reflectedLight:s}=e.context;r.directRectArea({...n,lightNode:t,reflectedLight:s},e)}setupLights(e,t){for(const n of t)n.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let n=this.outgoingLightNode;const r=e.context,s=r.lightingModel,o=e.getDataFromNode(this);if(s){const{totalDiffuseNode:a,totalSpecularNode:l}=this;r.outgoingLight=n;const c=e.addStack();o.nodes=c.nodes,s.start(e);const{backdrop:u,backdropAlpha:h}=r,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:_}=r.reflectedLight;let g=d.add(p);u!==null&&(h!==null?g=ee(h.mix(g,u)):g=ee(u),r.material.transparent=!0),a.assign(g),l.assign(f.add(_)),n.assign(a.add(l)),s.finish(e),n=n.bypass(e.removeStack())}else o.nodes=[];return e.lightsNode=t,n}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}class AO extends tt{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=ct.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){sS.assign(t.shadowPositionNode||e.shadowPositionWorld||ac)}dispose(){this.updateBeforeType=ct.NONE}}const sS=Tc("vec3","shadowPositionWorld");function RO(i,e={}){return e.toneMapping=i.toneMapping,e.toneMappingExposure=i.toneMappingExposure,e.outputColorSpace=i.outputColorSpace,e.renderTarget=i.getRenderTarget(),e.activeCubeFace=i.getActiveCubeFace(),e.activeMipmapLevel=i.getActiveMipmapLevel(),e.renderObjectFunction=i.getRenderObjectFunction(),e.pixelRatio=i.getPixelRatio(),e.mrt=i.getMRT(),e.clearColor=i.getClearColor(e.clearColor||new Le),e.clearAlpha=i.getClearAlpha(),e.autoClear=i.autoClear,e.scissorTest=i.getScissorTest(),e}function CO(i,e){return e=RO(i,e),i.setMRT(null),i.setRenderObjectFunction(null),i.setClearColor(0,1),i.autoClear=!0,e}function NO(i,e){i.toneMapping=e.toneMapping,i.toneMappingExposure=e.toneMappingExposure,i.outputColorSpace=e.outputColorSpace,i.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),i.setRenderObjectFunction(e.renderObjectFunction),i.setPixelRatio(e.pixelRatio),i.setMRT(e.mrt),i.setClearColor(e.clearColor,e.clearAlpha),i.autoClear=e.autoClear,i.setScissorTest(e.scissorTest)}function PO(i,e={}){return e.background=i.background,e.backgroundNode=i.backgroundNode,e.overrideMaterial=i.overrideMaterial,e}function DO(i,e){return e=PO(i,e),i.background=null,i.backgroundNode=null,i.overrideMaterial=null,e}function LO(i,e){i.background=e.background,i.backgroundNode=e.backgroundNode,i.overrideMaterial=e.overrideMaterial}function IO(i,e,t){return t=CO(i,t),t=DO(e,t),t}function UO(i,e,t){NO(i,t),LO(e,t)}const my=new WeakMap,FO=de(([i,e,t])=>{let n=ac.sub(i).length();return n=n.sub(e).div(t.sub(e)),n=n.saturate(),n}),BO=i=>{const e=i.shadow.camera,t=Dt("near","float",e).setGroup(qe),n=Dt("far","float",e).setGroup(qe),r=wI(i);return FO(r,t,n)},OO=i=>{let e=my.get(i);if(e===void 0){const t=i.isPointLight?BO(i):null;e=new yn,e.colorNode=Qe(0,0,0,1),e.depthNode=t,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,my.set(i,e)}return e},kO=de(({depthTexture:i,shadowCoord:e})=>yt(i,e.xy).compare(e.z)),GO=de(({depthTexture:i,shadowCoord:e,shadow:t})=>{const n=(_,g)=>yt(i,_).compare(g),r=Dt("mapSize","vec2",t).setGroup(qe),s=Dt("radius","float",t).setGroup(qe),o=_e(1).div(r),a=o.x.negate().mul(s),l=o.y.negate().mul(s),c=o.x.mul(s),u=o.y.mul(s),h=a.div(2),d=l.div(2),f=c.div(2),p=u.div(2);return qn(n(e.xy.add(_e(a,l)),e.z),n(e.xy.add(_e(0,l)),e.z),n(e.xy.add(_e(c,l)),e.z),n(e.xy.add(_e(h,d)),e.z),n(e.xy.add(_e(0,d)),e.z),n(e.xy.add(_e(f,d)),e.z),n(e.xy.add(_e(a,0)),e.z),n(e.xy.add(_e(h,0)),e.z),n(e.xy,e.z),n(e.xy.add(_e(f,0)),e.z),n(e.xy.add(_e(c,0)),e.z),n(e.xy.add(_e(h,p)),e.z),n(e.xy.add(_e(0,p)),e.z),n(e.xy.add(_e(f,p)),e.z),n(e.xy.add(_e(a,u)),e.z),n(e.xy.add(_e(0,u)),e.z),n(e.xy.add(_e(c,u)),e.z)).mul(1/17)}),zO=de(({depthTexture:i,shadowCoord:e,shadow:t})=>{const n=(u,h)=>yt(i,u).compare(h),r=Dt("mapSize","vec2",t).setGroup(qe),s=_e(1).div(r),o=s.x,a=s.y,l=e.xy,c=xs(l.mul(r).add(.5));return l.subAssign(c.mul(s)),qn(n(l,e.z),n(l.add(_e(o,0)),e.z),n(l.add(_e(0,a)),e.z),n(l.add(s),e.z),kt(n(l.add(_e(o.negate(),0)),e.z),n(l.add(_e(o.mul(2),0)),e.z),c.x),kt(n(l.add(_e(o.negate(),a)),e.z),n(l.add(_e(o.mul(2),a)),e.z),c.x),kt(n(l.add(_e(0,a.negate())),e.z),n(l.add(_e(0,a.mul(2))),e.z),c.y),kt(n(l.add(_e(o,a.negate())),e.z),n(l.add(_e(o,a.mul(2))),e.z),c.y),kt(kt(n(l.add(_e(o.negate(),a.negate())),e.z),n(l.add(_e(o.mul(2),a.negate())),e.z),c.x),kt(n(l.add(_e(o.negate(),a.mul(2))),e.z),n(l.add(_e(o.mul(2),a.mul(2))),e.z),c.x),c.y)).mul(1/9)}),VO=de(({depthTexture:i,shadowCoord:e})=>{const t=Q(1).toVar(),n=yt(i).sample(e.xy).rg,r=sb(e.z,n.x);return sn(r.notEqual(Q(1)),()=>{const s=e.z.sub(n.x),o=li(0,n.y.mul(n.y));let a=o.div(o.add(s.mul(s)));a=Vr(Qn(a,.3).div(.95-.3)),t.assign(Vr(li(r,a)))}),t}),HO=de(({samples:i,radius:e,size:t,shadowPass:n})=>{const r=Q(0).toVar(),s=Q(0).toVar(),o=i.lessThanEqual(Q(1)).select(Q(0),Q(2).div(i.sub(1))),a=i.lessThanEqual(Q(1)).select(Q(0),Q(-1));Yi({start:Xt(0),end:Xt(i),type:"int",condition:"<"},({i:c})=>{const u=a.add(Q(c).mul(o)),h=n.sample(qn(Kh.xy,_e(0,u).mul(e)).div(t)).x;r.addAssign(h),s.addAssign(h.mul(h))}),r.divAssign(i),s.divAssign(i);const l=Xm(s.sub(r.mul(r)));return _e(r,l)}),WO=de(({samples:i,radius:e,size:t,shadowPass:n})=>{const r=Q(0).toVar(),s=Q(0).toVar(),o=i.lessThanEqual(Q(1)).select(Q(0),Q(2).div(i.sub(1))),a=i.lessThanEqual(Q(1)).select(Q(0),Q(-1));Yi({start:Xt(0),end:Xt(i),type:"int",condition:"<"},({i:c})=>{const u=a.add(Q(c).mul(o)),h=n.sample(qn(Kh.xy,_e(u,0).mul(e)).div(t));r.addAssign(h.x),s.addAssign(qn(h.y.mul(h.y),h.x.mul(h.x)))}),r.divAssign(i),s.divAssign(i);const l=Xm(s.sub(r.mul(r)));return _e(r,l)}),$O=[kO,GO,zO,VO];let Pf;const Mu=new Qb;class oS extends AO{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0}setupShadowFilter(e,{filterFn:t,depthTexture:n,shadowCoord:r,shadow:s}){const o=r.x.greaterThanEqual(0).and(r.x.lessThanEqual(1)).and(r.y.greaterThanEqual(0)).and(r.y.lessThanEqual(1)).and(r.z.lessThanEqual(1)),a=t({depthTexture:n,shadowCoord:r,shadow:s});return o.select(a,Q(1))}setupShadowCoord(e,t){const{shadow:n}=this,{renderer:r}=e,s=Dt("bias","float",n).setGroup(qe);let o=t,a;if(n.camera.isOrthographicCamera||r.logarithmicDepthBuffer!==!0)o=o.xyz.div(o.w),a=o.z,r.coordinateSystem===gs&&(a=a.mul(2).sub(1));else{const l=o.w;o=o.xy.div(l);const c=Dt("near","float",n.camera).setGroup(qe),u=Dt("far","float",n.camera).setGroup(qe);a=Cb(l.negate(),c,u)}return o=ee(o.x,o.y.oneMinus(),a.add(s)),o}getShadowFilterFn(e){return $O[e]}setupShadow(e){const{renderer:t}=e,{light:n,shadow:r}=this,s=t.shadowMap.type,o=new Di(r.mapSize.width,r.mapSize.height);o.compareFunction=wh;const a=e.createRenderTarget(r.mapSize.width,r.mapSize.height);if(a.depthTexture=o,r.camera.updateProjectionMatrix(),s===vi){o.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:io,type:Fn}),this.vsmShadowMapHorizontal=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:io,type:Fn});const m=yt(o),v=yt(this.vsmShadowMapVertical.texture),x=Dt("blurSamples","float",r).setGroup(qe),y=Dt("radius","float",r).setGroup(qe),T=Dt("mapSize","vec2",r).setGroup(qe);let b=this.vsmMaterialVertical||(this.vsmMaterialVertical=new yn);b.fragmentNode=HO({samples:x,radius:y,size:T,shadowPass:m}).context(e.getSharedContext()),b.name="VSMVertical",b=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new yn),b.fragmentNode=WO({samples:x,radius:y,size:T,shadowPass:v}).context(e.getSharedContext()),b.name="VSMHorizontal"}const l=Dt("intensity","float",r).setGroup(qe),c=Dt("normalBias","float",r).setGroup(qe),u=eS(n).mul(sS.add(ig.mul(c))),h=this.setupShadowCoord(e,u),d=r.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(d===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=s===vi?this.vsmShadowMapHorizontal.texture:o,p=this.setupShadowFilter(e,{filterFn:d,shadowTexture:a.texture,depthTexture:f,shadowCoord:h,shadow:r}),_=yt(a.texture,h),g=kt(1,p.rgb.mix(_,1),l.mul(_.a)).toVar();return this.shadowMap=a,this.shadow.map=a,g}setup(e){if(e.renderer.shadowMap.enabled!==!1)return de(()=>{let t=this._node;return this.setupShadowPosition(e),t===null&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){const{shadow:t,shadowMap:n,light:r}=this,{renderer:s,scene:o}=e;t.updateMatrices(r),n.setSize(t.mapSize.width,t.mapSize.height),s.render(o,t.camera)}updateShadow(e){const{shadowMap:t,light:n,shadow:r}=this,{renderer:s,scene:o,camera:a}=e,l=s.shadowMap.type,c=t.depthTexture.version;this._depthVersionCached=c,r.camera.layers.mask=a.layers.mask;const u=s.getRenderObjectFunction(),h=s.getMRT(),d=h?h.has("velocity"):!1;Pf=IO(s,o,Pf),o.overrideMaterial=OO(n),s.setRenderObjectFunction((f,p,_,g,m,v,...x)=>{(f.castShadow===!0||f.receiveShadow&&l===vi)&&(d&&(Ox(f).useVelocity=!0),f.onBeforeShadow(s,f,a,r.camera,g,p.overrideMaterial,v),s.renderObject(f,p,_,g,m,v,...x),f.onAfterShadow(s,f,a,r.camera,g,p.overrideMaterial,v))}),s.setRenderTarget(t),this.renderShadow(e),s.setRenderObjectFunction(u),n.isPointLight!==!0&&l===vi&&this.vsmPass(s),UO(s,o,Pf)}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),Mu.material=this.vsmMaterialVertical,Mu.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),Mu.material=this.vsmMaterialHorizontal,Mu.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;let n=t.needsUpdate||t.autoUpdate;n&&(this._cameraFrameId[e.camera]===e.frameId&&(n=!1),this._cameraFrameId[e.camera]=e.frameId),n&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const qO=(i,e)=>he(new oS(i,e)),jO=new Le,rr=de(([i,e])=>{const t=i.toVar(),n=Ri(t),r=zr(1,li(n.x,li(n.y,n.z)));n.mulAssign(r),t.mulAssign(r.mul(e.mul(2).oneMinus()));const s=_e(t.xy).toVar(),a=e.mul(1.5).oneMinus();return sn(n.z.greaterThanEqual(a),()=>{sn(t.z.greaterThan(0),()=>{s.x.assign(Qn(4,t.x))})}).ElseIf(n.x.greaterThanEqual(a),()=>{const l=gh(t.x);s.x.assign(t.z.mul(l).add(l.mul(2)))}).ElseIf(n.y.greaterThanEqual(a),()=>{const l=gh(t.y);s.x.assign(t.x.add(l.mul(2)).add(2)),s.y.assign(t.z.mul(l).sub(2))}),_e(.125,.25).mul(s).add(_e(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),XO=de(({depthTexture:i,bd3D:e,dp:t,texelSize:n})=>yt(i,rr(e,n.y)).compare(t)),YO=de(({depthTexture:i,bd3D:e,dp:t,texelSize:n,shadow:r})=>{const s=Dt("radius","float",r).setGroup(qe),o=_e(-1,1).mul(s).mul(n.y);return yt(i,rr(e.add(o.xyy),n.y)).compare(t).add(yt(i,rr(e.add(o.yyy),n.y)).compare(t)).add(yt(i,rr(e.add(o.xyx),n.y)).compare(t)).add(yt(i,rr(e.add(o.yyx),n.y)).compare(t)).add(yt(i,rr(e,n.y)).compare(t)).add(yt(i,rr(e.add(o.xxy),n.y)).compare(t)).add(yt(i,rr(e.add(o.yxy),n.y)).compare(t)).add(yt(i,rr(e.add(o.xxx),n.y)).compare(t)).add(yt(i,rr(e.add(o.yxx),n.y)).compare(t)).mul(1/9)}),KO=de(({filterFn:i,depthTexture:e,shadowCoord:t,shadow:n})=>{const r=t.xyz.toVar(),s=r.length(),o=Je("float").setGroup(qe).onRenderUpdate(()=>n.camera.near),a=Je("float").setGroup(qe).onRenderUpdate(()=>n.camera.far),l=Dt("bias","float",n).setGroup(qe),c=Je(n.mapSize).setGroup(qe),u=Q(1).toVar();return sn(s.sub(a).lessThanEqual(0).and(s.sub(o).greaterThanEqual(0)),()=>{const h=s.sub(o).div(a.sub(o)).toVar();h.addAssign(l);const d=r.normalize(),f=_e(1).div(c.mul(_e(4,2)));u.assign(i({depthTexture:e,bd3D:d,dp:h,texelSize:f,shadow:n}))}),u}),gy=new We,Fo=new ae,cl=new ae;class ZO extends oS{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===mT?XO:YO}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:n,depthTexture:r,shadowCoord:s,shadow:o}){return KO({filterFn:t,shadowTexture:n,depthTexture:r,shadowCoord:s,shadow:o})}renderShadow(e){const{shadow:t,shadowMap:n,light:r}=this,{renderer:s,scene:o}=e,a=t.getFrameExtents();cl.copy(t.mapSize),cl.multiply(a),n.setSize(cl.width,cl.height),Fo.copy(t.mapSize);const l=s.autoClear,c=s.getClearColor(jO),u=s.getClearAlpha();s.autoClear=!1,s.setClearColor(t.clearColor,t.clearAlpha),s.clear();const h=t.getViewportCount();for(let d=0;d<h;d++){const f=t.getViewport(d),p=Fo.x*f.x,_=cl.y-Fo.y-Fo.y*f.y;gy.set(p,_,Fo.x*f.z,Fo.y*f.w),n.viewport.copy(gy),t.updateMatrices(r,d),s.render(o,t.camera)}s.autoClear=l,s.setClearColor(c,u)}}const QO=(i,e)=>he(new ZO(i,e));class ho extends Fa{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new Le,this.colorNode=e&&e.colorNode||Je(this.color).setGroup(qe),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=ct.FRAME}customCacheKey(){return nc(this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}getLightVector(e){return nS(this.light).sub(e.context.positionView||hn)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return qO(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){const r=this.light.shadow.shadowNode;let s;r!==void 0?s=he(r):s=this.setupShadowNode(),this.shadowNode=s,this.shadowColorNode=n=this.colorNode.mul(s),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),n=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),n&&e.lightsNode.setupDirectRectAreaLight(e,this,n)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const aS=de(({lightDistance:i,cutoffDistance:e,decayExponent:t})=>{const n=i.pow(t).max(.01).reciprocal();return e.greaterThan(0).select(n.mul(i.div(e).pow4().oneMinus().clamp().pow2()),n)}),JO=({color:i,lightVector:e,cutoffDistance:t,decayExponent:n})=>{const r=e.normalize(),s=e.length(),o=aS({lightDistance:s,cutoffDistance:t,decayExponent:n}),a=i.mul(o);return{lightDirection:r,lightColor:a}};class e3 extends ho{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=Je(0).setGroup(qe),this.decayExponentNode=Je(2).setGroup(qe)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return QO(this.light)}setupDirect(e){return JO({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}de(([i=Ec()],{renderer:e,material:t})=>{const n=Q(1).toVar(),r=lb(i.mul(2).sub(1));if(t.alphaToCoverage&&e.samples>1){const s=Q(r.fwidth()).toVar();n.assign(vs(s.oneMinus(),s.add(1),r).oneMinus())}else r.greaterThan(1).discard();return n});const t3=de(([i,e])=>{const t=i.x,n=i.y,r=i.z;let s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(2*.511664).mul(n)),s=s.add(e.element(2).mul(2*.511664).mul(r)),s=s.add(e.element(3).mul(2*.511664).mul(t)),s=s.add(e.element(4).mul(2*.429043).mul(t).mul(n)),s=s.add(e.element(5).mul(2*.429043).mul(n).mul(r)),s=s.add(e.element(6).mul(r.mul(r).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(2*.429043).mul(t).mul(r)),s=s.add(e.element(8).mul(.429043).mul(dt(t,t).sub(dt(n,n)))),s}),Hi=new ug;class n3 extends bs{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){const r=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background;let o=!1;if(s===null)r._clearColor.getRGB(Hi),Hi.a=r._clearColor.a;else if(s.isColor===!0)s.getRGB(Hi),Hi.a=1,o=!0;else if(s.isNode===!0){const l=this.get(e),c=s;Hi.copy(r._clearColor);let u=l.backgroundMesh;if(u===void 0){const d=Zm(Qe(c).mul(dy),{getUV:()=>aO.mul(vb),getTextureLevel:()=>oO});let f=Eb;f=f.setZ(f.w);const p=new yn;p.name="Background.material",p.side=It,p.depthTest=!1,p.depthWrite=!1,p.allowOverride=!1,p.fog=!1,p.lights=!1,p.vertexNode=f,p.colorNode=d,l.backgroundMeshNode=d,l.backgroundMesh=u=new tn(new Da(1,32,32),p),u.frustumCulled=!1,u.name="Background.mesh",u.onBeforeRender=function(_,g,m){this.matrixWorld.copyPosition(m.matrixWorld)}}const h=c.getCacheKey();l.backgroundCacheKey!==h&&(l.backgroundMeshNode.node=Qe(c).mul(dy),l.backgroundMeshNode.needsUpdate=!0,u.material.needsUpdate=!0,l.backgroundCacheKey=h),t.unshift(u,u.geometry,u.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);const a=r.xr.getEnvironmentBlendMode();if(a==="additive"?Hi.set(0,0,0,1):a==="alpha-blend"&&Hi.set(0,0,0,0),r.autoClear===!0||o===!0){const l=n.clearColorValue;l.r=Hi.r,l.g=Hi.g,l.b=Hi.b,l.a=Hi.a,(r.backend.isWebGLBackend===!0||r.alpha===!0)&&(l.r*=l.a,l.g*=l.a,l.b*=l.a),n.depthClearValue=r._clearDepth,n.stencilClearValue=r._clearStencil,n.clearColor=r.autoClearColor===!0,n.clearDepth=r.autoClearDepth===!0,n.clearStencil=r.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let i3=0;class wp{constructor(e="",t=[],n=0,r=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=r,this.id=i3++}}class r3{constructor(e,t,n,r,s,o,a,l,c,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=u,this.nodeAttributes=r,this.bindings=s,this.updateNodes=o,this.updateBeforeNodes=a,this.updateAfterNodes=l,this.observer=c,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const r=new wp(t.name,[],t.index,t);e.push(r);for(const s of t.bindings)r.bindings.push(s.clone())}else e.push(t);return e}}class _y{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}}class s3{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class lS{constructor(e,t,n=!1,r=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=n,this.count=r}}class o3 extends lS{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class a3{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let l3=0;class Df{constructor(e=null){this.id=l3++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class c3{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class Ss{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class u3 extends Ss{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class h3 extends Ss{constructor(e,t=new ae){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class d3 extends Ss{constructor(e,t=new N){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class f3 extends Ss{constructor(e,t=new We){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class p3 extends Ss{constructor(e,t=new Le){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class m3 extends Ss{constructor(e,t=new Ih){super(e,t),this.isMatrix2Uniform=!0,this.boundary=16,this.itemSize=4}}class g3 extends Ss{constructor(e,t=new Xe){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class _3 extends Ss{constructor(e,t=new ft){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class v3 extends u3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class y3 extends h3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class x3 extends d3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class b3 extends f3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class S3 extends p3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class T3 extends m3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class M3 extends g3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class E3 extends _3{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const vy=new WeakMap,w3=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Eu=i=>/e/g.test(i)?String(i).replace(/\+/g,""):(i=Number(i),i+(i%1?"":".0"));class cS{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=Af(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Df,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}getBindGroupsCache(){let e=vy.get(this.renderer);return e===void 0&&(e=new pr,vy.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new ao(e,t,n)}createCubeRenderTarget(e,t){return new Lb(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const n=this.getBindGroupsCache(),r=[];let s=!0;for(const a of t)r.push(a),s=s&&a.groupNode.shared!==!0;let o;return s?(o=n.get(r),o===void 0&&(o=new wp(e,r,this.bindingsIndexes[e].group,r),n.set(r,o))):o=new wp(e,r,this.bindingsIndexes[e].group,r),o}getBindGroupArray(e,t){const n=this.bindings[t];let r=n[e];return r===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=r=[]),r}getBindings(){let e=this.bindGroups;if(e===null){const t={},n=this.bindings;for(const r of gv)for(const s in n[r]){const o=n[r][s];(t[s]||(t[s]=[])).push(...o)}e=[];for(const r in t){const s=t[r],o=this._getBindGroup(r,s);e.push(o)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,n)=>t.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==ct.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==ct.NONE&&this.updateBeforeNodes.push(e.getSelf()),n!==ct.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===en||e.magFilter===Yo||e.magFilter===Lr||e.magFilter===Jn||e.minFilter===en||e.minFilter===Yo||e.minFilter===Lr||e.minFilter===Jn}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const n=this.getDataFromNode(e);return n.cache===void 0&&(n.cache=new Df(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,n=null){let r=this.generateArrayDeclaration(e,t)+"( ";for(let s=0;s<t;s++){const o=n?n[s]:null;o!==null?r+=o.build(this,e):r+=this.generateConst(e),s<t-1&&(r+=", ")}return r+=" )",r}generateStruct(e,t,n=null){const r=[];for(const s of t){const{name:o,type:a}=s;n&&n[o]&&n[o].isNode?r.push(n[o].build(this,a)):r.push(this.generateConst(a))}return e+"( "+r.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new Le:e==="vec2"?t=new ae:e==="vec3"?t=new N:e==="vec4"&&(t=new We)),e==="float")return Eu(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Eu(t.r)}, ${Eu(t.g)}, ${Eu(t.b)} )`;const n=this.getTypeLength(e),r=this.getComponentType(e),s=o=>this.generateConst(r,o);if(n===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(n===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(n===4&&e!=="mat2")return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(n>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const n=this.attributes;for(const s of n)if(s.name===e)return s;const r=new _y(e,t);return this.registerDeclaration(r),n.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===Sn)return"int";if(t===Lt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let n=nL(e);const r=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(n=n.replace("vec","mat")),r+n}getTypeFromArray(e){return w3.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const n=t.array,r=e.itemSize,s=e.normalized;let o;return!(e instanceof v0)&&s!==!0&&(o=this.getTypeFromArray(n)),this.getTypeFromLength(r,o)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return n!==null?Number(n[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Af(this.stack),this.stacks.push(Hx()||this.stack),hh(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,hh(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){n=n===null?e.isGlobal(this)?this.globalCache:this.cache:n;let r=n.getData(e);return r===void 0&&(r={},n.setData(e,r)),r[t]===void 0&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const n=this.getDataFromNode(e);let r=n.bufferAttribute;if(r===void 0){const s=this.uniforms.index++;r=new _y("nodeAttribute"+s,t,e),this.bufferAttributes.push(r),n.bufferAttribute=r}return r}getStructTypeFromNode(e,t,n=null,r=this.shaderStage){const s=this.getDataFromNode(e,r,this.globalCache);let o=s.structType;if(o===void 0){const a=this.structs.index++;n===null&&(n="StructType"+a),o=new c3(n,t),this.structs[r].push(o),s.structType=o}return o}getOutputStructTypeFromNode(e,t){const n=this.getStructTypeFromNode(e,t,"OutputType","fragment");return n.output=!0,n}getUniformFromNode(e,t,n=this.shaderStage,r=null){const s=this.getDataFromNode(e,n,this.globalCache);let o=s.uniform;if(o===void 0){const a=this.uniforms.index++;o=new s3(r||"nodeUniform"+a,t,e),this.uniforms[n].push(o),this.registerDeclaration(o),s.uniform=o}return o}getArrayCount(e){let t=null;return e.isArrayNode?t=e.count:e.isVarNode&&e.node.isArrayNode&&(t=e.node.count),t}getVarFromNode(e,t=null,n=e.getNodeType(this),r=this.shaderStage,s=!1){const o=this.getDataFromNode(e,r);let a=o.variable;if(a===void 0){const l=s?"_const":"_var",c=this.vars[r]||(this.vars[r]=[]),u=this.vars[l]||(this.vars[l]=0);t===null&&(t=(s?"nodeConst":"nodeVar")+u,this.vars[l]++);const h=this.getArrayCount(e);a=new lS(t,n,s,h),s||c.push(a),this.registerDeclaration(a),o.variable=a}return a}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,n=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let s=r.varying;if(s===void 0){const o=this.varyings,a=o.length;t===null&&(t="nodeVarying"+a),s=new o3(t,n),o.push(s),this.registerDeclaration(s),r.varying=s}return s}registerDeclaration(e){const t=this.shaderStage,n=this.declarations[t]||(this.declarations[t]={}),r=this.getPropertyName(e);let s=1,o=r;for(;n[o]!==void 0;)o=r+"_"+s++;n[o]=e,s>1&&(e.name=o,console.warn(`THREE.TSL: Declaration name '${r}' of '${e.type}' already in use. Renamed to '${o}'.`))}getCodeFromNode(e,t,n=this.shaderStage){const r=this.getDataFromNode(e);let s=r.code;if(s===void 0){const o=this.codes[n]||(this.codes[n]=[]),a=o.length;s=new a3("nodeCode"+a,t),o.push(s),r.code=s}return s}addFlowCodeHierarchy(e,t){const{flowCodes:n,flowCodeBlock:r}=this.getDataFromNode(e);let s=!0,o=t;for(;o;){if(r.get(o)===!0){s=!1;break}o=this.getDataFromNode(o).parentNodeBlock}if(s)for(const a of n)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,n){const r=this.getDataFromNode(e),s=r.flowCodes||(r.flowCodes=[]),o=r.flowCodeBlock||(r.flowCodeBlock=new WeakMap);s.push(t),o.set(n,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new yO,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){const t=e.layout,n={[Symbol.iterator](){let o=0;const a=Object.values(this);return{next:()=>({value:a[o],done:o++>=a.length})}}};for(const o of t.inputs)n[o.name]=new tO(o.type,o.name);e.layout=null;const r=e.call(n),s=this.flowStagesNode(r,t.type);return e.layout=t,s}flowStagesNode(e,t=null){const n=this.flow,r=this.vars,s=this.declarations,o=this.cache,a=this.buildStage,l=this.stack,c={code:""};this.flow=c,this.vars={},this.declarations={},this.cache=new Df,this.stack=Af();for(const u of mv)this.setBuildStage(u),c.result=e.build(this,t);return c.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=r,this.declarations=s,this.cache=o,this.stack=l,this.setBuildStage(a),c}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,t=null){const n=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=n,r}flowNodeFromShaderStage(e,t,n=null,r=null){const s=this.shaderStage;this.setShaderStage(e);const o=this.flowChildNode(t,n);return r!==null&&(o.code+=`${this.tab+r} = ${o.result};
`),this.flowCode[e]=this.flowCode[e]+o.code,this.setShaderStage(s),o}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,n=null){return`${n!==null?this.generateArrayDeclaration(e,n):this.getType(e)} ${t}`}getVars(e){let t="";const n=this.vars[e];if(n!==void 0)for(const r of n)t+=`${this.getVar(r.type,r.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";if(t!==void 0)for(const r of t)n+=r.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:n}=this;if(t!==null){let r=n.library.fromMaterial(t);r===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),r=new yn),r.build(this)}else this.addFlow("compute",e);for(const r of mv){this.setBuildStage(r),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const s of gv){this.setShaderStage(s);const o=this.flowNodes[s];for(const a of o)r==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new v3(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new y3(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new x3(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new b3(e);if(t==="color")return new S3(e);if(t==="mat2")return new T3(e);if(t==="mat3")return new M3(e);if(t==="mat4")return new E3(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,n){if(t=this.getVectorType(t),n=this.getVectorType(n),t===n||n===null||this.isReference(n))return e;const r=this.getTypeLength(t),s=this.getTypeLength(n);return r===16&&s===9?`${this.getType(n)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:r===9&&s===4?`${this.getType(n)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:r>4||s>4||s===0?e:r===s?`${this.getType(n)}( ${e} )`:r>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(t)),n):s===4&&r>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:r===2?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(r===1&&s>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r${Ra} - Node System
`}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}}class yy{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return n===void 0&&(n={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,n)),n}updateBeforeNode(e){const t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===ct.FRAME){const{frameMap:r}=this._getMaps(this.updateBeforeMap,n);r.get(n)!==this.frameId&&e.updateBefore(this)!==!1&&r.set(n,this.frameId)}else if(t===ct.RENDER){const{renderMap:r}=this._getMaps(this.updateBeforeMap,n);r.get(n)!==this.renderId&&e.updateBefore(this)!==!1&&r.set(n,this.renderId)}else t===ct.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===ct.FRAME){const{frameMap:r}=this._getMaps(this.updateAfterMap,n);r.get(n)!==this.frameId&&e.updateAfter(this)!==!1&&r.set(n,this.frameId)}else if(t===ct.RENDER){const{renderMap:r}=this._getMaps(this.updateAfterMap,n);r.get(n)!==this.renderId&&e.updateAfter(this)!==!1&&r.set(n,this.renderId)}else t===ct.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),n=e.updateReference(this);if(t===ct.FRAME){const{frameMap:r}=this._getMaps(this.updateMap,n);r.get(n)!==this.frameId&&e.update(this)!==!1&&r.set(n,this.frameId)}else if(t===ct.RENDER){const{renderMap:r}=this._getMaps(this.updateMap,n);r.get(n)!==this.renderId&&e.update(this)!==!1&&r.set(n,this.renderId)}else t===ct.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class hg{constructor(e,t,n=null,r="",s=!1){this.type=e,this.name=t,this.count=n,this.qualifier=r,this.isConst=s}}hg.isNodeFunctionInput=!0;class A3 extends ho{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:iS(this.light),lightColor:e}}}const Lf=new ft,wu=new ft;let ul=null;class R3 extends ho{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=Je(new N).setGroup(qe),this.halfWidth=Je(new N).setGroup(qe),this.updateType=ct.RENDER}update(e){super.update(e);const{light:t}=this,n=e.camera.matrixWorldInverse;wu.identity(),Lf.copy(t.matrixWorld),Lf.premultiply(n),wu.extractRotation(Lf),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(wu),this.halfHeight.value.applyMatrix4(wu)}setupDirectRectArea(e){let t,n;e.isAvailable("float32Filterable")?(t=yt(ul.LTC_FLOAT_1),n=yt(ul.LTC_FLOAT_2)):(t=yt(ul.LTC_HALF_1),n=yt(ul.LTC_HALF_2));const{colorNode:r,light:s}=this,o=nS(s);return{lightColor:r,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:n}}static setLTC(e){ul=e}}class uS extends ho{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=Je(0).setGroup(qe),this.penumbraCosNode=Je(0).setGroup(qe),this.cutoffDistanceNode=Je(0).setGroup(qe),this.decayExponentNode=Je(0).setGroup(qe)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:n}=this;return vs(t,n,e)}setupDirect(e){const{colorNode:t,cutoffDistanceNode:n,decayExponentNode:r,light:s}=this,o=this.getLightVector(e),a=o.normalize(),l=a.dot(iS(s)),c=this.getSpotAttenuation(l),u=o.length(),h=aS({lightDistance:u,cutoffDistance:n,decayExponent:r});let d=t.mul(c).mul(h);if(s.map){const f=TO(s,e.context.positionWorld),p=yt(s.map,f.xy).onRenderUpdate(()=>s.map);d=f.mul(2).sub(1).abs().lessThan(1).all().select(d.mul(p),d)}return{lightColor:d,lightDirection:a}}}class C3 extends uS{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let n=null;if(t&&t.isTexture===!0){const r=e.acos().mul(1/Math.PI);n=yt(t,_e(r,0),0).r}else n=super.getSpotAttenuation(e);return n}}class N3 extends ho{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class P3 extends ho{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=tS(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Je(new Le).setGroup(qe)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:r}=this,o=er.dot(r).mul(.5).add(.5),a=kt(n,t,o);e.context.irradiance.addAssign(a)}}class D3 extends ho{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let n=0;n<9;n++)t.push(new N);this.lightProbe=ar(t)}update(e){const{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){const t=t3(vb,this.lightProbe);e.context.irradiance.addAssign(t)}}class hS{parseFunction(){console.warn("Abstract function.")}}class dg{constructor(e,t,n="",r=""){this.type=e,this.inputs=t,this.name=n,this.precision=r}getCode(){console.warn("Abstract function.")}}dg.isNodeFunction=!0;const L3=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,I3=/[a-z_0-9]+/ig,xy="#pragma main",U3=i=>{i=i.trim();const e=i.indexOf(xy),t=e!==-1?i.slice(e+xy.length):i,n=t.match(L3);if(n!==null&&n.length===5){const r=n[4],s=[];let o=null;for(;(o=I3.exec(r))!==null;)s.push(o);const a=[];let l=0;for(;l<s.length;){const p=s[l][0]==="const";p===!0&&l++;let _=s[l][0];_==="in"||_==="out"||_==="inout"?l++:_="";const g=s[l++][0];let m=Number.parseInt(s[l][0]);Number.isNaN(m)===!1?l++:m=null;const v=s[l++][0];a.push(new hg(g,v,m,_,p))}const c=t.substring(n[0].length),u=n[3]!==void 0?n[3]:"",h=n[2],d=n[1]!==void 0?n[1]:"",f=e!==-1?i.slice(0,e):"";return{type:h,inputs:a,name:u,precision:d,inputsCode:r,blockCode:c,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class F3 extends dg{constructor(e){const{type:t,inputs:n,name:r,precision:s,inputsCode:o,blockCode:a,headerCode:l}=U3(e);super(t,n,r,s),this.inputsCode=o,this.blockCode=a,this.headerCode=l}getCode(e=this.name){let t;const n=this.blockCode;if(n!==""){const{type:r,inputsCode:s,headerCode:o,precision:a}=this;let l=`${r} ${e} ( ${s.trim()} )`;a!==""&&(l=`${a} ${l}`),t=o+l+n}else t="";return t}}class B3 extends hS{parseFunction(e){return new F3(e)}}const by=new WeakMap,nr=[],Bo=[];class O3 extends bs{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new yy,this.nodeBuilderCache=new Map,this.callHashCache=new pr,this.groupsData=new pr,this.cacheLib={}}updateGroup(e){const t=e.groupNode,n=t.name;if(n===qx.name)return!0;if(n===qe.name){const s=this.get(e),o=this.nodeFrame.renderId;return s.renderId!==o?(s.renderId=o,!0):!1}if(n===GL.name){const s=this.get(e),o=this.nodeFrame.frameId;return s.frameId!==o?(s.frameId=o,!0):!1}nr[0]=t,nr[1]=e;let r=this.groupsData.get(nr);return r===void 0&&this.groupsData.set(nr,r={}),nr.length=0,r.version!==t.version?(r.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const{nodeBuilderCache:r}=this,s=this.getForRenderCacheKey(e);if(n=r.get(s),n===void 0){const o=this.backend.createNodeBuilder(e.object,this.renderer);o.scene=e.scene,o.material=e.material,o.camera=e.camera,o.context.material=e.material,o.lightsNode=e.lightsNode,o.environmentNode=this.getEnvironmentNode(e.scene),o.fogNode=this.getFogNode(e.scene),o.clippingContext=e.clippingContext,o.build(),n=this._createNodeBuilderState(o),r.set(s,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),n=this._createNodeBuilderState(r),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new r3(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const n=this.get(e);n.environmentNode&&(t=n.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const n=this.get(e);n.backgroundNode&&(t=n.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){nr[0]=e,nr[1]=t;const n=this.renderer.info.calls,r=this.callHashCache.get(nr)||{};if(r.callId!==n){const s=this.getEnvironmentNode(e),o=this.getFogNode(e);t&&Bo.push(t.getCacheKey(!0)),s&&Bo.push(s.getCacheKey()),o&&Bo.push(o.getCacheKey()),Bo.push(this.renderer.shadowMap.enabled?1:0),r.callId=n,r.cacheKey=km(Bo),this.callHashCache.set(nr,r),Bo.length=0}return nr.length=0,r.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),n=e.background;if(n){const r=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==n||r){const s=this.getCacheNode("background",n,()=>{if(n.isCubeTexture===!0||n.mapping===ps||n.mapping===ms||n.mapping===eo){if(e.backgroundBlurriness>0||n.mapping===eo)return $b(n);{let o;return n.isCubeTexture===!0?o=lc(n):o=yt(n),Ub(o)}}else{if(n.isTexture===!0)return yt(n,cc.flipY()).setUpdateMatrix(!0);n.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",n)}},r);t.backgroundNode=s,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,n,r=!1){const s=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let o=s.get(t);return(o===void 0||r)&&(o=n(),s.set(t,o)),o}updateFog(e){const t=this.get(e),n=e.fog;if(n){if(t.fog!==n){const r=this.getCacheNode("fog",n,()=>{if(n.isFogExp2){const s=Dt("color","color",n).setGroup(qe),o=Dt("density","float",n).setGroup(qe);return py(s,bO(o))}else if(n.isFog){const s=Dt("color","color",n).setGroup(qe),o=Dt("near","float",n).setGroup(qe),a=Dt("far","float",n).setGroup(qe);return py(s,xO(o,a))}else console.error("THREE.Renderer: Unsupported fog configuration.",n)});t.fogNode=r,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),n=e.environment;if(n){if(t.environment!==n){const r=this.getCacheNode("environment",n,()=>{if(n.isCubeTexture===!0)return lc(n);if(n.isTexture===!0)return yt(n);console.error("Nodes: Unsupported environment configuration.",n)});t.environmentNode=r,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,r=null,s=null){const o=this.nodeFrame;return o.renderer=e,o.scene=t,o.object=n,o.camera=r,o.material=s,o}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return by.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,n=this.getOutputCacheKey(),r=yt(e,cc).renderOutput(t.toneMapping,t.currentColorSpace);return by.set(e,n),r}updateBefore(e){const t=e.getNodeBuilderState();for(const n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){const t=e.getNodeBuilderState();for(const n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){const t=this.getNodeFrame(),n=this.getForCompute(e);for(const r of n.updateNodes)t.updateNode(r)}updateForRender(e){const t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(const r of n.updateNodes)t.updateNode(r)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new yy,this.nodeBuilderCache=new Map,this.cacheLib={}}}const If=new ji;class _h{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Xe,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,n){const r=e.length;for(let s=0;s<r;s++){If.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const o=t[n+s],a=If.normal;o.x=-a.x,o.y=-a.y,o.z=-a.z,o.w=If.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let n=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const r=t.clippingPlanes,s=r.length;let o,a;if(this.clipIntersection?(o=this.intersectionPlanes,a=e.intersectionPlanes.length):(o=this.unionPlanes,a=e.unionPlanes.length),o.length!==a+s){o.length=a+s;for(let l=0;l<s;l++)o[a+l]=new We;n=!0}this.projectPlanes(r,o,a),n&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new _h(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class k3{constructor(e,t){this.bundleGroup=e,this.camera=t}}const hl=[];class G3{constructor(){this.bundles=new pr}get(e,t){const n=this.bundles;hl[0]=e,hl[1]=t;let r=n.get(hl);return r===void 0&&(r=new k3(e,t),n.set(hl,r)),hl.length=0,r}dispose(){this.bundles=new pr}}class dS{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const n=this.getMaterialNodeClass(e.type);if(n!==null){t=new n;for(const r in e)t[r]=e[r]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}addClass(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}}const z3=new rS,dl=[];class V3 extends pr{constructor(){super()}createNode(e=[]){return new rS().setLights(e)}getNode(e,t){if(e.isQuadMesh)return z3;dl[0]=e,dl[1]=t;let n=this.get(dl);return n===void 0&&(n=this.createNode(),this.set(dl,n)),dl.length=0,n}}class bl extends ao{constructor(e=1,t=1,n={}){super(e,t,n),this.isXRRenderTarget=!0,this.hasExternalTextures=!1,this.autoAllocateDepthBuffer=!0}copy(e){return super.copy(e),this.hasExternalTextures=e.hasExternalTextures,this.autoAllocateDepthBuffer=e.autoAllocateDepthBuffer,this}}const Sy=new N,Ty=new N;class H3 extends Wr{constructor(e){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new Tn,this._cameraL.viewport=new We,this._cameraR=new Tn,this._cameraR.viewport=new We,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new D0,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._supportsLayers=!1,this._createXRLayer=Y3.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new ae,this._onSessionEvent=q3.bind(this),this._onSessionEnd=j3.bind(this),this._onInputSourcesChange=X3.bind(this),this._onAnimationFrame=K3.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers=typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}createQuadLayer(e,t,n,r,s,o,a,l=[]){const c=new vc(e,t),u=new bl(s,o,{format:Qt,type:Zt,depthTexture:new Di(s,o,l.stencil?xi:Lt,void 0,void 0,void 0,void 0,void 0,void 0,l.stencil?Si:bi),stencilBuffer:l.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),h=new or({color:16777215,side:ri});h.map=u.texture,h.map.offset.y=1,h.map.repeat.y=-1;const d=new tn(c,h);d.position.copy(n),d.quaternion.copy(r);const f={type:"quad",width:e,height:t,translation:n,quaternion:r,pixelwidth:s,pixelheight:o,plane:d,material:h,rendercall:a,renderTarget:u};if(this._layers.push(f),this._session!==null){f.plane.material=new or({color:16777215,side:ri}),f.plane.material.blending=Xo,f.plane.material.blendEquation=In,f.plane.material.blendSrc=Er,f.plane.material.blendDst=Er,f.xrlayer=this._createXRLayer(f);const p=this._session.renderState.layers;p.unshift(f.xrlayer),this._session.updateRenderState({layers:p})}else u.isXRRenderTarget=!1;return d}createCylinderLayer(e,t,n,r,s,o,a,l,c=[]){const u=new _c(e,e,e*t/n,64,64,!0,Math.PI-t/2,t),h=new bl(o,a,{format:Qt,type:Zt,depthTexture:new Di(o,a,c.stencil?xi:Lt,void 0,void 0,void 0,void 0,void 0,void 0,c.stencil?Si:bi),stencilBuffer:c.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),d=new or({color:16777215,side:It});d.map=h.texture,d.map.offset.y=1,d.map.repeat.y=-1;const f=new tn(u,d);f.position.copy(r),f.quaternion.copy(s);const p={type:"cylinder",radius:e,centralAngle:t,aspectratio:n,translation:r,quaternion:s,pixelwidth:o,pixelheight:a,plane:f,material:d,rendercall:l,renderTarget:h};if(this._layers.push(p),this._session!==null){p.plane.material=new or({color:16777215,side:It}),p.plane.material.blending=Xo,p.plane.material.blendEquation=In,p.plane.material.blendSrc=Er,p.plane.material.blendDst=Er,p.xrlayer=this._createXRLayer(p);const _=this._session.renderState.layers;_.unshift(p.xrlayer),this._session.updateRenderState({layers:_})}else h.isXRRenderTarget=!1;return f}renderLayers(){const e=new N,t=new Ji,n=this.isPresenting;this.isPresenting=!1;for(const r of this._layers){if(r.renderTarget.isXRRenderTarget=this._session!==null,r.renderTarget.hasExternalTextures=r.renderTarget.isXRRenderTarget,r.renderTarget.autoAllocateDepthBuffer=!r.renderTarget.isXRRenderTarget,r.renderTarget.isXRRenderTarget&&this._supportsLayers){r.xrlayer.transform=new XRRigidTransform(r.plane.getWorldPosition(e),r.plane.getWorldQuaternion(t));const s=this._glBinding.getSubImage(r.xrlayer,this._xrFrame);this._renderer.backend.setXRRenderTargetTextures(r.renderTarget,s.colorTexture,s.depthStencilTexture)}this._renderer.setRenderTarget(r.renderTarget),r.rendercall()}this.isPresenting=n,this._renderer.setRenderTarget(null)}getSession(){return this._session}async setSession(e){const t=this._renderer,n=t.backend;this._gl=t.getContext();const r=this._gl,s=r.getContextAttributes();if(this._session=e,e!==null){if(n.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await n.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._useLayers===!0){let o=null,a=null,l=null;t.depth&&(l=t.stencil?r.DEPTH24_STENCIL8:r.DEPTH_COMPONENT24,o=t.stencil?Si:bi,a=t.stencil?xi:Lt);const c={colorFormat:r.RGBA8,depthFormat:l,scaleFactor:this._framebufferScaleFactor},u=new XRWebGLBinding(e,r),h=u.createProjectionLayer(c),d=[h];if(this._glBinding=u,this._glProjLayer=h,t.setPixelRatio(1),t.setSize(h.textureWidth,h.textureHeight,!1),this._xrRenderTarget=new bl(h.textureWidth,h.textureHeight,{format:Qt,type:Zt,colorSpace:t.outputColorSpace,depthTexture:new Di(h.textureWidth,h.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,o),stencilBuffer:t.stencil,samples:s.antialias?4:0,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1}),this._xrRenderTarget.hasExternalTextures=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._supportsLayers=e.enabledFeatures.includes("layers"),this._supportsLayers)for(const f of this._layers)f.plane.material=new or({color:16777215,side:f.type==="cylinder"?It:ri}),f.plane.material.blending=Xo,f.plane.material.blendEquation=In,f.plane.material.blendSrc=Er,f.plane.material.blendDst=Er,f.xrlayer=this._createXRLayer(f),d.unshift(f.xrlayer);e.updateRenderState({layers:d})}else{const o={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},a=new XRWebGLLayer(e,r,o);this._glBaseLayer=a,e.updateRenderState({baseLayer:a}),t.setPixelRatio(1),t.setSize(a.framebufferWidth,a.framebufferHeight,!1),this._xrRenderTarget=new bl(a.framebufferWidth,a.framebufferHeight,{format:Qt,type:Zt,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:a.ignoreDepthValues===!1,resolveStencilBuffer:a.ignoreDepthValues===!1})}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(t===null)return;const n=e.near,r=e.far,s=this._cameraXR,o=this._cameraL,a=this._cameraR;s.near=a.near=o.near=n,s.far=a.far=o.far=r,(this._currentDepthNear!==s.near||this._currentDepthFar!==s.far)&&(t.updateRenderState({depthNear:s.near,depthFar:s.far}),this._currentDepthNear=s.near,this._currentDepthFar=s.far),o.layers.mask=e.layers.mask|2,a.layers.mask=e.layers.mask|4,s.layers.mask=o.layers.mask|a.layers.mask;const l=e.parent,c=s.cameras;My(s,l);for(let u=0;u<c.length;u++)My(c[u],l);c.length===2?W3(s,o,a):s.projectionMatrix.copy(o.projectionMatrix),$3(e,s,l)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new Gu,this._controllers[e]=t),t}}function W3(i,e,t){Sy.setFromMatrixPosition(e.matrixWorld),Ty.setFromMatrixPosition(t.matrixWorld);const n=Sy.distanceTo(Ty),r=e.projectionMatrix.elements,s=t.projectionMatrix.elements,o=r[14]/(r[10]-1),a=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],u=(r[8]-1)/r[0],h=(s[8]+1)/s[0],d=o*u,f=o*h,p=n/(-u+h),_=p*-u;if(e.matrixWorld.decompose(i.position,i.quaternion,i.scale),i.translateX(_),i.translateZ(p),i.matrixWorld.compose(i.position,i.quaternion,i.scale),i.matrixWorldInverse.copy(i.matrixWorld).invert(),r[10]===-1)i.projectionMatrix.copy(e.projectionMatrix),i.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const g=o+p,m=a+p,v=d-_,x=f+(n-_),y=l*a/m*g,T=c*a/m*g;i.projectionMatrix.makePerspective(v,x,y,T,g,m),i.projectionMatrixInverse.copy(i.projectionMatrix).invert()}}function My(i,e){e===null?i.matrixWorld.copy(i.matrix):i.matrixWorld.multiplyMatrices(e.matrixWorld,i.matrix),i.matrixWorldInverse.copy(i.matrixWorld).invert()}function $3(i,e,t){t===null?i.matrix.copy(e.matrixWorld):(i.matrix.copy(t.matrixWorld),i.matrix.invert(),i.matrix.multiply(e.matrixWorld)),i.matrix.decompose(i.position,i.quaternion,i.scale),i.updateMatrixWorld(!0),i.projectionMatrix.copy(e.projectionMatrix),i.projectionMatrixInverse.copy(e.projectionMatrixInverse),i.isPerspectiveCamera&&(i.fov=ro*2*Math.atan(1/i.projectionMatrix.elements[5]),i.zoom=1)}function q3(i){const e=this._controllerInputSources.indexOf(i.inputSource);if(e===-1)return;const t=this._controllers[e];if(t!==void 0){const n=this.getReferenceSpace();t.update(i.inputSource,i.frame,n),t.dispatchEvent({type:i.type,data:i.inputSource})}}function j3(){const i=this._session,e=this._renderer;i.removeEventListener("select",this._onSessionEvent),i.removeEventListener("selectstart",this._onSessionEvent),i.removeEventListener("selectend",this._onSessionEvent),i.removeEventListener("squeeze",this._onSessionEvent),i.removeEventListener("squeezestart",this._onSessionEvent),i.removeEventListener("squeezeend",this._onSessionEvent),i.removeEventListener("end",this._onSessionEnd),i.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){const n=this._controllerInputSources[t];n!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(n))}if(this._currentDepthNear=null,this._currentDepthFar=null,e.backend.setXRTarget(null),e.setOutputRenderTarget(null),e.setRenderTarget(null),this._session=null,this._xrRenderTarget=null,this._supportsLayers===!0)for(const t of this._layers)t.renderTarget=new bl(t.pixelwidth,t.pixelheight,{format:Qt,type:Zt,depthTexture:new Di(t.pixelwidth,t.pixelheight,t.stencilBuffer?xi:Lt,void 0,void 0,void 0,void 0,void 0,void 0,t.stencilBuffer?Si:bi),stencilBuffer:t.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),t.renderTarget.isXRRenderTarget=!1,t.plane.material=t.material,t.material.map=t.renderTarget.texture,delete t.xrlayer;this.isPresenting=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function X3(i){const e=this._controllers,t=this._controllerInputSources;for(let n=0;n<i.removed.length;n++){const r=i.removed[n],s=t.indexOf(r);s>=0&&(t[s]=null,e[s].disconnect(r))}for(let n=0;n<i.added.length;n++){const r=i.added[n];let s=t.indexOf(r);if(s===-1){for(let a=0;a<e.length;a++)if(a>=t.length){t.push(r),s=a;break}else if(t[a]===null){t[a]=r,s=a;break}if(s===-1)break}const o=e[s];o&&o.connect(r)}}function Y3(i){return i.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(i.translation,i.quaternion),depthFormat:this._gl.DEPTH_COMPONENT,width:i.width/2,height:i.height/2,space:this._referenceSpace,viewPixelWidth:i.pixelwidth,viewPixelHeight:i.pixelheight}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(i.translation,i.quaternion),depthFormat:this._gl.DEPTH_COMPONENT,radius:i.radius,centralAngle:i.centralAngle,aspectRatio:i.aspectRatio,space:this._referenceSpace,viewPixelWidth:i.pixelwidth,viewPixelHeight:i.pixelheight})}function K3(i,e){if(e===void 0)return;const t=this._cameraXR,n=this._renderer,r=n.backend,s=this._glBaseLayer,o=this.getReferenceSpace(),a=e.getViewerPose(o);if(this._xrFrame=e,a!==null){const l=a.views;this._glBaseLayer!==null&&r.setXRTarget(s.framebuffer);let c=!1;l.length!==t.cameras.length&&(t.cameras.length=0,c=!0);for(let u=0;u<l.length;u++){const h=l[u];let d;if(this._useLayers===!0){const p=this._glBinding.getViewSubImage(this._glProjLayer,h);d=p.viewport,u===0&&r.setXRRenderTargetTextures(this._xrRenderTarget,p.colorTexture,this._glProjLayer.ignoreDepthValues?void 0:p.depthStencilTexture)}else d=s.getViewport(h);let f=this._cameras[u];f===void 0&&(f=new Tn,f.layers.enable(u),f.viewport=new We,this._cameras[u]=f),f.matrix.fromArray(h.transform.matrix),f.matrix.decompose(f.position,f.quaternion,f.scale),f.projectionMatrix.fromArray(h.projectionMatrix),f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),f.viewport.set(d.x,d.y,d.width,d.height),u===0&&(t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),c===!0&&t.cameras.push(f)}n.setOutputRenderTarget(this._xrRenderTarget)}for(let l=0;l<this._controllers.length;l++){const c=this._controllerInputSources[l],u=this._controllers[l];c!==null&&u!==void 0&&u.update(c,e,o)}this._currentAnimationLoop&&this._currentAnimationLoop(i,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const Ey=new Nh,Au=new ae,Uf=new We,Ff=new Dh,Ru=new ft,ns=new We;class Z3{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:r=!0,depth:s=!0,stencil:o=!1,antialias:a=!1,samples:l=0,getFallback:c=null,colorBufferType:u=Fn}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=l||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=r,this.logarithmicDepthBuffer=n,this.outputColorSpace=Ie,this.toneMapping=oi,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=o,this.info=new kB,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new dS,this.lighting=new V3,this._getFallback=c,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new We(0,0,this._width,this._height),this._scissor=new We(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new Qb(new yn),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=this.alpha===!0?0:1;this._clearColor=new ug(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=u,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Vp},this.xr=new H3(this),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(d,f,p)=>{await this.compileAsync(d,f);const _=this._renderLists.get(d,f),g=this._renderContexts.get(d,f,this._renderTarget),m=d.overrideMaterial||p.material,v=this._objects.get(p,m,d,f,_.lightsNode,g,g.clippingContext),{fragmentShader:x,vertexShader:y}=v.getNodeBuilderState();return{fragmentShader:x,vertexShader:y}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(r){if(this._getFallback!==null)try{this.backend=n=this._getFallback(r),await n.init(this)}catch(s){t(s);return}else{t(r);return}}this._nodes=new O3(this,n),this._animation=new NB(this._nodes,this.info),this._attributes=new BB(n),this._background=new n3(this,this._nodes),this._geometries=new OB(this._attributes,this.info),this._textures=new eO(this,n,this.info),this._pipelines=new HB(n,this._nodes),this._bindings=new WB(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new IB(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new jB(this.lighting),this._bundles=new G3,this._renderContexts=new QB,this._animation.start(),this._initialized=!0,e(this)}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const r=this._nodes.nodeFrame,s=r.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,l=this._compilationPromises,c=e.isScene===!0?e:Ey;n===null&&(n=e);const u=this._renderTarget,h=this._renderContexts.get(n,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,r.renderId++,r.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new _h),h.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,u);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,h.clippingContext),n!==e&&n.traverseVisible(function(x){x.isLight&&x.layers.test(t.layers)&&p.pushLight(x)}),p.finish(),u!==null){this._textures.updateRenderTarget(u,d);const x=this._textures.get(u);h.textures=x.textures,h.depthTexture=x.depthTexture}else h.textures=null,h.depthTexture=null;this._background.update(c,p,h);const _=p.opaque,g=p.transparent,m=p.transparentDoublePass,v=p.lightsNode;this.opaque===!0&&_.length>0&&this._renderObjects(_,t,c,v),this.transparent===!0&&g.length>0&&this._renderTransparents(g,m,t,c,v),r.renderId=s,this._currentRenderContext=o,this._currentRenderObjectFunction=a,this._compilationPromises=l,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,n){const{bundleGroup:r,camera:s,renderList:o}=e,a=this._currentRenderContext,l=this._bundles.get(r,s),c=this.backend.get(l);c.renderContexts===void 0&&(c.renderContexts=new Set);const u=r.version!==c.version,h=c.renderContexts.has(a)===!1||u;if(c.renderContexts.add(a),h){this.backend.beginBundle(a),(c.renderObjects===void 0||u)&&(c.renderObjects=[]),this._currentRenderBundle=l;const{transparentDoublePass:d,transparent:f,opaque:p}=o;this.opaque===!0&&p.length>0&&this._renderObjects(p,s,t,n),this.transparent===!0&&f.length>0&&this._renderTransparents(f,d,s,t,n),this._currentRenderBundle=null,this.backend.finishBundle(a,l),c.version=r.version}else{const{renderObjects:d}=c;for(let f=0,p=d.length;f<p;f++){const _=d[f];this._nodes.needsRefresh(_)&&(this._nodes.updateBefore(_),this._nodes.updateForRender(_),this._bindings.updateForRender(_),this._nodes.updateAfter(_))}}this.backend.addBundle(a,l)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==oi===!1&&t!==hr===!1)return null;const{width:s,height:o}=this.getDrawingBufferSize(Au),{depth:a,stencil:l}=this;let c=this._frameBufferTarget;return c===null&&(c=new ao(s,o,{depthBuffer:a,stencilBuffer:l,type:this._colorBufferType,format:Qt,colorSpace:hr,generateMipmaps:!1,minFilter:en,magFilter:en,samples:this.samples}),c.isPostProcessingRenderTarget=!0,this._frameBufferTarget=c),c.depthBuffer=a,c.stencilBuffer=l,c.setSize(s,o),c.viewport.copy(this._viewport),c.scissor.copy(this._scissor),c.viewport.multiplyScalar(this._pixelRatio),c.scissor.multiplyScalar(this._pixelRatio),c.scissorTest=this._scissorTest,c}_renderScene(e,t,n=!0){if(this._isDeviceLost===!0)return;const r=n?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,o=s.renderId,a=this._currentRenderContext,l=this._currentRenderObjectFunction,c=e.isScene===!0?e:Ey,u=this._renderTarget||this._outputRenderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel;let f;r!==null?(f=r,this.setRenderTarget(f)):f=u;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;const _=this.coordinateSystem,g=this.xr;if(t.coordinateSystem!==_&&g.isPresenting===!1&&(t.coordinateSystem=_,t.updateProjectionMatrix(),t.isArrayCamera))for(const I of t.cameras)I.coordinateSystem=_,I.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),g.enabled===!0&&g.isPresenting===!0&&(g.cameraAutoUpdate===!0&&g.updateCamera(t),t=g.getCamera());let m=this._viewport,v=this._scissor,x=this._pixelRatio;f!==null&&(m=f.viewport,v=f.scissor,x=1),this.getDrawingBufferSize(Au),Uf.set(0,0,Au.width,Au.height);const y=m.minDepth===void 0?0:m.minDepth,T=m.maxDepth===void 0?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(x).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=y,p.viewportValue.maxDepth=T,p.viewport=p.viewportValue.equals(Uf)===!1,p.scissorValue.copy(v).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(Uf)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new _h),p.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,f),Ru.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Ff.setFromProjectionMatrix(Ru,_);const b=this._renderLists.get(e,t);if(b.begin(),this._projectObject(e,t,0,b,p.clippingContext),b.finish(),this.sortObjects===!0&&b.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const I=this._textures.get(f);p.textures=I.textures,p.depthTexture=I.depthTexture,p.width=I.width,p.height=I.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=h,p.activeMipmapLevel=d,p.occlusionQueryCount=b.occlusionQueryCount,this._background.update(c,b,p),this.backend.beginRender(p);const{bundles:M,lightsNode:w,transparentDoublePass:E,transparent:S,opaque:C}=b;return M.length>0&&this._renderBundles(M,c,w),this.opaque===!0&&C.length>0&&this._renderObjects(C,t,c,w),this.transparent===!0&&S.length>0&&this._renderTransparents(S,E,t,c,w),this.backend.finishRender(p),s.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=l,r!==null&&(this.setRenderTarget(u,h,d),this._renderOutput(f)),c.onAfterRender(this,e,t,f),p}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const n=this.autoClear,r=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=n,this.xr.enabled=r}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,n=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),n===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,r){const s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,n,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,r,s=0,o=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,n,r),a.minDepth=s,a.maxDepth=o}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,n);const r=this._renderTarget||this._getFrameBufferTarget();let s=null;if(r!==null){this._textures.updateRenderTarget(r);const o=this._textures.get(r);s=this._renderContexts.getForClear(r),s.textures=o.textures,s.depthTexture=o.depthTexture,s.width=o.width,s.height=o.height,s.renderTarget=r,s.depth=r.depthBuffer,s.stencil=r.stencilBuffer,s.clearColorValue=this.backend.getClearColor(),s.activeCubeFace=this.getActiveCubeFace(),s.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,n,s),r!==null&&this._renderTarget===null&&this._renderOutput(r)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){this._initialized===!1&&await this.init(),this.clear(e,t,n)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:oi}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:hr}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()}),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,n=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const r=this.backend,s=this._pipelines,o=this._bindings,a=this._nodes,l=Array.isArray(e)?e:[e];if(l[0]===void 0||l[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const c of l){if(s.has(c)===!1){const d=()=>{c.removeEventListener("dispose",d),s.delete(c),o.delete(c),a.delete(c)};c.addEventListener("dispose",d);const f=c.onInitFunction;f!==null&&f.call(c,{renderer:this})}a.updateForCompute(c),o.updateForCompute(c);const u=o.getForCompute(c),h=s.getForCompute(c,u);r.compute(e,c,u,h)}r.finishCompute(e),t.renderId=n}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=ns.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=ns.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=ns.set(0,0,e.image.width,e.image.height);let n=this._currentRenderContext,r;n!==null?r=n.renderTarget:(r=this._renderTarget||this._getFrameBufferTarget(),r!==null&&(this._textures.updateRenderTarget(r),n=this._textures.get(r))),this._textures.updateTexture(e,{renderTarget:r}),this.backend.copyFramebufferToTexture(e,n,t)}copyTextureToTexture(e,t,n=null,r=null,s=0,o=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,r,s,o)}async readRenderTargetPixelsAsync(e,t,n,r,s,o=0,a=0){return this.backend.copyTextureToBuffer(e.textures[o],t,n,r,s,a)}_projectObject(e,t,n,r,s){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder,e.isClippingGroup&&e.enabled&&(s=s.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Ff.intersectsSprite(e)){this.sortObjects===!0&&ns.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ru);const{geometry:l,material:c}=e;c.visible&&r.push(e,l,c,n,ns.z,null,s)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Ff.intersectsObject(e))){const{geometry:l,material:c}=e;if(this.sortObjects===!0&&(l.boundingSphere===null&&l.computeBoundingSphere(),ns.copy(l.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Ru)),Array.isArray(c)){const u=l.groups;for(let h=0,d=u.length;h<d;h++){const f=u[h],p=c[f.materialIndex];p&&p.visible&&r.push(e,l,p,n,ns.z,f,s)}}else c.visible&&r.push(e,l,c,n,ns.z,null,s)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const l=r;r=this._renderLists.get(e,t),r.begin(),l.pushBundle({bundleGroup:e,camera:t,renderList:r}),r.finish()}const a=e.children;for(let l=0,c=a.length;l<c;l++)this._projectObject(a[l],t,n,r,s)}_renderBundles(e,t,n){for(const r of e)this._renderBundle(r,t,n)}_renderTransparents(e,t,n,r,s){if(t.length>0){for(const{material:o}of t)o.side=It;this._renderObjects(t,n,r,s,"backSide");for(const{material:o}of t)o.side=ri;this._renderObjects(e,n,r,s);for(const{material:o}of t)o.side=Vn}else this._renderObjects(e,n,r,s)}_renderObjects(e,t,n,r,s=null){for(let o=0,a=e.length;o<a;o++){const{object:l,geometry:c,material:u,group:h,clippingContext:d}=e[o];this._currentRenderObjectFunction(l,n,t,c,u,h,r,d,s)}}renderObject(e,t,n,r,s,o,a,l=null,c=null){let u,h,d;if(e.onBeforeRender(this,t,n,r,s,o),s.allowOverride===!0&&t.overrideMaterial!==null){const f=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(u=f.positionNode,f.positionNode=s.positionNode),f.alphaTest=s.alphaTest,f.alphaMap=s.alphaMap,f.transparent=s.transparent||s.transmission>0,f.isShadowPassMaterial&&(f.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(d=f.depthNode,f.depthNode=s.depthNode),s.castShadowNode&&s.castShadowNode.isNode&&(h=f.colorNode,f.colorNode=s.castShadowNode)),s=f}s.transparent===!0&&s.side===Vn&&s.forceSinglePass===!1?(s.side=It,this._handleObjectFunction(e,s,t,n,a,o,l,"backSide"),s.side=ri,this._handleObjectFunction(e,s,t,n,a,o,l,c),s.side=Vn):this._handleObjectFunction(e,s,t,n,a,o,l,c),u!==void 0&&(t.overrideMaterial.positionNode=u),d!==void 0&&(t.overrideMaterial.depthNode=d),h!==void 0&&(t.overrideMaterial.colorNode=h),e.onAfterRender(this,t,n,r,s,o)}_renderObjectDirect(e,t,n,r,s,o,a,l){const c=this._objects.get(e,t,n,r,s,this._currentRenderContext,a,l);c.drawRange=e.geometry.drawRange,c.group=o;const u=this._nodes.needsRefresh(c);u&&(this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c)),this._pipelines.updateForRender(c),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(c),c.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(c,this.info),u&&this._nodes.updateAfter(c)}_createObjectPipeline(e,t,n,r,s,o,a,l){const c=this._objects.get(e,t,n,r,s,this._currentRenderContext,a,l);c.drawRange=e.geometry.drawRange,c.group=o,this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c),this._pipelines.getForRender(c,this._compilationPromises),this._nodes.updateAfter(c)}get compile(){return this.compileAsync}}class fg{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function Q3(i){return i+(as-i%as)%as}class fS extends fg{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return Q3(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class pS extends fS{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let J3=0;class mS extends pS{constructor(e,t){super("UniformBuffer_"+J3++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class ek extends pS{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,n=this.uniforms.length;t<n;t++){const r=this.uniforms[t],{boundary:s,itemSize:o}=r,a=e%as,l=as-a;a!==0&&l-s<0?e+=as-a:a%s!==0&&(e+=a%s),r.offset=e/this.bytesPerElement,e+=o*this.bytesPerElement}return Math.ceil(e/as)*as}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const n=this.values,r=e.getValue(),s=e.offset,o=e.getType();if(n[s]!==r){const a=this._getBufferForType(o);a[s]=n[s]=r,t=!0}return t}updateVector2(e){let t=!1;const n=this.values,r=e.getValue(),s=e.offset,o=e.getType();if(n[s+0]!==r.x||n[s+1]!==r.y){const a=this._getBufferForType(o);a[s+0]=n[s+0]=r.x,a[s+1]=n[s+1]=r.y,t=!0}return t}updateVector3(e){let t=!1;const n=this.values,r=e.getValue(),s=e.offset,o=e.getType();if(n[s+0]!==r.x||n[s+1]!==r.y||n[s+2]!==r.z){const a=this._getBufferForType(o);a[s+0]=n[s+0]=r.x,a[s+1]=n[s+1]=r.y,a[s+2]=n[s+2]=r.z,t=!0}return t}updateVector4(e){let t=!1;const n=this.values,r=e.getValue(),s=e.offset,o=e.getType();if(n[s+0]!==r.x||n[s+1]!==r.y||n[s+2]!==r.z||n[s+4]!==r.w){const a=this._getBufferForType(o);a[s+0]=n[s+0]=r.x,a[s+1]=n[s+1]=r.y,a[s+2]=n[s+2]=r.z,a[s+3]=n[s+3]=r.w,t=!0}return t}updateColor(e){let t=!1;const n=this.values,r=e.getValue(),s=e.offset;if(n[s+0]!==r.r||n[s+1]!==r.g||n[s+2]!==r.b){const o=this.buffer;o[s+0]=n[s+0]=r.r,o[s+1]=n[s+1]=r.g,o[s+2]=n[s+2]=r.b,t=!0}return t}updateMatrix3(e){let t=!1;const n=this.values,r=e.getValue().elements,s=e.offset;if(n[s+0]!==r[0]||n[s+1]!==r[1]||n[s+2]!==r[2]||n[s+4]!==r[3]||n[s+5]!==r[4]||n[s+6]!==r[5]||n[s+8]!==r[6]||n[s+9]!==r[7]||n[s+10]!==r[8]){const o=this.buffer;o[s+0]=n[s+0]=r[0],o[s+1]=n[s+1]=r[1],o[s+2]=n[s+2]=r[2],o[s+4]=n[s+4]=r[3],o[s+5]=n[s+5]=r[4],o[s+6]=n[s+6]=r[5],o[s+8]=n[s+8]=r[6],o[s+9]=n[s+9]=r[7],o[s+10]=n[s+10]=r[8],t=!0}return t}updateMatrix4(e){let t=!1;const n=this.values,r=e.getValue().elements,s=e.offset;return nk(n,r,s)===!1&&(this.buffer.set(r,s),tk(n,r,s),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function tk(i,e,t){for(let n=0,r=e.length;n<r;n++)i[t+n]=e[n]}function nk(i,e,t){for(let n=0,r=e.length;n<r;n++)if(i[t+n]!==e[n])return!1;return!0}let ik=0;class gS extends ek{constructor(e,t){super(e),this.id=ik++,this.groupNode=t,this.isNodeUniformsGroup=!0}}let rk=0;class sk extends fg{constructor(e,t){super(e),this.id=rk++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class td extends sk{constructor(e,t,n,r=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=r}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class _S extends td{constructor(e,t,n,r=null){super(e,t,n,r),this.isSampledCubeTexture=!0}}class vS extends td{constructor(e,t,n,r=null){super(e,t,n,r),this.isSampledTexture3D=!0}}const ok={textureDimensions:"textureSize",equals:"equal"},ak={low:"lowp",medium:"mediump",high:"highp"},wy={swizzleAssign:!0,storageBuffer:!1},Ay=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class lk extends cS{constructor(e,t){super(e,t,new B3),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==yi}getMethod(e){return ok[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),r=[];for(const o of t.inputs)r.push(this.getType(o.type)+" "+o.name);return`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const n=t.array,r=t.count*t.itemSize,{itemSize:s}=t,o=t.array.constructor.name.toLowerCase().includes("int");let a=o?Ca:mc;s===2?a=o?Na:io:s===3?a=o?ST:pc:s===4&&(a=o?Pa:Qt);const l={Float32Array:Jt,Uint8Array:Zt,Uint16Array:Ki,Uint32Array:Lt,Int8Array:Xs,Int16Array:Ys,Int32Array:Sn,Uint8ClampedArray:Zt},c=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(r/s))));let u=Math.ceil(r/s/c);c*u*s<r&&u++;const h=c*u*s,d=new n.constructor(h);d.set(n,0),t.array=d;const f=new EM(t.array,c,u,a,l[t.array.constructor.name]||Jt);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new wc(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:n}=e,r=t.value;if(this.renderer.backend.has(r)){const u=this.renderer.backend.get(r);u.pbo=r.pbo}const s=this.getUniformFromNode(r.pboNode,"texture",this.shaderStage,this.context.label),o=this.getPropertyName(s);this.increaseUsage(n);const a=n.build(this,"uint"),l=this.getDataFromNode(e);let c=l.propertyName;if(c===void 0){const u=this.getVarFromNode(e);c=this.getPropertyName(u);const h=this.getDataFromNode(t);let d=h.propertySizeName;d===void 0&&(d=c+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${o}, 0 ).x )`,e),h.propertySizeName=d);const{itemSize:f}=r,p="."+Ua.join("").slice(0,f),_=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,o,_,null,"0");let m="vec4";r.pbo.type===Lt?m="uvec4":r.pbo.type===Sn&&(m="ivec4"),this.addLineFlowCode(`${c} = ${m}(${g})${p}`,e),l.propertyName=c}return c}generateTextureLoad(e,t,n,r,s="0"){return r?`texelFetch( ${t}, ivec3( ${n}, ${r} ), ${s} )`:`texelFetch( ${t}, ${n}, ${s} )`}generateTexture(e,t,n,r){return e.isDepthTexture?`texture( ${t}, ${n} ).x`:(r&&(n=`vec3( ${n}, ${r} )`),`texture( ${t}, ${n} )`)}generateTextureLevel(e,t,n,r){return`textureLod( ${t}, ${n}, ${r} )`}generateTextureBias(e,t,n,r){return`texture( ${t}, ${n}, ${r} )`}generateTextureGrad(e,t,n,r){return`textureGrad( ${t}, ${n}, ${r[0]}, ${r[1]} )`}generateTextureCompare(e,t,n,r,s,o=this.shaderStage){if(o==="fragment")return`texture( ${t}, vec3( ${n}, ${r} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const r of n)t.push(`${this.getVar(r.type,r.name,r.count)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],n=[],r={};for(const o of t){let a=null,l=!1;if(o.type==="texture"||o.type==="texture3D"){const u=o.node.value;let h="";(u.isDataTexture===!0||u.isData3DTexture===!0)&&(u.type===Lt?h="u":u.type===Sn&&(h="i")),o.type==="texture3D"?a=`${h}sampler3D ${o.name};`:u.compareFunction?a=`sampler2DShadow ${o.name};`:u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?a=`${h}sampler2DArray ${o.name};`:a=`${h}sampler2D ${o.name};`}else if(o.type==="cubeTexture")a=`samplerCube ${o.name};`;else if(o.type==="buffer"){const u=o.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";a=`${u.name} {
	${h} ${o.name}[${f}];
};
`}else a=`${this.getVectorType(o.type)} ${this.getPropertyName(o,e)};`,l=!0;const c=o.node.precision;if(c!==null&&(a=ak[c]+" "+a),l){a="	"+a;const u=o.groupNode.name;(r[u]||(r[u]=[])).push(a)}else a="uniform "+a,n.push(a)}let s="";for(const o in r){const a=r[o];s+=this._getGLSLUniformStruct(e+"_"+o,a.join(`
`))+`
`}return s+=n.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Sn){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const r=n.array;r instanceof Uint32Array||r instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const n=this.getAttributesArray();let r=0;for(const s of n)t+=`layout( location = ${r++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){const t=[];for(const n of e.members)t.push(`	${n.type} ${n.name};`);return t.join(`
`)}getStructs(e){const t=[],n=this.structs[e],r=[];for(const s of n)if(s.output)for(const o of s.members)r.push(`layout( location = ${o.index} ) out ${o.type} ${o.name};`);else{let o="struct "+s.name+` {
`;o+=this.getStructMembers(s),o+=`
};
`,t.push(o)}return r.length===0&&r.push("layout( location = 0 ) out vec4 fragColor;"),`
`+r.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="";const n=this.varyings;if(e==="vertex"||e==="compute")for(const r of n){e==="compute"&&(r.needsInterpolation=!0);const s=this.getType(r.type);if(r.needsInterpolation){const o=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${o}out ${s} ${r.name};
`}else t+=`${s} ${r.name};
`}else if(e==="fragment"){for(const r of n)if(r.needsInterpolation){const s=this.getType(r.type),o=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${o}in ${s} ${r.name};
`}}for(const r of this.builtins[e])t+=`${r};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,r)=>n*r,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){const r=this.extensions[n]||(this.extensions[n]=new Map);r.has(e)===!1&&r.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const r=this.renderer.backend.extensions;this.object.isBatchedMesh&&r.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const n=this.extensions[e];if(n!==void 0)for(const{name:r,behavior:s}of n.values())t.push(`#extension ${r} : ${s}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=wy[e];if(t===void 0){let n;switch(t=!1,e){case"float32Filterable":n="OES_texture_float_linear";break;case"clipDistance":n="WEBGL_clip_cull_distance";break}if(n!==void 0){const r=this.renderer.backend.extensions;r.has(n)&&(r.get(n),t=!0)}wy[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let n=0;n<e.length;n++){const r=e[n],s=this.getPropertyName(r.attributeNode);s&&(t+=`${r.varyingName} = ${s};
	`)}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${Ay}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${Ay}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let n=`// code

`;n+=this.flowCode[t];const r=this.flowNodes[t],s=r[r.length-1];for(const a of r){const l=this.getFlowData(a),c=a.name;c&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${c}
	`),n+=`${l.code}
	`,a===s&&t!=="compute"&&(n+=`// result
	`,t==="vertex"?(n+="gl_Position = ",n+=`${l.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${l.result};`)))}const o=e[t];o.extensions=this.getExtensions(t),o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.vars=this.getVars(t),o.structs=this.getStructs(t),o.codes=this.getCodes(t),o.transforms=this.getTransforms(t),o.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,r=null){const s=super.getUniformFromNode(e,t,n,r),o=this.getDataFromNode(e,n,this.globalCache);let a=o.uniformGPU;if(a===void 0){const l=e.groupNode,c=l.name,u=this.getBindGroupArray(c,n);if(t==="texture")a=new td(s.name,s.node,l),u.push(a);else if(t==="cubeTexture")a=new _S(s.name,s.node,l),u.push(a);else if(t==="texture3D")a=new vS(s.name,s.node,l),u.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;const h=new mS(e,l);h.name=e.name,u.push(h),a=h}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[c];d===void 0&&(d=new gS(n+"_"+c,l),h[c]=d,u.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}o.uniformGPU=a}return s}}let Bf=null,Oo=null;class yS{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Qi("WebGPURenderer: Timestamp tracking is disabled.");return}const t=this.timestampQueryPool[e];if(!t){Qi(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const n=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=n,n}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return Bf=Bf||new ae,this.renderer.getDrawingBufferSize(Bf)}setScissorTest(){}getClearColor(){const e=this.renderer;return Oo=Oo||new ug,e.getClearColor(Oo),Oo.getRGB(Oo),Oo}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:g0(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ra} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let ck=0;class uk{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class hk{constructor(e){this.backend=e}createAttribute(e,t){const n=this.backend,{gl:r}=n,s=e.array,o=e.usage||r.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,l=n.get(a);let c=l.bufferGPU;c===void 0&&(c=this._createBuffer(r,t,s,o),l.bufferGPU=c,l.bufferType=t,l.version=a.version);let u;if(s instanceof Float32Array)u=r.FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?u=r.HALF_FLOAT:u=r.UNSIGNED_SHORT;else if(s instanceof Int16Array)u=r.SHORT;else if(s instanceof Uint32Array)u=r.UNSIGNED_INT;else if(s instanceof Int32Array)u=r.INT;else if(s instanceof Int8Array)u=r.BYTE;else if(s instanceof Uint8Array)u=r.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)u=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let h={bufferGPU:c,bufferType:t,type:u,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===Sn,id:ck++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(r,t,s,o);h=new uk(h,d)}n.set(e,h)}updateAttribute(e){const t=this.backend,{gl:n}=t,r=e.array,s=e.isInterleavedBufferAttribute?e.data:e,o=t.get(s),a=o.bufferType,l=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(a,o.bufferGPU),l.length===0)n.bufferSubData(a,0,r);else{for(let c=0,u=l.length;c<u;c++){const h=l[c];n.bufferSubData(a,h.start*r.BYTES_PER_ELEMENT,r,h.start,h.count)}s.clearUpdateRanges()}n.bindBuffer(a,null),o.version=s.version}destroyAttribute(e){const t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const r=t.get(e);n.deleteBuffer(r.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:n}=t,r=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(r),o=e.array,a=o.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,s);const l=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,l),n.bufferData(n.COPY_WRITE_BUFFER,a,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const c=new e.array.constructor(o.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,l),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,c),n.deleteBuffer(l),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),c.buffer}_createBuffer(e,t,n,r){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,n,r),e.bindBuffer(t,null),s}}let Of,fl;class dk{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;Of={[In]:e.FUNC_ADD,[Hp]:e.FUNC_SUBTRACT,[Wp]:e.FUNC_REVERSE_SUBTRACT},fl={[Er]:e.ZERO,[$p]:e.ONE,[qp]:e.SRC_COLOR,[Ul]:e.SRC_ALPHA,[Qp]:e.SRC_ALPHA_SATURATE,[Kp]:e.DST_COLOR,[Xp]:e.DST_ALPHA,[jp]:e.ONE_MINUS_SRC_COLOR,[Fl]:e.ONE_MINUS_SRC_ALPHA,[Zp]:e.ONE_MINUS_DST_COLOR,[Yp]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),n=e.getParameter(e.VIEWPORT);this.currentScissor=new We().fromArray(t),this.currentViewport=new We().fromArray(n),this._tempVec4=new We}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==i0?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Jf?t.cullFace(t.BACK):e===r0?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,r,s,o,a,l){const{gl:c}=this;if(e===si){this.currentBlendingEnabled===!0&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),e!==Xo){if(e!==this.currentBlending||l!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==In||this.currentBlendEquationAlpha!==In)&&(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=In,this.currentBlendEquationAlpha=In),l)switch(e){case Pi:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case ta:c.blendFunc(c.ONE,c.ONE);break;case na:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case ia:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Pi:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case ta:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case na:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case ia:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=l}return}s=s||t,o=o||n,a=a||r,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(c.blendEquationSeparate(Of[t],Of[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(n!==this.currentBlendSrc||r!==this.currentBlendDst||o!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(c.blendFuncSeparate(fl[n],fl[r],fl[o],fl[a]),this.currentBlendSrc=n,this.currentBlendDst=r,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Bl:t.depthFunc(t.NEVER);break;case Ol:t.depthFunc(t.ALWAYS);break;case kl:t.depthFunc(t.LESS);break;case fs:t.depthFunc(t.LEQUAL);break;case Gl:t.depthFunc(t.EQUAL);break;case zl:t.depthFunc(t.GEQUAL);break;case Vl:t.depthFunc(t.GREATER);break;case Hl:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,n,r){const s=this._tempVec4.set(e,t,n,r);if(this.currentScissor.equals(s)===!1){const{gl:o}=this;o.scissor(s.x,s.y,s.z,s.w),this.currentScissor.copy(s)}}viewport(e,t,n,r){const s=this._tempVec4.set(e,t,n,r);if(this.currentViewport.equals(s)===!1){const{gl:o}=this;o.viewport(s.x,s.y,s.z,s.w),this.currentViewport.copy(s)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==n)&&(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t,n){const{gl:r}=this;e.side===Vn?this.disable(r.CULL_FACE):this.enable(r.CULL_FACE);let s=e.side===It;t&&(s=!s),this.setFlipSided(s),e.blending===Pi&&e.transparent===!1?this.setBlending(si):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const o=e.stencilWrite;if(this.setStencilTest(o),o&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(r.SAMPLE_ALPHA_TO_COVERAGE):this.disable(r.SAMPLE_ALPHA_TO_COVERAGE),n>0&&this.currentClippingPlanes!==n)for(let l=0;l<8;l++)l<n?this.enable(12288+l):this.disable(12288+l)}setPolygonOffset(e,t,n){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==n)&&(r.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,t=null){const n=this.gl;return this.currentVAO!==e||this.currentIndex!==t?(n.bindVertexArray(e),t!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:n,currentBoundFramebuffers:r}=this;return r[e]!==t?(n.bindFramebuffer(e,t),r[e]=t,e===n.DRAW_FRAMEBUFFER&&(r[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(r[n.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:n}=this;let r=[],s=!1;if(e.textures!==null){r=this.currentDrawbuffers.get(t),r===void 0&&(r=[],this.currentDrawbuffers.set(t,r));const o=e.textures;if(r.length!==o.length||r[0]!==n.COLOR_ATTACHMENT0){for(let a=0,l=o.length;a<l;a++)r[a]=n.COLOR_ATTACHMENT0+a;r.length=o.length,s=!0}}else r[0]!==n.BACK&&(r[0]=n.BACK,s=!0);s&&n.drawBuffers(r)}activeTexture(e){const{gl:t,currentTextureSlot:n,maxTextures:r}=this;e===void 0&&(e=t.TEXTURE0+r-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){const{gl:r,currentTextureSlot:s,currentBoundTextures:o,maxTextures:a}=this;n===void 0&&(s===null?n=r.TEXTURE0+a-1:n=s);let l=o[n];l===void 0&&(l={type:void 0,texture:void 0},o[n]=l),(l.type!==e||l.texture!==t)&&(s!==n&&(r.activeTexture(n),this.currentTextureSlot=n),r.bindTexture(e,t),l.type=e,l.texture=t)}bindBufferBase(e,t,n){const{gl:r}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==n?(r.bindBufferBase(e,t,n),this.currentBoundBufferBases[s]=n,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,r=n[t];r!==void 0&&r.type!==void 0&&(e.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}class fk{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=yi){const{gl:n,extensions:r}=this;let s;if(e===Zt)return n.UNSIGNED_BYTE;if(e===Th)return n.UNSIGNED_SHORT_4_4_4_4;if(e===Mh)return n.UNSIGNED_SHORT_5_5_5_1;if(e===Eh)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===Xs)return n.BYTE;if(e===Ys)return n.SHORT;if(e===Ki)return n.UNSIGNED_SHORT;if(e===Sn)return n.INT;if(e===Lt)return n.UNSIGNED_INT;if(e===Jt)return n.FLOAT;if(e===Fn)return n.HALF_FLOAT;if(e===tm)return n.ALPHA;if(e===pc)return n.RGB;if(e===Qt)return n.RGBA;if(e===nm)return n.LUMINANCE;if(e===im)return n.LUMINANCE_ALPHA;if(e===bi)return n.DEPTH_COMPONENT;if(e===Si)return n.DEPTH_STENCIL;if(e===mc)return n.RED;if(e===Ca)return n.RED_INTEGER;if(e===io)return n.RG;if(e===Na)return n.RG_INTEGER;if(e===Pa)return n.RGBA_INTEGER;if(e===Ks||e===ls||e===cs||e===us)if(t===Ie)if(s=r.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===Ks)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===ls)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===cs)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===us)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=r.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===Ks)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===ls)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===cs)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===us)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Wl||e===$l||e===ql||e===jl)if(s=r.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===Wl)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===$l)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===ql)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===jl)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Xl||e===ra||e===sa)if(s=r.get("WEBGL_compressed_texture_etc"),s!==null){if(e===Xl||e===ra)return t===Ie?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===sa)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===oa||e===aa||e===la||e===ca||e===ua||e===ha||e===da||e===fa||e===pa||e===ma||e===ga||e===_a||e===va||e===ya)if(s=r.get("WEBGL_compressed_texture_astc"),s!==null){if(e===oa)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===aa)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===la)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===ca)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===ua)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===ha)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===da)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===fa)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===pa)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===ma)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===ga)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===_a)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===va)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===ya)return t===Ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===Zs)if(s=r.get("EXT_texture_compression_bptc"),s!==null){if(e===Zs)return t===Ie?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===rm||e===Yl||e===Kl||e===Zl)if(s=r.get("EXT_texture_compression_rgtc"),s!==null){if(e===Zs)return s.COMPRESSED_RED_RGTC1_EXT;if(e===Yl)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Kl)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Zl)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===xi?n.UNSIGNED_INT_24_8:n[e]!==void 0?n[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,r)=>{function s(){const o=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(o===e.WAIT_FAILED){e.deleteSync(t),r();return}if(o===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),n()}s()})}}let Ry=!1,Cu,kf,Cy;class pk{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},Ry===!1&&(this._init(),Ry=!0)}_init(){const e=this.gl;Cu={[to]:e.REPEAT,[lr]:e.CLAMP_TO_EDGE,[no]:e.MIRRORED_REPEAT},kf={[Bt]:e.NEAREST,[em]:e.NEAREST_MIPMAP_NEAREST,[Lr]:e.NEAREST_MIPMAP_LINEAR,[en]:e.LINEAR,[Yo]:e.LINEAR_MIPMAP_NEAREST,[Jn]:e.LINEAR_MIPMAP_LINEAR},Cy={[sm]:e.NEVER,[um]:e.ALWAYS,[wh]:e.LESS,[Ah]:e.LEQUAL,[om]:e.EQUAL,[cm]:e.GEQUAL,[am]:e.GREATER,[lm]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let n;return e.isCubeTexture===!0?n=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?n=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?n=t.TEXTURE_3D:n=t.TEXTURE_2D,n}getInternalFormat(e,t,n,r,s=!1){const{gl:o,extensions:a}=this;if(e!==null){if(o[e]!==void 0)return o[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let l=t;return t===o.RED&&(n===o.FLOAT&&(l=o.R32F),n===o.HALF_FLOAT&&(l=o.R16F),n===o.UNSIGNED_BYTE&&(l=o.R8),n===o.UNSIGNED_SHORT&&(l=o.R16),n===o.UNSIGNED_INT&&(l=o.R32UI),n===o.BYTE&&(l=o.R8I),n===o.SHORT&&(l=o.R16I),n===o.INT&&(l=o.R32I)),t===o.RED_INTEGER&&(n===o.UNSIGNED_BYTE&&(l=o.R8UI),n===o.UNSIGNED_SHORT&&(l=o.R16UI),n===o.UNSIGNED_INT&&(l=o.R32UI),n===o.BYTE&&(l=o.R8I),n===o.SHORT&&(l=o.R16I),n===o.INT&&(l=o.R32I)),t===o.RG&&(n===o.FLOAT&&(l=o.RG32F),n===o.HALF_FLOAT&&(l=o.RG16F),n===o.UNSIGNED_BYTE&&(l=o.RG8),n===o.UNSIGNED_SHORT&&(l=o.RG16),n===o.UNSIGNED_INT&&(l=o.RG32UI),n===o.BYTE&&(l=o.RG8I),n===o.SHORT&&(l=o.RG16I),n===o.INT&&(l=o.RG32I)),t===o.RG_INTEGER&&(n===o.UNSIGNED_BYTE&&(l=o.RG8UI),n===o.UNSIGNED_SHORT&&(l=o.RG16UI),n===o.UNSIGNED_INT&&(l=o.RG32UI),n===o.BYTE&&(l=o.RG8I),n===o.SHORT&&(l=o.RG16I),n===o.INT&&(l=o.RG32I)),t===o.RGB&&(n===o.FLOAT&&(l=o.RGB32F),n===o.HALF_FLOAT&&(l=o.RGB16F),n===o.UNSIGNED_BYTE&&(l=o.RGB8),n===o.UNSIGNED_SHORT&&(l=o.RGB16),n===o.UNSIGNED_INT&&(l=o.RGB32UI),n===o.BYTE&&(l=o.RGB8I),n===o.SHORT&&(l=o.RGB16I),n===o.INT&&(l=o.RGB32I),n===o.UNSIGNED_BYTE&&(l=r===Ie&&s===!1?o.SRGB8:o.RGB8),n===o.UNSIGNED_SHORT_5_6_5&&(l=o.RGB565),n===o.UNSIGNED_SHORT_5_5_5_1&&(l=o.RGB5_A1),n===o.UNSIGNED_SHORT_4_4_4_4&&(l=o.RGB4),n===o.UNSIGNED_INT_5_9_9_9_REV&&(l=o.RGB9_E5)),t===o.RGB_INTEGER&&(n===o.UNSIGNED_BYTE&&(l=o.RGB8UI),n===o.UNSIGNED_SHORT&&(l=o.RGB16UI),n===o.UNSIGNED_INT&&(l=o.RGB32UI),n===o.BYTE&&(l=o.RGB8I),n===o.SHORT&&(l=o.RGB16I),n===o.INT&&(l=o.RGB32I)),t===o.RGBA&&(n===o.FLOAT&&(l=o.RGBA32F),n===o.HALF_FLOAT&&(l=o.RGBA16F),n===o.UNSIGNED_BYTE&&(l=o.RGBA8),n===o.UNSIGNED_SHORT&&(l=o.RGBA16),n===o.UNSIGNED_INT&&(l=o.RGBA32UI),n===o.BYTE&&(l=o.RGBA8I),n===o.SHORT&&(l=o.RGBA16I),n===o.INT&&(l=o.RGBA32I),n===o.UNSIGNED_BYTE&&(l=r===Ie&&s===!1?o.SRGB8_ALPHA8:o.RGBA8),n===o.UNSIGNED_SHORT_4_4_4_4&&(l=o.RGBA4),n===o.UNSIGNED_SHORT_5_5_5_1&&(l=o.RGB5_A1)),t===o.RGBA_INTEGER&&(n===o.UNSIGNED_BYTE&&(l=o.RGBA8UI),n===o.UNSIGNED_SHORT&&(l=o.RGBA16UI),n===o.UNSIGNED_INT&&(l=o.RGBA32UI),n===o.BYTE&&(l=o.RGBA8I),n===o.SHORT&&(l=o.RGBA16I),n===o.INT&&(l=o.RGBA32I)),t===o.DEPTH_COMPONENT&&(n===o.UNSIGNED_SHORT&&(l=o.DEPTH_COMPONENT16),n===o.UNSIGNED_INT&&(l=o.DEPTH_COMPONENT24),n===o.FLOAT&&(l=o.DEPTH_COMPONENT32F)),t===o.DEPTH_STENCIL&&n===o.UNSIGNED_INT_24_8&&(l=o.DEPTH24_STENCIL8),(l===o.R16F||l===o.R32F||l===o.RG16F||l===o.RG32F||l===o.RGBA16F||l===o.RGBA32F)&&a.get("EXT_color_buffer_float"),l}setTextureParameters(e,t){const{gl:n,extensions:r,backend:s}=this;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE),n.texParameteri(e,n.TEXTURE_WRAP_S,Cu[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,Cu[t.wrapT]),(e===n.TEXTURE_3D||e===n.TEXTURE_2D_ARRAY)&&n.texParameteri(e,n.TEXTURE_WRAP_R,Cu[t.wrapR]),n.texParameteri(e,n.TEXTURE_MAG_FILTER,kf[t.magFilter]);const o=t.mipmaps!==void 0&&t.mipmaps.length>0,a=t.minFilter===en&&o?Jn:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,kf[a]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,Cy[t.compareFunction])),r.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Bt||t.minFilter!==Lr&&t.minFilter!==Jn||t.type===Jt&&r.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const l=r.get("EXT_texture_filter_anisotropic");n.texParameterf(e,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:n,defaultTextures:r}=this,s=this.getGLTextureType(e);let o=r[s];o===void 0&&(o=t.createTexture(),n.state.bindTexture(s,o),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),r[s]=o),n.set(e,{textureGPU:o,glTextureType:s,isDefault:!0})}createTexture(e,t){const{gl:n,backend:r}=this,{levels:s,width:o,height:a,depth:l}=t,c=r.utils.convert(e.format,e.colorSpace),u=r.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,c,u,e.colorSpace,e.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(e);r.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,s,h,o,a,l):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,s,h,o,a,l):e.isVideoTexture||n.texStorage2D(f,s,h,o,a),r.set(e,{textureGPU:d,glTextureType:f,glFormat:c,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){const{gl:n,backend:r}=this,{textureGPU:s,glTextureType:o,glFormat:a,glType:l}=r.get(t),{width:c,height:u}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),r.state.bindTexture(o,s),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(o,0,0,0,c,u,a,l,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),r.state.unbindTexture()}updateTexture(e,t){const{gl:n}=this,{width:r,height:s}=t,{textureGPU:o,glTextureType:a,glFormat:l,glType:c,glInternalFormat:u}=this.backend.get(e);if(e.isRenderTargetTexture||o===void 0)return;const h=d=>d.isDataTexture?d.image.data:typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&d instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&d instanceof ImageBitmap||d instanceof OffscreenCanvas?d:d.data;if(this.backend.state.bindTexture(a,o),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,f=t.image;for(let p=0;p<d.length;p++){const _=d[p];e.isCompressedArrayTexture?e.format!==n.RGBA?l!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,_.width,_.height,f.depth,l,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,_.width,_.height,f.depth,l,c,_.data):l!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,p,0,0,_.width,_.height,l,_.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let f=0;f<6;f++){const p=h(d[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,r,s,l,c,p)}}else if(e.isDataArrayTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,l,c,d.data)}else if(e.isData3DTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,l,c,d.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(a,0,u,l,c,t.image);else{const d=h(t.image);n.texSubImage2D(a,0,0,0,r,s,l,c,d)}}generateMipmaps(e){const{gl:t,backend:n}=this,{textureGPU:r,glTextureType:s}=n.get(e);n.state.bindTexture(s,r),t.generateMipmap(s)}deallocateRenderBuffers(e){const{gl:t,backend:n}=this;if(e){const r=n.get(e);if(r.renderBufferStorageSetup=void 0,r.framebuffers){for(const s in r.framebuffers)t.deleteFramebuffer(r.framebuffers[s]);delete r.framebuffers}if(r.depthRenderbuffer&&(t.deleteRenderbuffer(r.depthRenderbuffer),delete r.depthRenderbuffer),r.stencilRenderbuffer&&(t.deleteRenderbuffer(r.stencilRenderbuffer),delete r.stencilRenderbuffer),r.msaaFrameBuffer&&(t.deleteFramebuffer(r.msaaFrameBuffer),delete r.msaaFrameBuffer),r.msaaRenderbuffers){for(let s=0;s<r.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(r.msaaRenderbuffers[s]);delete r.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:n}=this,{textureGPU:r,renderTarget:s}=n.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(r),n.delete(e)}copyTextureToTexture(e,t,n=null,r=null,s=0,o=0){const{gl:a,backend:l}=this,{state:c}=this.backend,{textureGPU:u,glTextureType:h,glType:d,glFormat:f}=l.get(t);c.bindTexture(h,u);let p,_,g,m,v,x,y,T,b;const M=e.isCompressedTexture?e.mipmaps[o]:e.image;if(n!==null)p=n.max.x-n.min.x,_=n.max.y-n.min.y,g=n.isBox3?n.max.z-n.min.z:1,m=n.min.x,v=n.min.y,x=n.isBox3?n.min.z:0;else{const D=Math.pow(2,-s);p=Math.floor(M.width*D),_=Math.floor(M.height*D),e.isDataArrayTexture?g=M.depth:e.isData3DTexture?g=Math.floor(M.depth*D):g=1,m=0,v=0,x=0}r!==null?(y=r.x,T=r.y,b=r.z):(y=0,T=0,b=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const w=a.getParameter(a.UNPACK_ROW_LENGTH),E=a.getParameter(a.UNPACK_IMAGE_HEIGHT),S=a.getParameter(a.UNPACK_SKIP_PIXELS),C=a.getParameter(a.UNPACK_SKIP_ROWS),I=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,M.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,M.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,m),a.pixelStorei(a.UNPACK_SKIP_ROWS,v),a.pixelStorei(a.UNPACK_SKIP_IMAGES,x);const k=t.isDataArrayTexture||t.isData3DTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const D=l.get(e),L=l.get(t),B=l.get(D.renderTarget),te=l.get(L.renderTarget),q=B.framebuffers[D.cacheKey],fe=te.framebuffers[L.cacheKey];c.bindFramebuffer(a.READ_FRAMEBUFFER,q),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,fe);let Y=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(Y=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(m,v,p,_,y,T,p,_,Y,a.NEAREST),c.bindFramebuffer(a.READ_FRAMEBUFFER,null),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else k?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(h,o,y,T,b,p,_,g,f,d,M.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(h,o,y,T,b,p,_,g,f,M.data):a.texSubImage3D(h,o,y,T,b,p,_,g,f,d,M):e.isDataTexture?a.texSubImage2D(h,o,y,T,p,_,f,d,M.data):e.isCompressedTexture?a.compressedTexSubImage2D(h,o,y,T,M.width,M.height,f,M.data):a.texSubImage2D(h,o,y,T,p,_,f,d,M);a.pixelStorei(a.UNPACK_ROW_LENGTH,w),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,E),a.pixelStorei(a.UNPACK_SKIP_PIXELS,S),a.pixelStorei(a.UNPACK_SKIP_ROWS,C),a.pixelStorei(a.UNPACK_SKIP_IMAGES,I),o===0&&t.generateMipmaps&&a.generateMipmap(h),c.unbindTexture()}copyFramebufferToTexture(e,t,n){const{gl:r}=this,{state:s}=this.backend,{textureGPU:o}=this.backend.get(e),{x:a,y:l,z:c,w:u}=n,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(h){const f=a!==0||l!==0;let p,_;if(e.isDepthTexture===!0?(p=r.DEPTH_BUFFER_BIT,_=r.DEPTH_ATTACHMENT,t.stencil&&(p|=r.STENCIL_BUFFER_BIT)):(p=r.COLOR_BUFFER_BIT,_=r.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),m=g.framebuffers[t.getCacheKey()],v=g.msaaFrameBuffer;s.bindFramebuffer(r.DRAW_FRAMEBUFFER,m),s.bindFramebuffer(r.READ_FRAMEBUFFER,v);const x=d-l-u;r.blitFramebuffer(a,x,a+c,x+u,a,x,a+c,x+u,p,r.NEAREST),s.bindFramebuffer(r.READ_FRAMEBUFFER,m),s.bindTexture(r.TEXTURE_2D,o),r.copyTexSubImage2D(r.TEXTURE_2D,0,0,0,a,x,c,u),s.unbindTexture()}else{const g=r.createFramebuffer();s.bindFramebuffer(r.DRAW_FRAMEBUFFER,g),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,_,r.TEXTURE_2D,o,0),r.blitFramebuffer(0,0,c,u,0,0,c,u,p,r.NEAREST),r.deleteFramebuffer(g)}}else s.bindTexture(r.TEXTURE_2D,o),r.copyTexSubImage2D(r.TEXTURE_2D,0,0,0,a,d-u-l,c,u),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,n,r=!1){const{gl:s}=this,o=t.renderTarget,{depthTexture:a,depthBuffer:l,stencilBuffer:c,width:u,height:h}=o;if(s.bindRenderbuffer(s.RENDERBUFFER,e),l&&!c){let d=s.DEPTH_COMPONENT24;r===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(s.RENDERBUFFER,o.samples,d,u,h):n>0?(a&&a.isDepthTexture&&a.type===s.FLOAT&&(d=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,n,d,u,h)):s.renderbufferStorage(s.RENDERBUFFER,d,u,h),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else l&&c&&(n>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,n,s.DEPTH24_STENCIL8,u,h):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,h),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,n,r,s,o){const{backend:a,gl:l}=this,{textureGPU:c,glFormat:u,glType:h}=this.backend.get(e),d=l.createFramebuffer();l.bindFramebuffer(l.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?l.TEXTURE_CUBE_MAP_POSITIVE_X+o:l.TEXTURE_2D;l.framebufferTexture2D(l.READ_FRAMEBUFFER,l.COLOR_ATTACHMENT0,f,c,0);const p=this._getTypedArrayType(h),_=this._getBytesPerTexel(h,u),m=r*s*_,v=l.createBuffer();l.bindBuffer(l.PIXEL_PACK_BUFFER,v),l.bufferData(l.PIXEL_PACK_BUFFER,m,l.STREAM_READ),l.readPixels(t,n,r,s,u,h,0),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const x=new p(m/p.BYTES_PER_ELEMENT);return l.bindBuffer(l.PIXEL_PACK_BUFFER,v),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,x),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),l.deleteFramebuffer(d),x}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:n}=this;let r=0;if(e===n.UNSIGNED_BYTE&&(r=1),(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT||e===n.HALF_FLOAT)&&(r=2),(e===n.UNSIGNED_INT||e===n.FLOAT)&&(r=4),t===n.RGBA)return r*4;if(t===n.RGB)return r*3;if(t===n.ALPHA)return r}}class mk{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class gk{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Ny={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class _k{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:r,object:s,type:o,info:a,index:l}=this;l!==0?n.drawElements(r,t,o,e):n.drawArrays(r,e,t),a.update(s,t,1)}renderInstances(e,t,n){const{gl:r,mode:s,type:o,index:a,object:l,info:c}=this;n!==0&&(a!==0?r.drawElementsInstanced(s,t,o,e,n):r.drawArraysInstanced(s,e,t,n),c.update(l,t,n))}renderMultiDraw(e,t,n){const{extensions:r,mode:s,object:o,info:a}=this;if(n===0)return;const l=r.get("WEBGL_multi_draw");if(l===null)for(let c=0;c<n;c++)this.render(e[c],t[c]);else{this.index!==0?l.multiDrawElementsWEBGL(s,t,0,this.type,e,0,n):l.multiDrawArraysWEBGL(s,e,0,t,0,n);let c=0;for(let u=0;u<n;u++)c+=t[u];a.update(o,c,1)}}renderMultiDrawInstances(e,t,n,r){const{extensions:s,mode:o,object:a,info:l}=this;if(n===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let u=0;u<n;u++)this.renderInstances(e[u],t[u],r[u]);else{this.index!==0?c.multiDrawElementsInstancedWEBGL(o,t,0,this.type,e,0,r,0,n):c.multiDrawArraysInstancedWEBGL(o,e,0,t,0,r,0,n);let u=0;for(let h=0;h<n;h++)u+=t[h]*r[h];l.update(a,u,1)}}}class xS{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class vk extends xS{constructor(e,t,n=2048){if(super(n),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let r=0;r<this.maxQueries;r++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Qi(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t==null||this.activeQuery!==null)return;const n=this.queries[t];if(n)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,n),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(r){console.error("Error in beginQuery:",r),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(n){console.error("Error in endQuery:",n),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[r,s]of this.queryStates)if(s==="ended"){const o=this.queries[r];e.push(this.resolveQuery(o))}if(e.length===0)return this.lastValue;const n=(await Promise.all(e)).reduce((r,s)=>r+s,0);return this.lastValue=n,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,n}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let n,r=!1;const s=()=>{n&&(clearTimeout(n),n=null)},o=l=>{r||(r=!0,s(),t(l))},a=()=>{if(this.isDisposed){o(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){o(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){n=setTimeout(a,1);return}const u=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(u)/1e6)}catch(l){console.error("Error checking query:",l),t(this.lastValue)}};a()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class Py extends yS{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,n={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},r=t.context!==void 0?t.context:e.domElement.getContext("webgl2",n);function s(o){o.preventDefault();const a={api:"WebGL",message:o.statusMessage||"Unknown reason",reason:null,originalEvent:o};e.onDeviceLost(a)}this._onContextLost=s,e.domElement.addEventListener("webglcontextlost",s,!1),this.gl=r,this.extensions=new mk(this),this.capabilities=new gk(this),this.attributeUtils=new hk(this),this.textureUtils=new pk(this),this.bufferRenderer=new _k(this),this.state=new dk(this),this.utils=new fk(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return ei}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,n=null){const r=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:r.RGBA8}),n!==null){const s=e.stencilBuffer?r.DEPTH24_STENCIL8:r.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:n,glInternalFormat:s}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e.autoAllocateDepthBuffer&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e.autoAllocateDepthBuffer=!1}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new vk(this.gl,t,2048));const n=this.timestampQueryPool[t];n.allocateQueriesForContext(e)!==null&&n.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){const{state:t,gl:n}=this,r=this.get(e);if(e.viewport?this.updateViewport(e):t.viewport(0,0,n.drawingBufferWidth,n.drawingBufferHeight),e.scissor){const{x:o,y:a,width:l,height:c}=e.scissorValue;t.scissor(o,e.height-c-a,l,c)}this.initTimestampQuery(e),r.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const s=e.occlusionQueryCount;s>0&&(r.currentOcclusionQueries=r.occlusionQueries,r.currentOcclusionQueryObjects=r.occlusionQueryObjects,r.lastOcclusionObject=null,r.occlusionQueries=new Array(s),r.occlusionQueryObjects=new Array(s),r.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:n}=this,r=this.get(e),s=r.previousContext;n.resetVertexState();const o=e.occlusionQueryCount;o>0&&(o>r.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let l=0;l<a.length;l++){const c=a[l];c.generateMipmaps&&this.generateMipmaps(c)}if(this._currentContext=s,e.textures!==null&&e.renderTarget){const l=this.get(e.renderTarget),{samples:c}=e.renderTarget;if(c>0&&this._useMultisampledRTT(e.renderTarget)===!1){const u=l.framebuffers[e.getCacheKey()],h=t.COLOR_BUFFER_BIT,d=l.msaaFrameBuffer,f=e.textures;n.bindFramebuffer(t.READ_FRAMEBUFFER,d),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u);for(let p=0;p<f.length;p++)if(e.scissor){const{x:_,y:g,width:m,height:v}=e.scissorValue,x=e.height-v-g;t.blitFramebuffer(_,x,_+m,x+v,_,x,_+m,x+v,h,t.NEAREST),this._supportsInvalidateFramebuffer===!0&&t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,l.invalidationArray,_,x,m,v)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,h,t.NEAREST),this._supportsInvalidateFramebuffer===!0&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,l.invalidationArray)}}s!==null&&(this._setFramebuffer(s),s.viewport?this.updateViewport(s):n.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:r}=t;if(n&&r){const s=new WeakSet,{gl:o}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let l=0;for(let c=0;c<n.length;c++){const u=n[c];u!==null&&o.getQueryParameter(u,o.QUERY_RESULT_AVAILABLE)&&(o.getQueryParameter(u,o.QUERY_RESULT)===0&&s.add(r[c]),n[c]=null,o.deleteQuery(u),l++)}l<n.length?requestAnimationFrame(a):t.occluded=s};a()}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:n,y:r,width:s,height:o}=e.viewportValue;t.viewport(n,e.height-o-r,s,o)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,n,r=null,s=!0){const{gl:o,renderer:a}=this;r===null&&(r={textures:null,clearColorValue:this.getClearColor()});let l=0;if(e&&(l|=o.COLOR_BUFFER_BIT),t&&(l|=o.DEPTH_BUFFER_BIT),n&&(l|=o.STENCIL_BUFFER_BIT),l!==0){let c;r.clearColorValue?c=r.clearColorValue:c=this.getClearColor();const u=a.getClearDepth(),h=a.getClearStencil();if(t&&this.state.setDepthMask(!0),r.textures===null)o.clearColor(c.r,c.g,c.b,c.a),o.clear(l);else{if(s&&this._setFramebuffer(r),e)for(let d=0;d<r.textures.length;d++)d===0?o.clearBufferfv(o.COLOR,d,[c.r,c.g,c.b,c.a]):o.clearBufferfv(o.COLOR,d,[0,0,0,1]);t&&n?o.clearBufferfi(o.DEPTH_STENCIL,0,u,h):t?o.clearBufferfv(o.DEPTH,0,[u]):n&&o.clearBufferiv(o.STENCIL,0,[h])}}}beginCompute(e){const{state:t,gl:n}=this;t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,n,r){const{state:s,gl:o}=this;this.discard===!1&&(o.enable(o.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:l,attributes:c}=this.get(r),u=this._getVaoKey(c),h=this.vaoCache[u];h===void 0?this._createVao(c):s.setVertexState(h),s.useProgram(a),this._bindUniforms(n);const d=this._getTransformFeedback(l);o.bindTransformFeedback(o.TRANSFORM_FEEDBACK,d),o.beginTransformFeedback(o.POINTS),c[0].isStorageInstancedBufferAttribute?o.drawArraysInstanced(o.POINTS,0,1,t.count):o.drawArrays(o.POINTS,0,t.count),o.endTransformFeedback(),o.bindTransformFeedback(o.TRANSFORM_FEEDBACK,null);for(let f=0;f<l.length;f++){const p=l[f];p.pbo&&this.textureUtils.copyBufferToTexture(p.transformBuffer,p.pbo),p.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:n,material:r,context:s,hardwareClippingPlanes:o}=e,{programGPU:a}=this.get(n),{gl:l,state:c}=this,u=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;c.setMaterial(r,d,o),c.useProgram(a);const f=this.get(e);let p=f.staticVao;if(p===void 0||f.geometryId!==e.geometry.id){const M=this._getVaoKey(e.getAttributes());if(p=this.vaoCache[M],p===void 0){let w;({vaoGPU:p,staticVao:w}=this._createVao(e.getAttributes())),w&&(f.staticVao=p,f.geometryId=e.geometry.id)}}const _=e.getIndex(),g=_!==null?this.get(_).bufferGPU:null;c.setVertexState(p,g);const m=u.lastOcclusionObject;if(m!==t&&m!==void 0){if(m!==null&&m.occlusionTest===!0&&(l.endQuery(l.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),t.occlusionTest===!0){const M=l.createQuery();l.beginQuery(l.ANY_SAMPLES_PASSED,M),u.occlusionQueries[u.occlusionQueryIndex]=M,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const v=this.bufferRenderer;t.isPoints?v.mode=l.POINTS:t.isLineSegments?v.mode=l.LINES:t.isLine?v.mode=l.LINE_STRIP:t.isLineLoop?v.mode=l.LINE_LOOP:r.wireframe===!0?(c.setLineWidth(r.wireframeLinewidth*this.renderer.getPixelRatio()),v.mode=l.LINES):v.mode=l.TRIANGLES;const{vertexCount:x,instanceCount:y}=h;let{firstVertex:T}=h;if(v.object=t,_!==null){T*=_.array.BYTES_PER_ELEMENT;const M=this.get(_);v.index=_.count,v.type=M.type}else v.index=0;const b=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?(Qi("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),v.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?v.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Qi("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):y>1?v.renderInstances(T,x,y):v.render(T,x)};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const M=this.get(e.camera),w=e.camera.cameras,E=e.getBindingGroup("cameraIndex").bindings[0];if(M.indexesGPU===void 0||M.indexesGPU.length!==w.length){const I=new Uint32Array([0,0,0,0]),k=[];for(let D=0,L=w.length;D<L;D++){const B=l.createBuffer();I[0]=D,l.bindBuffer(l.UNIFORM_BUFFER,B),l.bufferData(l.UNIFORM_BUFFER,I,l.STATIC_DRAW),k.push(B)}M.indexesGPU=k}const S=this.get(E),C=this.renderer.getPixelRatio();for(let I=0,k=w.length;I<k;I++){const D=w[I];if(t.layers.test(D.layers)){const L=D.viewport,B=L.x*C,te=L.y*C,q=L.width*C,fe=L.height*C;c.viewport(Math.floor(B),Math.floor(e.context.height-fe-te),Math.floor(q),Math.floor(fe)),c.bindBufferBase(l.UNIFORM_BUFFER,S.index,M.indexesGPU[I]),b()}}}else b()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,n,r,s,o){return this.textureUtils.copyTextureToBuffer(e,t,n,r,s,o)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new lk(e,t)}createProgram(e){const t=this.gl,{stage:n,code:r}=e,s=n==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,r),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const n=this.gl,r=e.pipeline,{fragmentProgram:s,vertexProgram:o}=r,a=n.createProgram(),l=this.get(s).shaderGPU,c=this.get(o).shaderGPU;if(n.attachShader(a,l),n.attachShader(a,c),n.linkProgram(a),this.set(r,{programGPU:a,fragmentShader:l,vertexShader:c}),t!==null&&this.parallel){const u=new Promise(h=>{const d=this.parallel,f=()=>{n.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,r),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,r)}_handleSource(e,t){const n=e.split(`
`),r=[],s=Math.max(t-6,0),o=Math.min(t+6,n.length);for(let a=s;a<o;a++){const l=a+1;r.push(`${l===t?">":" "} ${l}: ${n[a]}`)}return r.join(`
`)}_getShaderErrors(e,t,n){const r=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(r&&s==="")return"";const o=/ERROR: 0:(\d+)/.exec(s);if(o){const a=parseInt(o[1]);return n.toUpperCase()+`

`+s+`

`+this._handleSource(e.getShaderSource(t),a)}else return s}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){const r=this.gl,s=r.getProgramInfoLog(e).trim();if(r.getProgramParameter(e,r.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(r,e,n,t);else{const o=this._getShaderErrors(r,n,"vertex"),a=this._getShaderErrors(r,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(e,r.VALIDATE_STATUS)+`

Program Info Log: `+s+`
`+o+`
`+a)}else s!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",s)}}_completeCompile(e,t){const{state:n,gl:r}=this,s=this.get(t),{programGPU:o,fragmentShader:a,vertexShader:l}=s;r.getProgramParameter(o,r.LINK_STATUS)===!1&&this._logProgramError(o,a,l),n.useProgram(o);const c=e.getBindings();this._setupBindings(c,o),this.set(t,{programGPU:o})}createComputePipeline(e,t){const{state:n,gl:r}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);const{computeProgram:o}=e,a=r.createProgram(),l=this.get(s).shaderGPU,c=this.get(o).shaderGPU,u=o.transforms,h=[],d=[];for(let g=0;g<u.length;g++){const m=u[g];h.push(m.varyingName),d.push(m.attributeNode)}r.attachShader(a,l),r.attachShader(a,c),r.transformFeedbackVaryings(a,h,r.SEPARATE_ATTRIBS),r.linkProgram(a),r.getProgramParameter(a,r.LINK_STATUS)===!1&&this._logProgramError(a,l,c),n.useProgram(a),this._setupBindings(t,a);const f=o.attributes,p=[],_=[];for(let g=0;g<f.length;g++){const m=f[g].node.attribute;p.push(m),this.has(m)||this.attributeUtils.createAttribute(m,r.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const m=d[g].attribute;this.has(m)||this.attributeUtils.createAttribute(m,r.ARRAY_BUFFER);const v=this.get(m);_.push(v)}this.set(e,{programGPU:a,transformBuffers:_,attributes:p})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let n=0,r=0;for(const s of t){this.set(s,{textures:r,uniformBuffers:n});for(const o of s.bindings)o.isUniformBuffer&&n++,o.isSampledTexture&&r++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,n=this.get(e);let r=n.uniformBuffers,s=n.textures;for(const o of e.bindings)if(o.isUniformsGroup||o.isUniformBuffer){const a=o.buffer,l=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(o,{index:r++,bufferGPU:l})}else if(o.isSampledTexture){const{textureGPU:a,glTextureType:l}=this.get(o.texture);this.set(o,{index:s++,textureGPU:a,glTextureType:l})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const r=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(Ny).filter(r=>Ny[r]===e),n=this.extensions;for(let r=0;r<t.length;r++)if(n.has(t[r]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n=null,r=null,s=0,o=0){this.textureUtils.copyTextureToTexture(e,t,n,r,s,o)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){const{gl:t,state:n}=this;let r=null;if(e.textures!==null){const s=e.renderTarget,o=this.get(s),{samples:a,depthBuffer:l,stencilBuffer:c}=s,u=s.isWebGLCubeRenderTarget===!0,h=s.isRenderTarget3D===!0,d=s.isRenderTargetArray===!0,f=s.isXRRenderTarget===!0,p=f===!0&&s.hasExternalTextures===!0;let _=o.msaaFrameBuffer,g=o.depthRenderbuffer;const m=this.extensions.get("WEBGL_multisampled_render_to_texture"),v=this._useMultisampledRTT(s),x=Zb(e);let y;if(u?(o.cubeFramebuffers||(o.cubeFramebuffers={}),y=o.cubeFramebuffers[x]):f&&p===!1?y=this._xrFramebuffer:(o.framebuffers||(o.framebuffers={}),y=o.framebuffers[x]),y===void 0){y=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,y);const T=e.textures;if(u){o.cubeFramebuffers[x]=y;const{textureGPU:b}=this.get(T[0]),M=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+M,b,0)}else{o.framebuffers[x]=y;for(let b=0;b<T.length;b++){const M=T[b],w=this.get(M);w.renderTarget=e.renderTarget,w.cacheKey=x;const E=t.COLOR_ATTACHMENT0+b;if(h||d){const S=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,E,w.textureGPU,0,S)}else p&&v?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,E,t.TEXTURE_2D,w.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,E,t.TEXTURE_2D,w.textureGPU,0)}n.drawBuffers(e,y)}if(s.isXRRenderTarget&&s.autoAllocateDepthBuffer===!0){const b=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(b,e,0,v),o.xrDepthRenderbuffer=b}else if(e.depthTexture!==null){const b=this.get(e.depthTexture),M=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;b.renderTarget=e.renderTarget,b.cacheKey=x,p&&v?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,M,t.TEXTURE_2D,b.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,M,t.TEXTURE_2D,b.textureGPU,0)}}else if(f&&p){n.bindFramebuffer(t.FRAMEBUFFER,y);const T=this.get(e.textures[0]);v?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,T.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,T.textureGPU,0);const b=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(s.autoAllocateDepthBuffer===!0){const M=o.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,M),t.framebufferRenderbuffer(t.FRAMEBUFFER,b,t.RENDERBUFFER,M)}else{const M=this.get(e.depthTexture);v?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,b,t.TEXTURE_2D,M.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,b,t.TEXTURE_2D,M.textureGPU,0)}}if(a>0&&v===!1){if(_===void 0){const T=[];_=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,_);const b=[],M=e.textures;for(let w=0;w<M.length;w++){if(b[w]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,b[w]),T.push(t.COLOR_ATTACHMENT0+w),l){const C=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;T.push(C)}const E=e.textures[w],S=this.get(E);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,S.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+w,t.RENDERBUFFER,b[w])}if(o.msaaFrameBuffer=_,o.msaaRenderbuffers=b,g===void 0){g=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(g,e,a),o.depthRenderbuffer=g;const w=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;T.push(w)}o.invalidationArray=T}r=o.msaaFrameBuffer}else r=y}n.bindFramebuffer(t.FRAMEBUFFER,r)}_getVaoKey(e){let t="";for(let n=0;n<e.length;n++){const r=this.get(e[n]);t+=":"+r.id}return t}_createVao(e){const{gl:t}=this,n=t.createVertexArray();let r="",s=!0;t.bindVertexArray(n);for(let o=0;o<e.length;o++){const a=e[o],l=this.get(a);r+=":"+l.id,t.bindBuffer(t.ARRAY_BUFFER,l.bufferGPU),t.enableVertexAttribArray(o),(a.isStorageBufferAttribute||a.isStorageInstancedBufferAttribute)&&(s=!1);let c,u;a.isInterleavedBufferAttribute===!0?(c=a.data.stride*l.bytesPerElement,u=a.offset*l.bytesPerElement):(c=0,u=0),l.isInteger?t.vertexAttribIPointer(o,a.itemSize,l.type,c,u):t.vertexAttribPointer(o,a.itemSize,l.type,a.normalized,c,u),a.isInstancedBufferAttribute&&!a.isInterleavedBufferAttribute?t.vertexAttribDivisor(o,a.meshPerAttribute):a.isInterleavedBufferAttribute&&a.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(o,a.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),this.vaoCache[r]=n,{vaoGPU:n,staticVao:s}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let n=this.transformFeedbackCache[t];if(n!==void 0)return n;const{gl:r}=this;n=r.createTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,n);for(let s=0;s<e.length;s++){const o=e[s];r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,s,o.transformBuffer)}return r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){const n=this.gl;for(const r of e)for(const s of r.bindings){const a=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){const l=n.getUniformBlockIndex(t,s.name);n.uniformBlockBinding(t,l,a)}else if(s.isSampledTexture){const l=n.getUniformLocation(t,s.name);n.uniform1i(l,a)}}}_bindUniforms(e){const{gl:t,state:n}=this;for(const r of e)for(const s of r.bindings){const o=this.get(s),a=o.index;s.isUniformsGroup||s.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,a,o.bufferGPU):s.isSampledTexture&&n.bindTexture(o.glTextureType,o.textureGPU,t.TEXTURE0+a)}}_useMultisampledRTT(e){return e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e.autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const jo={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},wn={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},bn={Store:"store"},Ft={Load:"load",Clear:"clear"},Gf={CCW:"ccw"},zf={None:"none",Front:"front",Back:"back"},Ea={Uint16:"uint16",Uint32:"uint32"},F={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Vf={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},$s={Linear:"linear",Nearest:"nearest"},Ze={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Is={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},Dy={None:0,All:15},is={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},Hf={Storage:"storage",ReadOnlyStorage:"read-only-storage"},Wf={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},ko={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},Ly={TwoD:"2d",ThreeD:"3d"},Kn={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},yk={All:"all"},Nu={Vertex:"vertex",Instance:"instance"},Ap={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class xk extends fg{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class bk extends xk{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){this.texture=this.textureNode.value}}class Sk extends fS{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let Tk=0;class Mk extends Sk{constructor(e,t){super("StorageBuffer_"+Tk++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:Ur.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Ek extends bs{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,r=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:$s.Linear}),this.flipYSampler=e.createSampler({minFilter:$s.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:r})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:jo.TriangleStrip,stripIndexFormat:Ea.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:jo.TriangleStrip,stripIndexFormat:Ea.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){const r=t.format,{width:s,height:o}=t.size,a=this.getTransferPipeline(r),l=this.getFlipYPipeline(r),c=this.device.createTexture({size:{width:s,height:o,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Kn.TwoD,baseArrayLayer:n}),h=c.createView({baseMipLevel:0,mipLevelCount:1,dimension:Kn.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,_,g)=>{const m=p.getBindGroupLayout(0),v=this.device.createBindGroup({layout:m,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:_}]}),x=d.beginRenderPass({colorAttachments:[{view:g,loadOp:Ft.Clear,storeOp:bn.Store,clearValue:[0,0,0,0]}]});x.setPipeline(p),x.setBindGroup(0,v),x.draw(4,1,0,0),x.end()};f(a,u,h),f(l,h,u),this.device.queue.submit([d.finish()]),c.destroy()}generateMipmaps(e,t,n=0){const r=this.get(e);r.useCount===void 0&&(r.useCount=0,r.layers=[]);const s=r.layers[n]||this._mipmapCreateBundles(e,t,n),o=this.device.createCommandEncoder({});this._mipmapRunBundles(o,s),this.device.queue.submit([o.finish()]),r.useCount!==0&&(r.layers[n]=s),r.useCount++}_mipmapCreateBundles(e,t,n){const r=this.getTransferPipeline(t.format),s=r.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Kn.TwoD,baseArrayLayer:n});const a=[];for(let l=1;l<t.mipLevelCount;l++){const c=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:l,mipLevelCount:1,dimension:Kn.TwoD,baseArrayLayer:n}),h={colorAttachments:[{view:u,loadOp:Ft.Clear,storeOp:bn.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(r),d.setBindGroup(0,c),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:h}),o=u}return a}_mipmapRunBundles(e,t){const n=t.length;for(let r=0;r<n;r++){const s=t[r],o=e.beginRenderPass(s.passDescriptor);o.executeBundles(s.renderBundles),o.end()}}}const wk={[sm]:"never",[wh]:"less",[om]:"equal",[Ah]:"less-equal",[am]:"greater",[cm]:"greater-equal",[um]:"always",[lm]:"not-equal"},Ak=[0,1,3,2,4,5];class Rk{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Di,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,n=t.device,r=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};s.magFilter===$s.Linear&&s.minFilter===$s.Linear&&s.mipmapFilter===$s.Linear&&(s.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(s.compare=wk[e.compareFunction]),r.sampler=n.createSampler(s)}createDefaultTexture(e){let t;const n=Rp(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(n):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){const n=this.backend,r=n.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:s,height:o,depth:a,levels:l}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const c=this._getDimension(e),u=e.internalFormat||t.format||Rp(e,n.device);r.format=u;const{samples:h,primarySamples:d,isMSAA:f}=n.utils.getTextureSampleData(e);let p=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(p|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(p|=GPUTextureUsage.RENDER_ATTACHMENT);const _={label:e.name,size:{width:s,height:o,depthOrArrayLayers:a},mipLevelCount:l,sampleCount:d,dimension:c,format:u,usage:p};if(e.isVideoTexture){const g=e.source.data,m=new VideoFrame(g);_.size.width=m.displayWidth,_.size.height=m.displayHeight,m.close(),r.externalTexture=g}else{if(u===void 0){console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}r.texture=n.device.createTexture(_)}if(f){const g=Object.assign({},_);g.label=g.label+"-msaa",g.sampleCount=h,r.msaaTexture=n.device.createTexture(g)}r.initialized=!0,r.textureDescriptorGPU=_}destroyTexture(e){const t=this.backend,n=t.get(e);n.texture!==void 0&&n.texture.destroy(),n.msaaTexture!==void 0&&n.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const n=this.backend.get(e);delete n.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n);else{const n=e.image.depth||1;for(let r=0;r<n;r++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,r)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:n}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:n,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const n=this.backend,{width:r,height:s}=n.getDrawingBufferSize(),o=this.depthTexture,a=n.get(o).texture;let l,c;if(t?(l=Si,c=xi):e&&(l=bi,c=Lt),a!==void 0){if(o.image.width===r&&o.image.height===s&&o.format===l&&o.type===c)return a;this.destroyTexture(o)}return o.name="depthBuffer",o.format=l,o.type=c,o.image.width=r,o.image.height=s,this.createTexture(o,{width:r,height:s}),n.get(o).texture}updateTexture(e,t){const n=this.backend.get(e),{textureDescriptorGPU:r}=n;if(!(e.isRenderTargetTexture||r===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,n.texture,r,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,n.texture,r,s,e.flipY,s);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,n.texture,r,e.flipY);else if(e.isVideoTexture){const s=e.source.data;n.externalTexture=s}else this._copyImageToTexture(t.image,n.texture,r,0,e.flipY);n.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,n,r,s,o){const a=this.backend.device,l=this.backend.get(e),c=l.texture,u=l.textureDescriptorGPU.format,h=this._getBytesPerTexel(u);let d=r*h;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:r*s*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:c,origin:{x:t,y:n,z:o}},{buffer:f,bytesPerRow:d},{width:r,height:s});const _=this._getTypedArrayType(u);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new _(g)}_isEnvironmentTexture(e){const t=e.mapping;return t===ps||t===ms||t===Ii||t===Ui}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new dn;n.minFilter=Bt,n.magFilter=Bt,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Ch;n.minFilter=Bt,n.magFilter=Bt,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,n,r){for(let s=0;s<6;s++){const o=e[s],a=r===!0?Ak[s]:s;o.isDataTexture?this._copyBufferToTexture(o.image,t,n,a,r):this._copyImageToTexture(o,t,n,a,r)}}_copyImageToTexture(e,t,n,r,s){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:s},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new Ek(this.backend.device)),e}_generateMipmaps(e,t,n=0){this._getPassUtils().generateMipmaps(e,t,n)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,r,s,o=0){const a=this.backend.device,l=e.data,c=this._getBytesPerTexel(n.format),u=e.width*c;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},l,{offset:e.width*e.height*c*o,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,n,r)}_copyCompressedBufferToTexture(e,t,n){const r=this.backend.device,s=this._getBlockData(n.format),o=n.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const l=e[a],c=l.width,u=l.height,h=o?n.size.depthOrArrayLayers:1,d=Math.ceil(c/s.width)*s.byteLength,f=d*Math.ceil(u/s.height);for(let p=0;p<h;p++)r.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:p}},l.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/s.height)},{width:Math.ceil(c/s.width)*s.width,height:Math.ceil(u/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===F.BC1RGBAUnorm||e===F.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===F.BC2RGBAUnorm||e===F.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===F.BC3RGBAUnorm||e===F.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===F.BC4RUnorm||e===F.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===F.BC5RGUnorm||e===F.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===F.BC6HRGBUFloat||e===F.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===F.BC7RGBAUnorm||e===F.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===F.ETC2RGB8Unorm||e===F.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===F.ETC2RGB8A1Unorm||e===F.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===F.ETC2RGBA8Unorm||e===F.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===F.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===F.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===F.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===F.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===F.ASTC4x4Unorm||e===F.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===F.ASTC5x4Unorm||e===F.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===F.ASTC5x5Unorm||e===F.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===F.ASTC6x5Unorm||e===F.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===F.ASTC6x6Unorm||e===F.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===F.ASTC8x5Unorm||e===F.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===F.ASTC8x6Unorm||e===F.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===F.ASTC8x8Unorm||e===F.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===F.ASTC10x5Unorm||e===F.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===F.ASTC10x6Unorm||e===F.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===F.ASTC10x8Unorm||e===F.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===F.ASTC10x10Unorm||e===F.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===F.ASTC12x10Unorm||e===F.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===F.ASTC12x12Unorm||e===F.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Vf.ClampToEdge;return e===to?t=Vf.Repeat:e===no&&(t=Vf.MirrorRepeat),t}_convertFilterMode(e){let t=$s.Linear;return(e===Bt||e===em||e===Lr)&&(t=$s.Nearest),t}_getBytesPerTexel(e){if(e===F.R8Unorm||e===F.R8Snorm||e===F.R8Uint||e===F.R8Sint)return 1;if(e===F.R16Uint||e===F.R16Sint||e===F.R16Float||e===F.RG8Unorm||e===F.RG8Snorm||e===F.RG8Uint||e===F.RG8Sint)return 2;if(e===F.R32Uint||e===F.R32Sint||e===F.R32Float||e===F.RG16Uint||e===F.RG16Sint||e===F.RG16Float||e===F.RGBA8Unorm||e===F.RGBA8UnormSRGB||e===F.RGBA8Snorm||e===F.RGBA8Uint||e===F.RGBA8Sint||e===F.BGRA8Unorm||e===F.BGRA8UnormSRGB||e===F.RGB9E5UFloat||e===F.RGB10A2Unorm||e===F.RG11B10UFloat||e===F.Depth32Float||e===F.Depth24Plus||e===F.Depth24PlusStencil8||e===F.Depth32FloatStencil8)return 4;if(e===F.RG32Uint||e===F.RG32Sint||e===F.RG32Float||e===F.RGBA16Uint||e===F.RGBA16Sint||e===F.RGBA16Float)return 8;if(e===F.RGBA32Uint||e===F.RGBA32Sint||e===F.RGBA32Float)return 16}_getTypedArrayType(e){if(e===F.R8Uint)return Uint8Array;if(e===F.R8Sint)return Int8Array;if(e===F.R8Unorm)return Uint8Array;if(e===F.R8Snorm)return Int8Array;if(e===F.RG8Uint)return Uint8Array;if(e===F.RG8Sint)return Int8Array;if(e===F.RG8Unorm)return Uint8Array;if(e===F.RG8Snorm)return Int8Array;if(e===F.RGBA8Uint)return Uint8Array;if(e===F.RGBA8Sint)return Int8Array;if(e===F.RGBA8Unorm)return Uint8Array;if(e===F.RGBA8Snorm)return Int8Array;if(e===F.R16Uint)return Uint16Array;if(e===F.R16Sint)return Int16Array;if(e===F.RG16Uint)return Uint16Array;if(e===F.RG16Sint)return Int16Array;if(e===F.RGBA16Uint)return Uint16Array;if(e===F.RGBA16Sint)return Int16Array;if(e===F.R16Float||e===F.RG16Float||e===F.RGBA16Float)return Uint16Array;if(e===F.R32Uint)return Uint32Array;if(e===F.R32Sint)return Int32Array;if(e===F.R32Float)return Float32Array;if(e===F.RG32Uint)return Uint32Array;if(e===F.RG32Sint)return Int32Array;if(e===F.RG32Float)return Float32Array;if(e===F.RGBA32Uint)return Uint32Array;if(e===F.RGBA32Sint)return Int32Array;if(e===F.RGBA32Float)return Float32Array;if(e===F.BGRA8Unorm||e===F.BGRA8UnormSRGB)return Uint8Array;if(e===F.RGB10A2Unorm||e===F.RGB9E5UFloat||e===F.RG11B10UFloat)return Uint32Array;if(e===F.Depth32Float)return Float32Array;if(e===F.Depth24Plus||e===F.Depth24PlusStencil8)return Uint32Array;if(e===F.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=Ly.ThreeD:t=Ly.TwoD,t}}function Rp(i,e=null){const t=i.format,n=i.type,r=i.colorSpace;let s;if(i.isCompressedTexture===!0||i.isCompressedArrayTexture===!0)switch(t){case ls:s=r===Ie?F.BC1RGBAUnormSRGB:F.BC1RGBAUnorm;break;case cs:s=r===Ie?F.BC2RGBAUnormSRGB:F.BC2RGBAUnorm;break;case us:s=r===Ie?F.BC3RGBAUnormSRGB:F.BC3RGBAUnorm;break;case ra:s=r===Ie?F.ETC2RGB8UnormSRGB:F.ETC2RGB8Unorm;break;case sa:s=r===Ie?F.ETC2RGBA8UnormSRGB:F.ETC2RGBA8Unorm;break;case oa:s=r===Ie?F.ASTC4x4UnormSRGB:F.ASTC4x4Unorm;break;case aa:s=r===Ie?F.ASTC5x4UnormSRGB:F.ASTC5x4Unorm;break;case la:s=r===Ie?F.ASTC5x5UnormSRGB:F.ASTC5x5Unorm;break;case ca:s=r===Ie?F.ASTC6x5UnormSRGB:F.ASTC6x5Unorm;break;case ua:s=r===Ie?F.ASTC6x6UnormSRGB:F.ASTC6x6Unorm;break;case ha:s=r===Ie?F.ASTC8x5UnormSRGB:F.ASTC8x5Unorm;break;case da:s=r===Ie?F.ASTC8x6UnormSRGB:F.ASTC8x6Unorm;break;case fa:s=r===Ie?F.ASTC8x8UnormSRGB:F.ASTC8x8Unorm;break;case pa:s=r===Ie?F.ASTC10x5UnormSRGB:F.ASTC10x5Unorm;break;case ma:s=r===Ie?F.ASTC10x6UnormSRGB:F.ASTC10x6Unorm;break;case ga:s=r===Ie?F.ASTC10x8UnormSRGB:F.ASTC10x8Unorm;break;case _a:s=r===Ie?F.ASTC10x10UnormSRGB:F.ASTC10x10Unorm;break;case va:s=r===Ie?F.ASTC12x10UnormSRGB:F.ASTC12x10Unorm;break;case ya:s=r===Ie?F.ASTC12x12UnormSRGB:F.ASTC12x12Unorm;break;case Qt:s=r===Ie?F.RGBA8UnormSRGB:F.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case Qt:switch(n){case Xs:s=F.RGBA8Snorm;break;case Ys:s=F.RGBA16Sint;break;case Ki:s=F.RGBA16Uint;break;case Lt:s=F.RGBA32Uint;break;case Sn:s=F.RGBA32Sint;break;case Zt:s=r===Ie?F.RGBA8UnormSRGB:F.RGBA8Unorm;break;case Fn:s=F.RGBA16Float;break;case Jt:s=F.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case pc:switch(n){case Eh:s=F.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case mc:switch(n){case Xs:s=F.R8Snorm;break;case Ys:s=F.R16Sint;break;case Ki:s=F.R16Uint;break;case Lt:s=F.R32Uint;break;case Sn:s=F.R32Sint;break;case Zt:s=F.R8Unorm;break;case Fn:s=F.R16Float;break;case Jt:s=F.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case io:switch(n){case Xs:s=F.RG8Snorm;break;case Ys:s=F.RG16Sint;break;case Ki:s=F.RG16Uint;break;case Lt:s=F.RG32Uint;break;case Sn:s=F.RG32Sint;break;case Zt:s=F.RG8Unorm;break;case Fn:s=F.RG16Float;break;case Jt:s=F.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case bi:switch(n){case Ki:s=F.Depth16Unorm;break;case Lt:s=F.Depth24Plus;break;case Jt:s=F.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case Si:switch(n){case xi:s=F.Depth24PlusStencil8;break;case Jt:e&&e.features.has(Ap.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=F.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case Ca:switch(n){case Sn:s=F.R32Sint;break;case Lt:s=F.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case Na:switch(n){case Sn:s=F.RG32Sint;break;case Lt:s=F.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case Pa:switch(n){case Sn:s=F.RGBA32Sint;break;case Lt:s=F.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return s}const Ck=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,Nk=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,Iy={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},Pk=i=>{i=i.trim();const e=i.match(Ck);if(e!==null&&e.length===4){const t=e[2],n=[];let r=null;for(;(r=Nk.exec(t))!==null;)n.push({name:r[1],type:r[2]});const s=[];for(let u=0;u<n.length;u++){const{name:h,type:d}=n[u];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=Iy[f]),s.push(new hg(f,h))}const o=i.substring(e[0].length),a=e[3]||"void",l=e[1]!==void 0?e[1]:"";return{type:Iy[a]||a,inputs:s,name:l,inputsCode:t,blockCode:o,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class Dk extends dg{constructor(e){const{type:t,inputs:n,name:r,inputsCode:s,blockCode:o,outputType:a}=Pk(e);super(t,n,r),this.inputsCode=s,this.blockCode=o,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class Lk extends hS{parseFunction(e){return new Dk(e)}}const Go=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},Ik={[Ur.READ_ONLY]:"read",[Ur.WRITE_ONLY]:"write",[Ur.READ_WRITE]:"read_write"},Uy={[to]:"repeat",[lr]:"clamp",[no]:"mirror"},Pu={vertex:Go?Go.VERTEX:1,fragment:Go?Go.FRAGMENT:2,compute:Go?Go.COMPUTE:4},Fy={instance:!0,swizzleAssign:!1,storageBuffer:!0},Uk={"^^":"tsl_xor"},Fk={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},By={},Ai={tsl_xor:new gn("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new gn("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new gn("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new gn("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new gn("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new gn("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new gn("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new gn("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new gn("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new gn("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new gn("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new gn("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new gn(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},Sl={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(Ai.pow_float=new gn("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),Ai.pow_vec2=new gn("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[Ai.pow_float]),Ai.pow_vec3=new gn("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[Ai.pow_float]),Ai.pow_vec4=new gn("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[Ai.pow_float]),Sl.pow_float="tsl_pow_float",Sl.pow_vec2="tsl_pow_vec2",Sl.pow_vec3="tsl_pow_vec3",Sl.pow_vec4="tsl_pow_vec4");let bS="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(bS+=`diagnostic( off, derivative_uniformity );
`);class Bk extends cS{constructor(e,t){super(e,t,new Lk),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==yi}_generateTextureSample(e,t,n,r,s=this.shaderStage){return s==="fragment"?r?`textureSample( ${t}, ${t}_sampler, ${n}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n):this.generateTextureLod(e,t,n,r,"0")}_generateVideoSample(e,t,n=this.shaderStage){if(n==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${n} shader.`)}_generateTextureSampleLevel(e,t,n,r,s,o=this.shaderStage){return(o==="fragment"||o==="compute")&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${r} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,r):this.generateTextureLod(e,t,n,s,r)}generateWrapFunction(e){const t=`tsl_coord_${Uy[e.wrapS]}S_${Uy[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let n=By[t];if(n===void 0){const r=[],s=e.isData3DTexture?"vec3f":"vec2f";let o=`fn ${t}( coord : ${s} ) -> ${s} {

	return ${s}(
`;const a=(l,c)=>{l===to?(r.push(Ai.repeatWrapping_float),o+=`		tsl_repeatWrapping_float( coord.${c} )`):l===lr?(r.push(Ai.clampWrapping_float),o+=`		tsl_clampWrapping_float( coord.${c} )`):l===no?(r.push(Ai.mirrorWrapping_float),o+=`		tsl_mirrorWrapping_float( coord.${c} )`):(o+=`		coord.${c}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${l}" for vertex shader.`))};a(e.wrapS,"x"),o+=`,
`,a(e.wrapT,"y"),e.isData3DTexture&&(o+=`,
`,a(e.wrapR,"z")),o+=`
	);

}
`,By[t]=n=new gn(o,r)}return n.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,n){const r=this.getDataFromNode(e,this.shaderStage,this.globalCache);r.dimensionsSnippet===void 0&&(r.dimensionsSnippet={});let s=r.dimensionsSnippet[n];if(r.dimensionsSnippet[n]===void 0){let o,a;const{primarySamples:l}=this.renderer.backend.utils.getTextureSampleData(e),c=l>1;e.isData3DTexture?a="vec3<u32>":a="vec2<u32>",c||e.isVideoTexture||e.isStorageTexture?o=t:o=`${t}${n?`, u32( ${n} )`:""}`,s=new ju(new Yu(`textureDimensions( ${o} )`,a)),r.dimensionsSnippet[n]=s,(e.isDataArrayTexture||e.isData3DTexture)&&(r.arrayLayerCount=new ju(new Yu(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(r.cubeFaceCount=new ju(new Yu("6u","u32")))}return s.build(this)}generateFilteredTexture(e,t,n,r="0u"){this._include("biquadraticTexture");const s=this.generateWrapFunction(e),o=this.generateTextureDimension(e,t,r);return`tsl_biquadraticTexture( ${t}, ${s}( ${n} ), ${o}, u32( ${r} ) )`}generateTextureLod(e,t,n,r,s="0u"){const o=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,s),l=e.isData3DTexture?"vec3":"vec2",c=`${l}<u32>(${o}(${n}) * ${l}<f32>(${a}))`;return this.generateTextureLoad(e,t,c,r,s)}generateTextureLoad(e,t,n,r,s="0u"){return e.isVideoTexture===!0||e.isStorageTexture===!0?`textureLoad( ${t}, ${n} )`:r?`textureLoad( ${t}, ${n}, ${r}, u32( ${s} ) )`:`textureLoad( ${t}, ${n}, u32( ${s} ) )`}generateTextureStore(e,t,n,r){return`textureStore( ${t}, ${n}, ${r} )`}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===Jt||this.isSampleCompare(e)===!1&&e.minFilter===Bt&&e.magFilter===Bt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,n,r,s=this.shaderStage){let o=null;return e.isVideoTexture===!0?o=this._generateVideoSample(t,n,s):this.isUnfilterable(e)?o=this.generateTextureLod(e,t,n,r,"0",s):o=this._generateTextureSample(e,t,n,r,s),o}generateTextureGrad(e,t,n,r,s,o=this.shaderStage){if(o==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${r[0]}, ${r[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${o} shader.`)}generateTextureCompare(e,t,n,r,s,o=this.shaderStage){if(o==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${r} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}generateTextureLevel(e,t,n,r,s,o=this.shaderStage){let a=null;return e.isVideoTexture===!0?a=this._generateVideoSample(t,n,o):a=this._generateTextureSampleLevel(e,t,n,r,s,o),a}generateTextureBias(e,t,n,r,s,o=this.shaderStage){if(o==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${r} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${o} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const n=e.name,r=e.type;return r==="texture"||r==="cubeTexture"||r==="storageTexture"||r==="texture3D"?n:r==="buffer"||r==="storageBuffer"||r==="indirectStorageBuffer"?this.isCustomStruct(e)?n:n+".value":e.groupNode.name+"."+n}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=Uk[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?Ur.READ_ONLY:e.access}getStorageAccess(e,t){return Ik[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,n,r=null){const s=super.getUniformFromNode(e,t,n,r),o=this.getDataFromNode(e,n,this.globalCache);if(o.uniformGPU===void 0){let a;const l=e.groupNode,c=l.name,u=this.getBindGroupArray(c,n);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null;const d=this.getNodeAccess(e,n);if(t==="texture"||t==="storageTexture"?h=new td(s.name,s.node,l,d):t==="cubeTexture"?h=new _S(s.name,s.node,l,d):t==="texture3D"&&(h=new vS(s.name,s.node,l,d)),h.store=e.isStorageTextureNode===!0,h.setVisibility(Pu[n]),(n==="fragment"||n==="compute")&&this.isUnfilterable(e.value)===!1&&h.store===!1){const f=new bk(`${s.name}_sampler`,s.node,l);f.setVisibility(Pu[n]),u.push(f,h),a=[f,h]}else u.push(h),a=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const h=t==="buffer"?mS:Mk,d=new h(e,l);d.setVisibility(Pu[n]),u.push(d),a=d,s.name=r||"NodeBuffer_"+s.id}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[c];d===void 0&&(d=new gS(c,l),d.setVisibility(Pu[n]),h[c]=d,u.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}o.uniformGPU=a}return s}getBuiltin(e,t,n,r=this.shaderStage){const s=this.builtins[r]||(this.builtins[r]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),r=[];for(const o of t.inputs)r.push(o.name+" : "+this.getType(o.type));let s=`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {
${n.vars}
${n.code}
`;return n.result&&(s+=`	return ${n.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],n=this.directives[e];if(n!==void 0)for(const r of n)t.push(`enable ${r};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],n=this.builtins[e];if(n!==void 0)for(const{name:r,property:s,type:o}of n.values())t.push(`@builtin( ${r} ) ${s} : ${o}`);return t.join(`,
	`)}getScopedArray(e,t,n,r){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:r}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:n,scope:r,bufferType:s,bufferCount:o}of this.scopedArrays.values()){const a=this.getType(s);t.push(`var<${r}> ${n}: array< ${a}, ${o} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const n=this.getBuiltins("attribute");n&&t.push(n);const r=this.getAttributesArray();for(let s=0,o=r.length;s<o;s++){const a=r[s],l=a.name,c=this.getType(a.type);t.push(`@location( ${s} ) ${l} : ${c}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[];for(const n of e.members){const r=e.output?"@location( "+n.index+" ) ":"";let s=this.getType(n.type);n.atomic&&(s="atomic< "+s+" >"),t.push(`	${r+n.name} : ${s}`)}return e.output&&t.push(`	${this.getBuiltins("output")}`),t.join(`,
`)}getStructs(e){let t="";const n=this.structs[e];if(n.length>0){const r=[];for(const s of n){let o=`struct ${s.name} {
`;o+=this.getStructMembers(s),o+=`
};`,r.push(o)}t=`
`+r.join(`

`)+`
`}return t}getVar(e,t,n=null){let r=`var ${t} : `;return n!==null?r+=this.generateArrayDeclaration(e,n):r+=this.getType(e),r}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const r of n)t.push(`	${this.getVar(r.type,r.name,r.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const s=this.varyings,o=this.vars[e];for(let a=0;a<s.length;a++){const l=s[a];if(l.needsInterpolation){let c=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(l.type)&&(c+=" @interpolate( flat )"),t.push(`${c} ${l.name} : ${this.getType(l.type)}`)}else e==="vertex"&&o.includes(l)===!1&&o.push(l)}}const n=this.getBuiltins(e);n&&t.push(n);const r=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+r):r}isCustomStruct(e){return e.value.isStorageBufferAttribute&&e.node.structTypeNode!==null}getUniforms(e){const t=this.uniforms[e],n=[],r=[],s=[],o={};for(const l of t){const c=l.groupNode.name,u=this.bindingsIndexes[c];if(l.type==="texture"||l.type==="cubeTexture"||l.type==="storageTexture"||l.type==="texture3D"){const h=l.node.value;(e==="fragment"||e==="compute")&&this.isUnfilterable(h)===!1&&l.node.isStorageTextureNode!==!0&&(this.isSampleCompare(h)?n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${l.name}_sampler : sampler_comparison;`):n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${l.name}_sampler : sampler;`));let d,f="";const{primarySamples:p}=this.renderer.backend.utils.getTextureSampleData(h);if(p>1&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(h.isVideoTexture===!0)d="texture_external";else if(h.isData3DTexture===!0)d="texture_3d<f32>";else if(l.node.isStorageTextureNode===!0){const _=Rp(h),g=this.getStorageAccess(l.node,e);d=`texture_storage_2d<${_}, ${g}>`}else{const _=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${_}32>`}n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${l.name} : ${d};`)}else if(l.type==="buffer"||l.type==="storageBuffer"||l.type==="indirectStorageBuffer"){const h=l.node,d=this.getType(h.getNodeType(this)),f=h.bufferCount,p=f>0&&l.type==="buffer"?", "+f:"",_=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h,e)}`:"uniform";if(this.isCustomStruct(l))r.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var<${_}> ${l.name} : ${d};`);else{const m=`	value : array< ${h.isAtomic?`atomic<${d}>`:`${d}`}${p} >`;r.push(this._getWGSLStructBinding(l.name,m,_,u.binding++,u.group))}}else{const h=this.getType(this.getVectorType(l.type)),d=l.groupNode.name;(o[d]||(o[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${l.name} : ${h}`)}}for(const l in o){const c=o[l];s.push(this._getWGSLStructBinding(l,c.snippets.join(`,
`),"uniform",c.index,c.id))}let a=n.join(`
`);return a+=r.join(`
`),a+=s.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let r=`// code

`;r+=this.flowCode[t];const s=this.flowNodes[t],o=s[s.length-1],a=o.outputNode,l=a!==void 0&&a.isOutputStructNode===!0;for(const c of s){const u=this.getFlowData(c),h=c.name;if(h&&(r.length>0&&(r+=`
`),r+=`	// flow -> ${h}
`),r+=`${u.code}
	`,c===o&&t!=="compute"){if(r+=`// result

	`,t==="vertex")r+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(l)n.returnType=a.getNodeType(this),n.structs+="var<private> output : "+n.returnType+";",r+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;`,r+=`output.color = ${u.result};

	return output;`}}}n.flow=r}this.shaderStage=null,this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let n;return t!==null&&(n=this._getWGSLMethod(e+"_"+t)),n===void 0&&(n=this._getWGSLMethod(e)),n||e}getType(e){return Fk[e]||e}isAvailable(e){let t=Fy[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),Fy[e]=t),t}_getWGSLMethod(e){return Ai[e]!==void 0&&this._include(e),Sl[e]}_include(e){const t=Ai[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${bS}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x + globalId.y * numWorkgroups.x * u32(${t}) + globalId.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,n,r=0,s=0){const o=e+"Struct";return`${this._getWGSLStruct(o,t)}
@binding( ${r} ) @group( ${s} )
var<${n}> ${e} : ${o};`}}class Ok{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=F.Depth24PlusStencil8:e.depth&&(t=F.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const s=this.backend.renderer,o=s.getRenderTarget();t=o?o.samples:s.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const n=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:n?1:t,isMSAA:n}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return jo.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return jo.LineList;if(e.isLine)return jo.LineStrip;if(e.isMesh)return jo.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===Zt)return F.BGRA8Unorm;if(e===Fn)return F.RGBA16Float;throw new Error("Unsupported outputType")}}const kk=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),Gk=new Map([[v0,["float16"]]]),zk=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class Vk{constructor(e){this.backend=e}createAttribute(e,t){const n=this._getBufferAttribute(e),r=this.backend,s=r.get(n);let o=s.buffer;if(o===void 0){const a=r.device;let l=n.array;if(e.normalized===!1){if(l.constructor===Int16Array||l.constructor===Int8Array)l=new Int32Array(l);else if((l.constructor===Uint16Array||l.constructor===Uint8Array)&&(l=new Uint32Array(l),t&GPUBufferUsage.INDEX))for(let u=0;u<l.length;u++)l[u]===65535&&(l[u]=4294967295)}if(n.array=l,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){l=new l.constructor(n.count*4);for(let u=0;u<n.count;u++)l.set(n.array.subarray(u*3,u*3+3),u*4);n.itemSize=4,n.array=l,s._force3to4BytesAlignment=!0}const c=l.byteLength+(4-l.byteLength%4)%4;o=a.createBuffer({label:n.name,size:c,usage:t,mappedAtCreation:!0}),new l.constructor(o.getMappedRange()).set(l),o.unmap(),s.buffer=o}}updateAttribute(e){const t=this._getBufferAttribute(e),n=this.backend,r=n.device,s=n.get(t),o=n.get(t).buffer;let a=t.array;if(s._force3to4BytesAlignment===!0){a=new a.constructor(t.count*4);for(let u=0;u<t.count;u++)a.set(t.array.subarray(u*3,u*3+3),u*4);t.array=a}const l=this._isTypedArray(a),c=t.updateRanges;if(c.length===0)r.queue.writeBuffer(o,0,a,0);else{const u=l?1:a.BYTES_PER_ELEMENT;for(let h=0,d=c.length;h<d;h++){const f=c[h];let p,_;if(s._force3to4BytesAlignment===!0){const m=Math.floor(f.start/3),v=Math.ceil(f.count/3);p=m*4*u,_=v*4*u}else p=f.start*u,_=f.count*u;const g=p*(l?a.BYTES_PER_ELEMENT:1);r.queue.writeBuffer(o,g,a,p,_)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),n=new Map;for(let r=0;r<t.length;r++){const s=t[r],o=s.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(s);let l=n.get(a);if(l===void 0){let h,d;s.isInterleavedBufferAttribute===!0?(h=s.data.stride*o,d=s.data.isInstancedInterleavedBuffer?Nu.Instance:Nu.Vertex):(h=s.itemSize*o,d=s.isInstancedBufferAttribute?Nu.Instance:Nu.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(h=4),l={arrayStride:h,attributes:[],stepMode:d},n.set(a,l)}const c=this._getVertexFormat(s),u=s.isInterleavedBufferAttribute===!0?s.offset*o:0;l.attributes.push({shaderLocation:r,offset:u,format:c})}return Array.from(n.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,n=t.device,s=t.get(this._getBufferAttribute(e)).buffer,o=s.size,a=n.createBuffer({label:`${e.name}_readback`,size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),l=n.createCommandEncoder({label:`readback_encoder_${e.name}`});l.copyBufferToBuffer(s,0,a,0,o);const c=l.finish();n.queue.submit([c]),await a.mapAsync(GPUMapMode.READ);const u=a.getMappedRange(),h=new e.array.constructor(u.slice(0));return a.unmap(),h.buffer}_getVertexFormat(e){const{itemSize:t,normalized:n}=e,r=e.array.constructor,s=e.constructor;let o;if(t===1)o=zk.get(r);else{const l=(Gk.get(s)||kk.get(r))[n?1:0];if(l){const c=r.BYTES_PER_ELEMENT*t,h=Math.floor((c+3)/4)*4/r.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${l}x${h}`}}return o||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),o}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Hk{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,n=t.device,r=[];let s=0;for(const o of e.bindings){const a={binding:s++,visibility:o.visibility};if(o.isUniformBuffer||o.isStorageBuffer){const l={};o.isStorageBuffer&&(o.visibility&4&&(o.access===Ur.READ_WRITE||o.access===Ur.WRITE_ONLY)?l.type=Hf.Storage:l.type=Hf.ReadOnlyStorage),a.buffer=l}else if(o.isSampler){const l={};o.texture.isDepthTexture&&o.texture.compareFunction!==null&&(l.type="comparison"),a.sampler=l}else if(o.isSampledTexture&&o.texture.isVideoTexture)a.externalTexture={};else if(o.isSampledTexture&&o.store){const l={};l.format=this.backend.get(o.texture).texture.format;const c=o.access;c===Ur.READ_WRITE?l.access=Wf.ReadWrite:c===Ur.WRITE_ONLY?l.access=Wf.WriteOnly:l.access=Wf.ReadOnly,a.storageTexture=l}else if(o.isSampledTexture){const l={},{primarySamples:c}=t.utils.getTextureSampleData(o.texture);if(c>1&&(l.multisampled=!0,o.texture.isDepthTexture||(l.sampleType=ko.UnfilterableFloat)),o.texture.isDepthTexture)l.sampleType=ko.Depth;else if(o.texture.isDataTexture||o.texture.isDataArrayTexture||o.texture.isData3DTexture){const u=o.texture.type;u===Sn?l.sampleType=ko.SInt:u===Lt?l.sampleType=ko.UInt:u===Jt&&(this.backend.hasFeature("float32-filterable")?l.sampleType=ko.Float:l.sampleType=ko.UnfilterableFloat)}o.isSampledCubeTexture?l.viewDimension=Kn.Cube:o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?l.viewDimension=Kn.TwoDArray:o.isSampledTexture3D&&(l.viewDimension=Kn.ThreeD),a.texture=l}else console.error(`WebGPUBindingUtils: Unsupported binding "${o}".`);r.push(a)}return n.createBindGroupLayout({entries:r})}createBindings(e,t,n,r=0){const{backend:s,bindGroupLayoutCache:o}=this,a=s.get(e);let l=o.get(e.bindingsReference);l===void 0&&(l=this.createBindingsLayout(e),o.set(e.bindingsReference,l));let c;n>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[n]===r&&(c=a.groups[n])),c===void 0&&(c=this.createBindGroup(e,l),n>0&&(a.groups[n]=c,a.versions[n]=r)),a.group=c,a.layout=l}updateBinding(e){const t=this.backend,n=t.device,r=e.buffer,s=t.get(e).buffer;n.queue.writeBuffer(s,0,r,0)}createBindGroupIndex(e,t){const r=this.backend.device,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,o=e[0],a=r.createBuffer({label:"bindingCameraIndex_"+o,size:16,usage:s});r.queue.writeBuffer(a,0,e,0);const l=[{binding:0,resource:{buffer:a}}];return r.createBindGroup({label:"bindGroupCameraIndex_"+o,layout:t,entries:l})}createBindGroup(e,t){const n=this.backend,r=n.device;let s=0;const o=[];for(const a of e.bindings){if(a.isUniformBuffer){const l=n.get(a);if(l.buffer===void 0){const c=a.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=r.createBuffer({label:"bindingBuffer_"+a.name,size:c,usage:u});l.buffer=h}o.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isStorageBuffer){const l=n.get(a);if(l.buffer===void 0){const c=a.attribute;l.buffer=n.get(c).buffer}o.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isSampler){const l=n.get(a.texture);o.push({binding:s,resource:l.sampler})}else if(a.isSampledTexture){const l=n.get(a.texture);let c;if(l.externalTexture!==void 0)c=r.importExternalTexture({source:l.externalTexture});else{const u=a.store?1:l.texture.mipLevelCount,h=`view-${l.texture.width}-${l.texture.height}-${u}`;if(c=l[h],c===void 0){const d=yk.All;let f;a.isSampledCubeTexture?f=Kn.Cube:a.isSampledTexture3D?f=Kn.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=Kn.TwoDArray:f=Kn.TwoD,c=l[h]=l.texture.createView({aspect:d,dimension:f,mipLevelCount:u})}}o.push({binding:s,resource:c})}s++}return r.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:o})}}class Wk{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:n,material:r,geometry:s,pipeline:o}=e,{vertexProgram:a,fragmentProgram:l}=o,c=this.backend,u=c.device,h=c.utils,d=c.get(o),f=[];for(const k of e.getBindings()){const D=c.get(k);f.push(D.layout)}const p=c.attributeUtils.createShaderVertexBuffers(e);let _;r.transparent===!0&&r.blending!==si&&(_=this._getBlending(r));let g={};r.stencilWrite===!0&&(g={compare:this._getStencilCompare(r),failOp:this._getStencilOperation(r.stencilFail),depthFailOp:this._getStencilOperation(r.stencilZFail),passOp:this._getStencilOperation(r.stencilZPass)});const m=this._getColorWriteMask(r),v=[];if(e.context.textures!==null){const k=e.context.textures;for(let D=0;D<k.length;D++){const L=h.getTextureFormatGPU(k[D]);v.push({format:L,blend:_,writeMask:m})}}else{const k=h.getCurrentColorFormat(e.context);v.push({format:k,blend:_,writeMask:m})}const x=c.get(a).module,y=c.get(l).module,T=this._getPrimitiveState(n,s,r),b=this._getDepthCompare(r),M=h.getCurrentDepthStencilFormat(e.context),w=this._getSampleCount(e.context),E={label:`renderPipeline_${r.name||r.type}_${r.id}`,vertex:Object.assign({},x,{buffers:p}),fragment:Object.assign({},y,{targets:v}),primitive:T,multisample:{count:w,alphaToCoverageEnabled:r.alphaToCoverage&&w>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},S={},C=e.context.depth,I=e.context.stencil;if((C===!0||I===!0)&&(C===!0&&(S.format=M,S.depthWriteEnabled=r.depthWrite,S.depthCompare=b),I===!0&&(S.stencilFront=g,S.stencilBack={},S.stencilReadMask=r.stencilFuncMask,S.stencilWriteMask=r.stencilWriteMask),r.polygonOffset===!0&&(S.depthBias=r.polygonOffsetUnits,S.depthBiasSlopeScale=r.polygonOffsetFactor,S.depthBiasClamp=0),E.depthStencil=S),t===null)d.pipeline=u.createRenderPipeline(E);else{const k=new Promise(D=>{u.createRenderPipelineAsync(E).then(L=>{d.pipeline=L,D()})});t.push(k)}}createBundleEncoder(e){const t=this.backend,{utils:n,device:r}=t,s=n.getCurrentDepthStencilFormat(e),o=n.getCurrentColorFormat(e),a=this._getSampleCount(e),l={label:"renderBundleEncoder",colorFormats:[o],depthStencilFormat:s,sampleCount:a};return r.createRenderBundleEncoder(l)}createComputePipeline(e,t){const n=this.backend,r=n.device,s=n.get(e.computeProgram).module,o=n.get(e),a=[];for(const l of t){const c=n.get(l);a.push(c.layout)}o.pipeline=r.createComputePipeline({compute:s,layout:r.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,n;const r=e.blending,s=e.blendSrc,o=e.blendDst,a=e.blendEquation;if(r===Xo){const l=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,c=e.blendDstAlpha!==null?e.blendDstAlpha:o,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(a)},n={srcFactor:this._getBlendFactor(l),dstFactor:this._getBlendFactor(c),operation:this._getBlendOperation(u)}}else{const l=e.premultipliedAlpha,c=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:Is.Add},n={srcFactor:d,dstFactor:f,operation:Is.Add}};if(l)switch(r){case Pi:c(Ze.One,Ze.OneMinusSrcAlpha,Ze.One,Ze.OneMinusSrcAlpha);break;case ta:c(Ze.One,Ze.One,Ze.One,Ze.One);break;case na:c(Ze.Zero,Ze.OneMinusSrc,Ze.Zero,Ze.One);break;case ia:c(Ze.Zero,Ze.Src,Ze.Zero,Ze.SrcAlpha);break}else switch(r){case Pi:c(Ze.SrcAlpha,Ze.OneMinusSrcAlpha,Ze.One,Ze.OneMinusSrcAlpha);break;case ta:c(Ze.SrcAlpha,Ze.One,Ze.SrcAlpha,Ze.One);break;case na:c(Ze.Zero,Ze.OneMinusSrc,Ze.Zero,Ze.One);break;case ia:c(Ze.Zero,Ze.Src,Ze.Zero,Ze.Src);break}}if(t!==void 0&&n!==void 0)return{color:t,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",r)}_getBlendFactor(e){let t;switch(e){case Er:t=Ze.Zero;break;case $p:t=Ze.One;break;case qp:t=Ze.Src;break;case jp:t=Ze.OneMinusSrc;break;case Ul:t=Ze.SrcAlpha;break;case Fl:t=Ze.OneMinusSrcAlpha;break;case Kp:t=Ze.Dst;break;case Zp:t=Ze.OneMinusDstColor;break;case Xp:t=Ze.DstAlpha;break;case Yp:t=Ze.OneMinusDstAlpha;break;case Qp:t=Ze.SrcAlphaSaturated;break;case UB:t=Ze.Constant;break;case FB:t=Ze.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const n=e.stencilFunc;switch(n){case DT:t=wn.Never;break;case np:t=wn.Always;break;case LT:t=wn.Less;break;case UT:t=wn.LessEqual;break;case IT:t=wn.Equal;break;case OT:t=wn.GreaterEqual;break;case FT:t=wn.Greater;break;case BT:t=wn.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case Fs:t=is.Keep;break;case ET:t=is.Zero;break;case wT:t=is.Replace;break;case PT:t=is.Invert;break;case AT:t=is.IncrementClamp;break;case RT:t=is.DecrementClamp;break;case CT:t=is.IncrementWrap;break;case NT:t=is.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case In:t=Is.Add;break;case Hp:t=Is.Subtract;break;case Wp:t=Is.ReverseSubtract;break;case s0:t=Is.Min;break;case o0:t=Is.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){const r={},s=this.backend.utils;switch(r.topology=s.getPrimitiveTopology(e,n),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?Ea.Uint16:Ea.Uint32),n.side){case ri:r.frontFace=Gf.CCW,r.cullMode=zf.Back;break;case It:r.frontFace=Gf.CCW,r.cullMode=zf.Front;break;case Vn:r.frontFace=Gf.CCW,r.cullMode=zf.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",n.side);break}return r}_getColorWriteMask(e){return e.colorWrite===!0?Dy.All:Dy.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=wn.Always;else{const n=e.depthFunc;switch(n){case Bl:t=wn.Never;break;case Ol:t=wn.Always;break;case kl:t=wn.Less;break;case fs:t=wn.LessEqual;break;case Gl:t=wn.Equal;break;case zl:t=wn.GreaterEqual;break;case Vl:t=wn.Greater;break;case Hl:t=wn.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return t}}class $k extends xS{constructor(e,t,n=2048){super(n),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const r=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Qi(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,n=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();const r=this.device.createCommandEncoder();r.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),r.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,n);const s=r.finish();if(this.device.queue.submit([s]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,n),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const o=new BigUint64Array(this.resultBuffer.getMappedRange(0,n));let a=0;for(const[,l]of e){const c=o[l],u=o[l+1],h=Number(u-c)/1e6;a+=h}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class qk extends yS{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new Ok(this),this.attributeUtils=new Vk(this),this.bindingUtils=new Hk(this),this.pipelineUtils=new Wk(this),this.textureUtils=new Rk(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let n;if(t.device===void 0){const o={powerPreference:t.powerPreference},a=typeof navigator<"u"?await navigator.gpu.requestAdapter(o):null;if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const l=Object.values(Ap),c=[];for(const h of l)a.features.has(h)&&c.push(h);const u={requiredFeatures:c,requiredLimits:t.requiredLimits};n=await a.requestDevice(u)}else n=t.device;n.lost.then(o=>{const a={api:"WebGPU",message:o.message||"Unknown reason",reason:o.reason||null,originalEvent:o};e.onDeviceLost(a)});const r=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=n,this.context=r;const s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Ap.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return gs}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const n=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()});const r=e.colorAttachments[0];this.renderer.samples>0?r.view=this.colorBuffer.createView():r.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e,t={}){const n=e.renderTarget,r=this.get(n);let s=r.descriptors;if(s===void 0||r.width!==n.width||r.height!==n.height||r.dimensions!==n.dimensions||r.activeMipmapLevel!==e.activeMipmapLevel||r.activeCubeFace!==e.activeCubeFace||r.samples!==n.samples){s={},r.descriptors=s;const c=()=>{n.removeEventListener("dispose",c),this.delete(n)};n.hasEventListener("dispose",c)===!1&&n.addEventListener("dispose",c)}const o=e.getCacheKey();let a=s[o];if(a===void 0){const c=e.textures,u=[];let h;for(let d=0;d<c.length;d++){const f=this.get(c[d]),p={label:`colorAttachment_${d}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:Kn.TwoD};n.isRenderTarget3D?(h=e.activeCubeFace,p.baseArrayLayer=0,p.dimension=Kn.ThreeD,p.depthOrArrayLayers=c[d].image.depth):n.isRenderTargetArray&&(p.dimension=Kn.TwoDArray,p.depthOrArrayLayers=c[d].image.depth);const _=f.texture.createView(p);let g,m;f.msaaTexture!==void 0?(g=f.msaaTexture.createView(),m=_):(g=_,m=void 0),u.push({view:g,resolveTarget:m,depthSlice:h})}if(a={textureViews:u},e.depth){const d=this.get(e.depthTexture);a.depthStencilView=d.texture.createView()}s[o]=a,r.width=n.width,r.height=n.height,r.samples=n.samples,r.activeMipmapLevel=e.activeMipmapLevel,r.activeCubeFace=e.activeCubeFace,r.dimensions=n.dimensions}const l={colorAttachments:[]};for(let c=0;c<a.textureViews.length;c++){const u=a.textureViews[c];let h={r:0,g:0,b:0,a:1};c===0&&t.clearValue&&(h=t.clearValue),l.colorAttachments.push({view:u.view,depthSlice:u.depthSlice,resolveTarget:u.resolveTarget,loadOp:t.loadOp||Ft.Load,storeOp:t.storeOp||bn.Store,clearValue:h})}return a.depthStencilView&&(l.depthStencilAttachment={view:a.depthStencilView}),l}beginRender(e){const t=this.get(e),n=this.device,r=e.occlusionQueryCount;let s;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=n.createQuerySet({type:"occlusion",count:r,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null);let o;e.textures===null?o=this._getDefaultRenderPassDescriptor():o=this._getRenderPassDescriptor(e,{loadOp:Ft.Load}),this.initTimestampQuery(e,o),o.occlusionQuerySet=s;const a=o.depthStencilAttachment;if(e.textures!==null){const u=o.colorAttachments;for(let h=0;h<u.length;h++){const d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=Ft.Clear,d.storeOp=bn.Store):(d.loadOp=Ft.Load,d.storeOp=bn.Store)}}else{const u=o.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=Ft.Clear,u.storeOp=bn.Store):(u.loadOp=Ft.Load,u.storeOp=bn.Store)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Ft.Clear,a.depthStoreOp=bn.Store):(a.depthLoadOp=Ft.Load,a.depthStoreOp=bn.Store)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Ft.Clear,a.stencilStoreOp=bn.Store):(a.stencilLoadOp=Ft.Load,a.stencilStoreOp=bn.Store));const l=n.createCommandEncoder({label:"renderContext_"+e.id}),c=l.beginRenderPass(o);if(t.descriptor=o,t.encoder=l,t.currentPass=c,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;c.setScissorRect(u,h,d,f)}}finishRender(e){const t=this.get(e),n=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),n>0){const r=n*8;let s=this.occludedResolveCache.get(r);s===void 0&&(s=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,s));const o=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,s,0),t.encoder.copyBufferToBuffer(s,0,o,0,r),t.occlusionQueryBuffer=o,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const r=e.textures;for(let s=0;s<r.length;s++){const o=r[s];o.generateMipmaps===!0&&this.textureUtils.generateMipmaps(o)}}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:r}=t;if(n&&r){const s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const o=n.getMappedRange(),a=new BigUint64Array(o);for(let l=0;l<r.length;l++)a[l]===BigInt(0)&&s.add(r[l]);n.destroy(),t.occluded=s}}updateViewport(e){const{currentPass:t}=this.get(e),{x:n,y:r,width:s,height:o,minDepth:a,maxDepth:l}=e.viewportValue;t.setViewport(n,r,s,o,a,l)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,n,r=null){const s=this.device,o=this.renderer;let a=[],l,c,u,h;if(e){const p=this.getClearColor();c={r:p.r,g:p.g,b:p.b,a:p.a}}if(r===null){u=o.depth,h=o.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){a=p.colorAttachments;const _=a[0];_.clearValue=c,_.loadOp=Ft.Clear,_.storeOp=bn.Store}(u||h)&&(l=p.depthStencilAttachment)}else{u=r.depth,h=r.stencil;const p={loadOp:e?Ft.Clear:Ft.Load,clearValue:e?c:void 0};u&&(p.depthLoadOp=t?Ft.Clear:Ft.Load,p.depthClearValue=t?o.getClearDepth():void 0,p.depthStoreOp=bn.Store),h&&(p.stencilLoadOp=n?Ft.Clear:Ft.Load,p.stencilClearValue=n?o.getClearStencil():void 0,p.stencilStoreOp=bn.Store);const _=this._getRenderPassDescriptor(r,p);a=_.colorAttachments,l=_.depthStencilAttachment}u&&l&&l.depthLoadOp===void 0&&(t?(l.depthLoadOp=Ft.Clear,l.depthClearValue=o.getClearDepth(),l.depthStoreOp=bn.Store):(l.depthLoadOp=Ft.Load,l.depthStoreOp=bn.Store)),h&&l&&l.stencilLoadOp===void 0&&(n?(l.stencilLoadOp=Ft.Clear,l.stencilClearValue=o.getClearStencil(),l.stencilStoreOp=bn.Store):(l.stencilLoadOp=Ft.Load,l.stencilStoreOp=bn.Store));const d=s.createCommandEncoder({label:"clear"});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:l}).end(),s.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),n={label:"computeGroup_"+e.id};this.initTimestampQuery(e,n),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,r){const{passEncoderGPU:s}=this.get(e),o=this.get(r).pipeline;s.setPipeline(o);for(let u=0,h=n.length;u<h;u++){const d=n[u],f=this.get(d);s.setBindGroup(u,f.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,l=this.get(t);l.dispatchSize===void 0&&(l.dispatchSize={x:0,y:1,z:1});const{dispatchSize:c}=l;t.dispatchCount>a?(c.x=Math.min(t.dispatchCount,a),c.y=Math.ceil(t.dispatchCount/a)):c.x=t.dispatchCount,s.dispatchWorkgroups(c.x,c.y,c.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:n,material:r,context:s,pipeline:o}=e,a=e.getBindings(),l=this.get(s),c=this.get(o).pipeline,u=l.currentSets,h=l.currentPass,d=e.getDrawParameters();if(d===null)return;u.pipeline!==c&&(h.setPipeline(c),u.pipeline=c);const f=u.bindingGroups;for(let v=0,x=a.length;v<x;v++){const y=a[v],T=this.get(y);f[y.index]!==y.id&&(h.setBindGroup(y.index,T.group),f[y.index]=y.id)}const p=e.getIndex(),_=p!==null;if(_===!0&&u.index!==p){const v=this.get(p).buffer,x=p.array instanceof Uint16Array?Ea.Uint16:Ea.Uint32;h.setIndexBuffer(v,x),u.index=p}const g=e.getVertexBuffers();for(let v=0,x=g.length;v<x;v++){const y=g[v];if(u.attributes[v]!==y){const T=this.get(y).buffer;h.setVertexBuffer(v,T),u.attributes[v]=y}}if(l.occlusionQuerySet!==void 0){const v=l.lastOcclusionObject;v!==n&&(v!==null&&v.occlusionTest===!0&&(h.endOcclusionQuery(),l.occlusionQueryIndex++),n.occlusionTest===!0&&(h.beginOcclusionQuery(l.occlusionQueryIndex),l.occlusionQueryObjects[l.occlusionQueryIndex]=n),l.lastOcclusionObject=n)}s.stencil===!0&&r.stencilWrite===!0&&l.currentStencilRef!==r.stencilRef&&(h.setStencilReference(r.stencilRef),l.currentStencilRef=r.stencilRef);const m=()=>{if(n.isBatchedMesh===!0){const v=n._multiDrawStarts,x=n._multiDrawCounts,y=n._multiDrawCount,T=n._multiDrawInstances;T!==null&&Qi("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let b=0;b<y;b++){const M=T?T[b]:1,w=M>1?0:b;_===!0?h.drawIndexed(x[b],M,v[b]/p.array.BYTES_PER_ELEMENT,0,w):h.draw(x[b],M,v[b],w),t.update(n,x[b],M)}}else if(_===!0){const{vertexCount:v,instanceCount:x,firstVertex:y}=d,T=e.getIndirect();if(T!==null){const b=this.get(T).buffer;h.drawIndexedIndirect(b,0)}else h.drawIndexed(v,x,y,0,0);t.update(n,v,x)}else{const{vertexCount:v,instanceCount:x,firstVertex:y}=d,T=e.getIndirect();if(T!==null){const b=this.get(T).buffer;h.drawIndirect(b,0)}else h.draw(v,x,y,0);t.update(n,v,x)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const v=this.get(e.camera),x=e.camera.cameras,y=e.getBindingGroup("cameraIndex");if(v.indexesGPU===void 0||v.indexesGPU.length!==x.length){const b=this.get(y),M=[],w=new Uint32Array([0,0,0,0]);for(let E=0,S=x.length;E<S;E++){w[0]=E;const C=this.bindingUtils.createBindGroupIndex(w,b.layout);M.push(C)}v.indexesGPU=M}const T=this.renderer.getPixelRatio();for(let b=0,M=x.length;b<M;b++){const w=x[b];if(n.layers.test(w.layers)){const E=w.viewport;h.setViewport(Math.floor(E.x*T),Math.floor(E.y*T),Math.floor(E.width*T),Math.floor(E.height*T),s.viewportValue.minDepth,s.viewportValue.maxDepth),h.setBindGroup(y.index,v.indexesGPU[b]),m()}}}else m()}needsRenderUpdate(e){const t=this.get(e),{object:n,material:r}=e,s=this.utils,o=s.getSampleCountRenderContext(e.context),a=s.getCurrentColorSpace(e.context),l=s.getCurrentColorFormat(e.context),c=s.getCurrentDepthStencilFormat(e.context),u=s.getPrimitiveTopology(n,r);let h=!1;return(t.material!==r||t.materialVersion!==r.version||t.transparent!==r.transparent||t.blending!==r.blending||t.premultipliedAlpha!==r.premultipliedAlpha||t.blendSrc!==r.blendSrc||t.blendDst!==r.blendDst||t.blendEquation!==r.blendEquation||t.blendSrcAlpha!==r.blendSrcAlpha||t.blendDstAlpha!==r.blendDstAlpha||t.blendEquationAlpha!==r.blendEquationAlpha||t.colorWrite!==r.colorWrite||t.depthWrite!==r.depthWrite||t.depthTest!==r.depthTest||t.depthFunc!==r.depthFunc||t.stencilWrite!==r.stencilWrite||t.stencilFunc!==r.stencilFunc||t.stencilFail!==r.stencilFail||t.stencilZFail!==r.stencilZFail||t.stencilZPass!==r.stencilZPass||t.stencilFuncMask!==r.stencilFuncMask||t.stencilWriteMask!==r.stencilWriteMask||t.side!==r.side||t.alphaToCoverage!==r.alphaToCoverage||t.sampleCount!==o||t.colorSpace!==a||t.colorFormat!==l||t.depthStencilFormat!==c||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=o,t.colorSpace=a,t.colorFormat=l,t.depthStencilFormat=c,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,h=!0),h}getRenderCacheKey(e){const{object:t,material:n}=e,r=this.utils,s=e.context;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,r.getSampleCountRenderContext(s),r.getCurrentColorSpace(s),r.getCurrentColorFormat(s),r.getCurrentDepthStencilFormat(s),r.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,n,r,s,o){return this.textureUtils.copyTextureToBuffer(e,t,n,r,s,o)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const n=e.isComputeNode?"compute":"render";this.timestampQueryPool[n]||(this.timestampQueryPool[n]=new $k(this.device,n,2048));const r=this.timestampQueryPool[n],s=r.allocateQueriesForContext(e);t.timestampWrites={querySet:r.querySet,beginningOfPassWriteIndex:s,endOfPassWriteIndex:s+1}}createNodeBuilder(e,t){return new Bk(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const n=this.get(e),s=n.currentPass.finish();this.get(t).bundleGPU=s,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,n,r){this.bindingUtils.createBindings(e,t,n,r)}updateBindings(e,t,n,r){this.bindingUtils.createBindings(e,t,n,r)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,n=null,r=null,s=0,o=0){let a=0,l=0,c=0,u=0,h=0,d=0,f=e.image.width,p=e.image.height,_=1;n!==null&&(n.isBox3===!0?(u=n.min.x,h=n.min.y,d=n.min.z,f=n.max.x-n.min.x,p=n.max.y-n.min.y,_=n.max.z-n.min.z):(u=n.min.x,h=n.min.y,f=n.max.x-n.min.x,p=n.max.y-n.min.y,_=1)),r!==null&&(a=r.x,l=r.y,c=r.z||0);const g=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,v=this.get(t).texture;g.copyTextureToTexture({texture:m,mipLevel:s,origin:{x:u,y:h,z:d}},{texture:v,mipLevel:o,origin:{x:a,y:l,z:c}},[f,p,_]),this.device.queue.submit([g.finish()]),o===0&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,n){const r=this.get(t);let s=null;t.renderTarget?e.isDepthTexture?s=this.get(t.depthTexture).texture:s=this.get(t.textures[0]).texture:e.isDepthTexture?s=this.textureUtils.getDepthBuffer(t.depth,t.stencil):s=this.context.getCurrentTexture();const o=this.get(e).texture;if(s.format!==o.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",s.format,o.format);return}let a;if(r.currentPass?(r.currentPass.end(),a=r.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:s,origin:[n.x,n.y,0]},{texture:o},[n.z,n.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),r.currentPass){const{descriptor:l}=r;for(let c=0;c<l.colorAttachments.length;c++)l.colorAttachments[c].loadOp=Ft.Load;if(t.depth&&(l.depthStencilAttachment.depthLoadOp=Ft.Load),t.stencil&&(l.depthStencilAttachment.stencilLoadOp=Ft.Load),r.currentPass=a.beginRenderPass(l),r.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:c,y:u,width:h,height:d}=t.scissorValue;r.currentPass.setScissorRect(c,u,h,d)}}else this.device.queue.submit([a.finish()])}}class jk extends C0{constructor(e,t,n,r,s,o){super(e,t,n,r,s,o),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class Xk extends dS{constructor(){super(),this.addMaterial(bF,"MeshPhongMaterial"),this.addMaterial(qb,"MeshStandardMaterial"),this.addMaterial(pB,"MeshPhysicalMaterial"),this.addMaterial(vB,"MeshToonMaterial"),this.addMaterial(pF,"MeshBasicMaterial"),this.addMaterial(yF,"MeshLambertMaterial"),this.addMaterial(lF,"MeshNormalMaterial"),this.addMaterial(SB,"MeshMatcapMaterial"),this.addMaterial(iF,"LineBasicMaterial"),this.addMaterial(sF,"LineDashedMaterial"),this.addMaterial(wB,"PointsMaterial"),this.addMaterial(Xb,"SpriteMaterial"),this.addMaterial(CB,"ShadowMaterial"),this.addLight(e3,cE),this.addLight(A3,N0),this.addLight(R3,hE),this.addLight(uS,C0),this.addLight(N3,P0),this.addLight(P3,oE),this.addLight(D3,fE),this.addLight(C3,jk),this.addToneMapping(cO,c0),this.addToneMapping(uO,u0),this.addToneMapping(hO,h0),this.addToneMapping(fO,d0),this.addToneMapping(_O,f0),this.addToneMapping(vO,p0)}}class Yk extends Z3{constructor(e={}){let t;e.forceWebGL?t=Py:(t=qk,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Py(e)));const n=new t(e);super(n,e),this.library=new Xk,this.isWebGPURenderer=!0}}const $f={type:"change"},pg={type:"start"},mg={type:"end"},Oy=1e-6,St={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},Du=new ae,rs=new ae,Kk=new N,Lu=new N,qf=new N,zo=new Ji,ky=new N,Iu=new N,jf=new N,Uu=new N;class Zk extends Uh{constructor(e,t=null){super(e,t),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:An.ROTATE,MIDDLE:An.DOLLY,RIGHT:An.PAN},this.target=new N,this.state=St.NONE,this.keyState=St.NONE,this._lastPosition=new N,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new N,this._movePrev=new ae,this._moveCurr=new ae,this._lastAxis=new N,this._zoomStart=new ae,this._zoomEnd=new ae,this._panStart=new ae,this._panEnd=new ae,this._pointers=[],this._pointerPositions={},this._onPointerMove=Jk.bind(this),this._onPointerDown=Qk.bind(this),this._onPointerUp=eG.bind(this),this._onPointerCancel=tG.bind(this),this._onContextMenu=lG.bind(this),this._onMouseWheel=aG.bind(this),this._onKeyDown=iG.bind(this),this._onKeyUp=nG.bind(this),this._onTouchStart=cG.bind(this),this._onTouchMove=uG.bind(this),this._onTouchEnd=hG.bind(this),this._onMouseDown=rG.bind(this),this._onMouseMove=sG.bind(this),this._onMouseUp=oG.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(t),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>Oy&&(this.dispatchEvent($f),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>Oy||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent($f),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=St.NONE,this.keyState=St.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent($f),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(rs.copy(this._panEnd).sub(this._panStart),rs.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;rs.x*=e,rs.y*=t}rs.multiplyScalar(this._eye.length()*this.panSpeed),Lu.copy(this._eye).cross(this.object.up).setLength(rs.x),Lu.add(Kk.copy(this.object.up).setLength(rs.y)),this.object.position.add(Lu),this.target.add(Lu),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(rs.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){Uu.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=Uu.length();e?(this._eye.copy(this.object.position).sub(this.target),ky.copy(this._eye).normalize(),Iu.copy(this.object.up).normalize(),jf.crossVectors(Iu,ky).normalize(),Iu.setLength(this._moveCurr.y-this._movePrev.y),jf.setLength(this._moveCurr.x-this._movePrev.x),Uu.copy(Iu.add(jf)),qf.crossVectors(Uu,this._eye).normalize(),e*=this.rotateSpeed,zo.setFromAxisAngle(qf,e),this._eye.applyQuaternion(zo),this.object.up.applyQuaternion(zo),this._lastAxis.copy(qf),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),zo.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(zo),this.object.up.applyQuaternion(zo)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===St.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=th.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=th.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return Du.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),Du}_getMouseOnCircle(e,t){return Du.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),Du}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ae,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function Qk(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i))}function Jk(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function eG(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchEnd(i):this._onMouseUp(),this._removePointer(i),this._pointers.length===0&&(this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function tG(i){this._removePointer(i)}function nG(){this.enabled!==!1&&(this.keyState=St.NONE,window.addEventListener("keydown",this._onKeyDown))}function iG(i){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===St.NONE&&(i.code===this.keys[St.ROTATE]&&!this.noRotate?this.keyState=St.ROTATE:i.code===this.keys[St.ZOOM]&&!this.noZoom?this.keyState=St.ZOOM:i.code===this.keys[St.PAN]&&!this.noPan&&(this.keyState=St.PAN)))}function rG(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case An.DOLLY:this.state=St.ZOOM;break;case An.ROTATE:this.state=St.ROTATE;break;case An.PAN:this.state=St.PAN;break;default:this.state=St.NONE}const t=this.keyState!==St.NONE?this.keyState:this.state;t===St.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY)),this._movePrev.copy(this._moveCurr)):t===St.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(i.pageX,i.pageY)),this._zoomEnd.copy(this._zoomStart)):t===St.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(i.pageX,i.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(pg)}function sG(i){const e=this.keyState!==St.NONE?this.keyState:this.state;e===St.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY))):e===St.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(i.pageX,i.pageY)):e===St.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(i.pageX,i.pageY))}function oG(){this.state=St.NONE,this.dispatchEvent(mg)}function aG(i){if(this.enabled!==!1&&this.noZoom!==!0){switch(i.preventDefault(),i.deltaMode){case 2:this._zoomStart.y-=i.deltaY*.025;break;case 1:this._zoomStart.y-=i.deltaY*.01;break;default:this._zoomStart.y-=i.deltaY*25e-5;break}this.dispatchEvent(pg),this.dispatchEvent(mg)}}function lG(i){this.enabled!==!1&&i.preventDefault()}function cG(i){switch(this._trackPointer(i),this._pointers.length){case 1:this.state=St.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=St.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const n=(this._pointers[0].pageX+this._pointers[1].pageX)/2,r=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(n,r)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(pg)}function uG(i){switch(this._trackPointer(i),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY));break;default:const e=this._getSecondPointerPosition(i),t=i.pageX-e.x,n=i.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+n*n);const r=(i.pageX+e.x)/2,s=(i.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(r,s));break}}function hG(i){switch(this._pointers.length){case 0:this.state=St.NONE;break;case 1:this.state=St.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(i.pageX,i.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=St.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==i.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(mg)}const Gy={type:"change"},gg={type:"start"},SS={type:"end"},Fu=new Rh,zy=new ji,dG=Math.cos(70*th.DEG2RAD),mn=new N,Yn=2*Math.PI,Nt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Xf=1e-6;class fG extends Uh{constructor(e,t=null){super(e,t),this.state=Nt.NONE,this.target=new N,this.cursor=new N,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:An.ROTATE,MIDDLE:An.DOLLY,RIGHT:An.PAN},this.touches={ONE:Dr.ROTATE,TWO:Dr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new N,this._lastQuaternion=new Ji,this._lastTargetPosition=new N,this._quat=new Ji().setFromUnitVectors(e.up,new N(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new l_,this._sphericalDelta=new l_,this._scale=1,this._panOffset=new N,this._rotateStart=new ae,this._rotateEnd=new ae,this._rotateDelta=new ae,this._panStart=new ae,this._panEnd=new ae,this._panDelta=new ae,this._dollyStart=new ae,this._dollyEnd=new ae,this._dollyDelta=new ae,this._dollyDirection=new N,this._mouse=new ae,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=mG.bind(this),this._onPointerDown=pG.bind(this),this._onPointerUp=gG.bind(this),this._onContextMenu=TG.bind(this),this._onMouseWheel=yG.bind(this),this._onKeyDown=xG.bind(this),this._onTouchStart=bG.bind(this),this._onTouchMove=SG.bind(this),this._onMouseDown=_G.bind(this),this._onMouseMove=vG.bind(this),this._interceptControlDown=MG.bind(this),this._interceptControlUp=EG.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Gy),this.update(),this.state=Nt.NONE}update(e=null){const t=this.object.position;mn.copy(t).sub(this.target),mn.applyQuaternion(this._quat),this._spherical.setFromVector3(mn),this.autoRotate&&this.state===Nt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,r=this.maxAzimuthAngle;isFinite(n)&&isFinite(r)&&(n<-Math.PI?n+=Yn:n>Math.PI&&(n-=Yn),r<-Math.PI?r+=Yn:r>Math.PI&&(r-=Yn),n<=r?this._spherical.theta=Math.max(n,Math.min(r,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+r)/2?Math.max(n,this._spherical.theta):Math.min(r,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=o!=this._spherical.radius}if(mn.setFromSpherical(this._spherical),mn.applyQuaternion(this._quatInverse),t.copy(this.target).add(mn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=mn.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),s=!!l}else if(this.object.isOrthographicCamera){const a=new N(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=l!==this.object.zoom;const c=new N(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=mn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(Fu.origin.copy(this.object.position),Fu.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Fu.direction))<dG?this.object.lookAt(this.target):(zy.setFromNormalAndCoplanarPoint(this.object.up,this.target),Fu.intersectPlane(zy,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>Xf||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Xf||this._lastTargetPosition.distanceToSquared(this.target)>Xf?(this.dispatchEvent(Gy),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Yn/60*this.autoRotateSpeed*e:Yn/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){mn.setFromMatrixColumn(t,0),mn.multiplyScalar(-e),this._panOffset.add(mn)}_panUp(e,t){this.screenSpacePanning===!0?mn.setFromMatrixColumn(t,1):(mn.setFromMatrixColumn(t,0),mn.crossVectors(this.object.up,mn)),mn.multiplyScalar(e),this._panOffset.add(mn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const r=this.object.position;mn.copy(r).sub(this.target);let s=mn.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/n.clientHeight,this.object.matrix),this._panUp(2*t*s/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),r=e-n.left,s=t-n.top,o=n.width,a=n.height;this._mouse.x=r/o*2-1,this._mouse.y=-(s/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Yn*this._rotateDelta.x/t.clientHeight),this._rotateUp(Yn*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(Yn*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-Yn*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(Yn*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-Yn*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);this._rotateStart.set(n,r)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);this._panStart.set(n,r)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,r=e.pageY-t.y,s=Math.sqrt(n*n+r*r);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),r=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateEnd.set(r,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Yn*this._rotateDelta.x/t.clientHeight),this._rotateUp(Yn*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);this._panEnd.set(n,r)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,r=e.pageY-t.y,s=Math.sqrt(n*n+r*r);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ae,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function pG(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(i)&&(this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i)))}function mG(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function gG(i){switch(this._removePointer(i),this._pointers.length){case 0:this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(SS),this.state=Nt.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function _G(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case An.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(i),this.state=Nt.DOLLY;break;case An.ROTATE:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=Nt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=Nt.ROTATE}break;case An.PAN:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=Nt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=Nt.PAN}break;default:this.state=Nt.NONE}this.state!==Nt.NONE&&this.dispatchEvent(gg)}function vG(i){switch(this.state){case Nt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(i);break;case Nt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(i);break;case Nt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(i);break}}function yG(i){this.enabled===!1||this.enableZoom===!1||this.state!==Nt.NONE||(i.preventDefault(),this.dispatchEvent(gg),this._handleMouseWheel(this._customWheelEvent(i)),this.dispatchEvent(SS))}function xG(i){this.enabled!==!1&&this._handleKeyDown(i)}function bG(i){switch(this._trackPointer(i),this._pointers.length){case 1:switch(this.touches.ONE){case Dr.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(i),this.state=Nt.TOUCH_ROTATE;break;case Dr.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(i),this.state=Nt.TOUCH_PAN;break;default:this.state=Nt.NONE}break;case 2:switch(this.touches.TWO){case Dr.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(i),this.state=Nt.TOUCH_DOLLY_PAN;break;case Dr.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(i),this.state=Nt.TOUCH_DOLLY_ROTATE;break;default:this.state=Nt.NONE}break;default:this.state=Nt.NONE}this.state!==Nt.NONE&&this.dispatchEvent(gg)}function SG(i){switch(this._trackPointer(i),this.state){case Nt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(i),this.update();break;case Nt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(i),this.update();break;case Nt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(i),this.update();break;case Nt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(i),this.update();break;default:this.state=Nt.NONE}}function TG(i){this.enabled!==!1&&i.preventDefault()}function MG(i){i.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function EG(i){i.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const wG={type:"change"},Vy=1e-6,Hy=new Ji;class AG extends Uh{constructor(e,t=null){super(e,t),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new N(0,0,0),this._rotationVector=new N(0,0,0),this._lastQuaternion=new Ji,this._lastPosition=new N,this._status=0,this._onKeyDown=RG.bind(this),this._onKeyUp=CG.bind(this),this._onPointerMove=PG.bind(this),this._onPointerDown=NG.bind(this),this._onPointerUp=DG.bind(this),this._onPointerCancel=LG.bind(this),this._onContextMenu=IG.bind(this),t!==null&&this.connect(t)}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const t=this.object,n=e*this.movementSpeed,r=e*this.rollSpeed;t.translateX(this._moveVector.x*n),t.translateY(this._moveVector.y*n),t.translateZ(this._moveVector.z*n),Hy.set(this._rotationVector.x*r,this._rotationVector.y*r,this._rotationVector.z*r,1).normalize(),t.quaternion.multiply(Hy),(this._lastPosition.distanceToSquared(t.position)>Vy||8*(1-this._lastQuaternion.dot(t.quaternion))>Vy)&&(this.dispatchEvent(wG),this._lastQuaternion.copy(t.quaternion),this._lastPosition.copy(t.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function RG(i){if(!(i.altKey||this.enabled===!1)){switch(i.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function CG(i){if(this.enabled!==!1){switch(i.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function NG(i){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(i.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function PG(i){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),t=e.size[0]/2,n=e.size[1]/2;this._moveState.yawLeft=-(i.pageX-e.offset[0]-t)/t,this._moveState.pitchDown=(i.pageY-e.offset[1]-n)/n,this._updateRotationVector()}}function DG(i){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(i.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function LG(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function IG(i){this.enabled!==!1&&i.preventDefault()}const UG={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class nd{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const FG=new yc(-1,1,1,-1,0,1);class BG extends On{constructor(){super(),this.setAttribute("position",new rn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new rn([0,2,0,0,2,0],2))}}const OG=new BG;class kG{constructor(e){this._mesh=new tn(OG,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,FG)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class GG extends nd{constructor(e,t="tDiffuse"){super(),this.textureID=t,this.uniforms=null,this.material=null,e instanceof dr?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=x0.clone(e.uniforms),this.material=new dr({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new kG(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class Wy extends nd{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const r=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),s.buffers.stencil.setFunc(r.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.color.setMask(!0),s.buffers.depth.setMask(!0),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(r.EQUAL,1,4294967295),s.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),s.buffers.stencil.setLocked(!0)}}class zG extends nd{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class VG{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const n=e.getSize(new ae);this._width=n.width,this._height=n.height,t=new _s(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Fn}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new GG(UG),this.copyPass.material.blending=si,this.clock=new L0}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let r=0,s=this.passes.length;r<s;r++){const o=this.passes[r];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Wy!==void 0&&(o instanceof Wy?n=!0:o instanceof zG&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new ae);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class HG extends nd{constructor(e,t,n=null,r=null,s=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=s,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Le}render(e,t,n){const r=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(s=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(s),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),e.autoClear=r}}function ci(){return ci=Object.assign?Object.assign.bind():function(i){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(i[n]=t[n])}return i},ci.apply(null,arguments)}function WG(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function hc(i,e){return hc=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t},hc(i,e)}function $G(i,e){i.prototype=Object.create(e.prototype),i.prototype.constructor=i,hc(i,e)}function Cp(i){return Cp=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Cp(i)}function qG(i){try{return Function.toString.call(i).indexOf("[native code]")!==-1}catch{return typeof i=="function"}}function TS(){try{var i=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(TS=function(){return!!i})()}function jG(i,e,t){if(TS())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,e);var r=new(i.bind.apply(i,n));return t&&hc(r,t.prototype),r}function Np(i){var e=typeof Map=="function"?new Map:void 0;return Np=function(n){if(n===null||!qG(n))return n;if(typeof n!="function")throw new TypeError("Super expression must either be null or a function");if(e!==void 0){if(e.has(n))return e.get(n);e.set(n,r)}function r(){return jG(n,arguments,Cp(this).constructor)}return r.prototype=Object.create(n.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),hc(r,n)},Np(i)}var cr=function(i){$G(e,i);function e(t){var n;return n=i.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+t+" for more information.")||this,WG(n)}return e}(Np(Error));function Yf(i){return Math.round(i*255)}function XG(i,e,t){return Yf(i)+","+Yf(e)+","+Yf(t)}function vh(i,e,t,n){if(n===void 0&&(n=XG),e===0)return n(t,t,t);var r=(i%360+360)%360/60,s=(1-Math.abs(2*t-1))*e,o=s*(1-Math.abs(r%2-1)),a=0,l=0,c=0;r>=0&&r<1?(a=s,l=o):r>=1&&r<2?(a=o,l=s):r>=2&&r<3?(l=s,c=o):r>=3&&r<4?(l=o,c=s):r>=4&&r<5?(a=o,c=s):r>=5&&r<6&&(a=s,c=o);var u=t-s/2,h=a+u,d=l+u,f=c+u;return n(h,d,f)}var $y={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function YG(i){if(typeof i!="string")return i;var e=i.toLowerCase();return $y[e]?"#"+$y[e]:i}var KG=/^#[a-fA-F0-9]{6}$/,ZG=/^#[a-fA-F0-9]{8}$/,QG=/^#[a-fA-F0-9]{3}$/,JG=/^#[a-fA-F0-9]{4}$/,Kf=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,ez=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,tz=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,nz=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;function wa(i){if(typeof i!="string")throw new cr(3);var e=YG(i);if(e.match(KG))return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16)};if(e.match(ZG)){var t=parseFloat((parseInt(""+e[7]+e[8],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16),alpha:t}}if(e.match(QG))return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16)};if(e.match(JG)){var n=parseFloat((parseInt(""+e[4]+e[4],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16),alpha:n}}var r=Kf.exec(e);if(r)return{red:parseInt(""+r[1],10),green:parseInt(""+r[2],10),blue:parseInt(""+r[3],10)};var s=ez.exec(e.substring(0,50));if(s)return{red:parseInt(""+s[1],10),green:parseInt(""+s[2],10),blue:parseInt(""+s[3],10),alpha:parseFloat(""+s[4])>1?parseFloat(""+s[4])/100:parseFloat(""+s[4])};var o=tz.exec(e);if(o){var a=parseInt(""+o[1],10),l=parseInt(""+o[2],10)/100,c=parseInt(""+o[3],10)/100,u="rgb("+vh(a,l,c)+")",h=Kf.exec(u);if(!h)throw new cr(4,e,u);return{red:parseInt(""+h[1],10),green:parseInt(""+h[2],10),blue:parseInt(""+h[3],10)}}var d=nz.exec(e.substring(0,50));if(d){var f=parseInt(""+d[1],10),p=parseInt(""+d[2],10)/100,_=parseInt(""+d[3],10)/100,g="rgb("+vh(f,p,_)+")",m=Kf.exec(g);if(!m)throw new cr(4,e,g);return{red:parseInt(""+m[1],10),green:parseInt(""+m[2],10),blue:parseInt(""+m[3],10),alpha:parseFloat(""+d[4])>1?parseFloat(""+d[4])/100:parseFloat(""+d[4])}}throw new cr(5)}function iz(i){var e=i.red/255,t=i.green/255,n=i.blue/255,r=Math.max(e,t,n),s=Math.min(e,t,n),o=(r+s)/2;if(r===s)return i.alpha!==void 0?{hue:0,saturation:0,lightness:o,alpha:i.alpha}:{hue:0,saturation:0,lightness:o};var a,l=r-s,c=o>.5?l/(2-r-s):l/(r+s);switch(r){case e:a=(t-n)/l+(t<n?6:0);break;case t:a=(n-e)/l+2;break;default:a=(e-t)/l+4;break}return a*=60,i.alpha!==void 0?{hue:a,saturation:c,lightness:o,alpha:i.alpha}:{hue:a,saturation:c,lightness:o}}function Ts(i){return iz(wa(i))}var rz=function(e){return e.length===7&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e},Pp=rz;function Gs(i){var e=i.toString(16);return e.length===1?"0"+e:e}function Zf(i){return Gs(Math.round(i*255))}function sz(i,e,t){return Pp("#"+Zf(i)+Zf(e)+Zf(t))}function MS(i,e,t){return vh(i,e,t,sz)}function oz(i,e,t){if(typeof i=="object"&&e===void 0&&t===void 0)return MS(i.hue,i.saturation,i.lightness);throw new cr(1)}function az(i,e,t,n){if(typeof i=="object"&&e===void 0&&t===void 0&&n===void 0)return i.alpha>=1?MS(i.hue,i.saturation,i.lightness):"rgba("+vh(i.hue,i.saturation,i.lightness)+","+i.alpha+")";throw new cr(2)}function ES(i,e,t){if(typeof i=="number"&&typeof e=="number"&&typeof t=="number")return Pp("#"+Gs(i)+Gs(e)+Gs(t));if(typeof i=="object"&&e===void 0&&t===void 0)return Pp("#"+Gs(i.red)+Gs(i.green)+Gs(i.blue));throw new cr(6)}function id(i,e,t,n){if(typeof i=="object"&&e===void 0&&t===void 0&&n===void 0)return i.alpha>=1?ES(i.red,i.green,i.blue):"rgba("+i.red+","+i.green+","+i.blue+","+i.alpha+")";throw new cr(7)}var lz=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},cz=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&typeof e.alpha=="number"},uz=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},hz=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&typeof e.alpha=="number"};function Ms(i){if(typeof i!="object")throw new cr(8);if(cz(i))return id(i);if(lz(i))return ES(i);if(hz(i))return az(i);if(uz(i))return oz(i);throw new cr(8)}function wS(i,e,t){return function(){var r=t.concat(Array.prototype.slice.call(arguments));return r.length>=e?i.apply(this,r):wS(i,e,r)}}function Ti(i){return wS(i,i.length,[])}function dz(i,e){if(e==="transparent")return e;var t=Ts(e);return Ms(ci({},t,{hue:t.hue+parseFloat(i)}))}Ti(dz);function Ba(i,e,t){return Math.max(i,Math.min(e,t))}function fz(i,e){if(e==="transparent")return e;var t=Ts(e);return Ms(ci({},t,{lightness:Ba(0,1,t.lightness-parseFloat(i))}))}Ti(fz);function pz(i,e){if(e==="transparent")return e;var t=Ts(e);return Ms(ci({},t,{saturation:Ba(0,1,t.saturation-parseFloat(i))}))}Ti(pz);function mz(i,e){if(e==="transparent")return e;var t=Ts(e);return Ms(ci({},t,{lightness:Ba(0,1,t.lightness+parseFloat(i))}))}Ti(mz);function gz(i,e,t){if(e==="transparent")return t;if(t==="transparent")return e;if(i===0)return t;var n=wa(e),r=ci({},n,{alpha:typeof n.alpha=="number"?n.alpha:1}),s=wa(t),o=ci({},s,{alpha:typeof s.alpha=="number"?s.alpha:1}),a=r.alpha-o.alpha,l=parseFloat(i)*2-1,c=l*a===-1?l:l+a,u=1+l*a,h=(c/u+1)/2,d=1-h,f={red:Math.floor(r.red*h+o.red*d),green:Math.floor(r.green*h+o.green*d),blue:Math.floor(r.blue*h+o.blue*d),alpha:r.alpha*parseFloat(i)+o.alpha*(1-parseFloat(i))};return id(f)}var _z=Ti(gz),AS=_z;function vz(i,e){if(e==="transparent")return e;var t=wa(e),n=typeof t.alpha=="number"?t.alpha:1,r=ci({},t,{alpha:Ba(0,1,(n*100+parseFloat(i)*100)/100)});return id(r)}var yz=Ti(vz),xz=yz;function bz(i,e){if(e==="transparent")return e;var t=Ts(e);return Ms(ci({},t,{saturation:Ba(0,1,t.saturation+parseFloat(i))}))}Ti(bz);function Sz(i,e){return e==="transparent"?e:Ms(ci({},Ts(e),{hue:parseFloat(i)}))}Ti(Sz);function Tz(i,e){return e==="transparent"?e:Ms(ci({},Ts(e),{lightness:parseFloat(i)}))}Ti(Tz);function Mz(i,e){return e==="transparent"?e:Ms(ci({},Ts(e),{saturation:parseFloat(i)}))}Ti(Mz);function Ez(i,e){return e==="transparent"?e:AS(parseFloat(i),"rgb(0, 0, 0)",e)}Ti(Ez);function wz(i,e){return e==="transparent"?e:AS(parseFloat(i),"rgb(255, 255, 255)",e)}Ti(wz);function Az(i,e){if(e==="transparent")return e;var t=wa(e),n=typeof t.alpha=="number"?t.alpha:1,r=ci({},t,{alpha:Ba(0,1,+(n*100-parseFloat(i)*100).toFixed(2)/100)});return id(r)}Ti(Az);var Js=Object.freeze({Linear:Object.freeze({None:function(i){return i},In:function(i){return i},Out:function(i){return i},InOut:function(i){return i}}),Quadratic:Object.freeze({In:function(i){return i*i},Out:function(i){return i*(2-i)},InOut:function(i){return(i*=2)<1?.5*i*i:-.5*(--i*(i-2)-1)}}),Cubic:Object.freeze({In:function(i){return i*i*i},Out:function(i){return--i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i:.5*((i-=2)*i*i+2)}}),Quartic:Object.freeze({In:function(i){return i*i*i*i},Out:function(i){return 1- --i*i*i*i},InOut:function(i){return(i*=2)<1?.5*i*i*i*i:-.5*((i-=2)*i*i*i-2)}}),Quintic:Object.freeze({In:function(i){return i*i*i*i*i},Out:function(i){return--i*i*i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i*i*i:.5*((i-=2)*i*i*i*i+2)}}),Sinusoidal:Object.freeze({In:function(i){return 1-Math.sin((1-i)*Math.PI/2)},Out:function(i){return Math.sin(i*Math.PI/2)},InOut:function(i){return .5*(1-Math.sin(Math.PI*(.5-i)))}}),Exponential:Object.freeze({In:function(i){return i===0?0:Math.pow(1024,i-1)},Out:function(i){return i===1?1:1-Math.pow(2,-10*i)},InOut:function(i){return i===0?0:i===1?1:(i*=2)<1?.5*Math.pow(1024,i-1):.5*(-Math.pow(2,-10*(i-1))+2)}}),Circular:Object.freeze({In:function(i){return 1-Math.sqrt(1-i*i)},Out:function(i){return Math.sqrt(1- --i*i)},InOut:function(i){return(i*=2)<1?-.5*(Math.sqrt(1-i*i)-1):.5*(Math.sqrt(1-(i-=2)*i)+1)}}),Elastic:Object.freeze({In:function(i){return i===0?0:i===1?1:-Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI)},Out:function(i){return i===0?0:i===1?1:Math.pow(2,-10*i)*Math.sin((i-.1)*5*Math.PI)+1},InOut:function(i){return i===0?0:i===1?1:(i*=2,i<1?-.5*Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI):.5*Math.pow(2,-10*(i-1))*Math.sin((i-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(i){var e=1.70158;return i===1?1:i*i*((e+1)*i-e)},Out:function(i){var e=1.70158;return i===0?0:--i*i*((e+1)*i+e)+1},InOut:function(i){var e=2.5949095;return(i*=2)<1?.5*(i*i*((e+1)*i-e)):.5*((i-=2)*i*((e+1)*i+e)+2)}}),Bounce:Object.freeze({In:function(i){return 1-Js.Bounce.Out(1-i)},Out:function(i){return i<1/2.75?7.5625*i*i:i<2/2.75?7.5625*(i-=1.5/2.75)*i+.75:i<2.5/2.75?7.5625*(i-=2.25/2.75)*i+.9375:7.5625*(i-=2.625/2.75)*i+.984375},InOut:function(i){return i<.5?Js.Bounce.In(i*2)*.5:Js.Bounce.Out(i*2-1)*.5+.5}}),generatePow:function(i){return i===void 0&&(i=4),i=i<Number.EPSILON?Number.EPSILON:i,i=i>1e4?1e4:i,{In:function(e){return Math.pow(e,i)},Out:function(e){return 1-Math.pow(1-e,i)},InOut:function(e){return e<.5?Math.pow(e*2,i)/2:(1-Math.pow(2-e*2,i))/2+.5}}}}),Tl=function(){return performance.now()},RS=function(){function i(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this._tweens={},this._tweensAddedDuringUpdate={},this.add.apply(this,e)}return i.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},i.prototype.removeAll=function(){this._tweens={}},i.prototype.add=function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];for(var r=0,s=t;r<s.length;r++){var o=s[r];(e=o._group)===null||e===void 0||e.remove(o),o._group=this,this._tweens[o.getId()]=o,this._tweensAddedDuringUpdate[o.getId()]=o}},i.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=0,r=e;n<r.length;n++){var s=r[n];s._group=void 0,delete this._tweens[s.getId()],delete this._tweensAddedDuringUpdate[s.getId()]}},i.prototype.allStopped=function(){return this.getAll().every(function(e){return!e.isPlaying()})},i.prototype.update=function(e,t){e===void 0&&(e=Tl()),t===void 0&&(t=!0);var n=Object.keys(this._tweens);if(n.length!==0)for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var r=0;r<n.length;r++){var s=this._tweens[n[r]],o=!t;s&&s.update(e,o)===!1&&!t&&this.remove(s)}n=Object.keys(this._tweensAddedDuringUpdate)}},i}(),Dp={Linear:function(i,e){var t=i.length-1,n=t*e,r=Math.floor(n),s=Dp.Utils.Linear;return e<0?s(i[0],i[1],n):e>1?s(i[t],i[t-1],t-n):s(i[r],i[r+1>t?t:r+1],n-r)},Utils:{Linear:function(i,e,t){return(e-i)*t+i}}},CS=function(){function i(){}return i.nextId=function(){return i._nextId++},i._nextId=0,i}(),Lp=new RS,qy=function(){function i(e,t){this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Js.Linear.None,this._interpolationFunction=Dp.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=CS.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1,this._object=e,typeof t=="object"?(this._group=t,t.add(this)):t===!0&&(this._group=Lp,Lp.add(this))}return i.prototype.getId=function(){return this._id},i.prototype.isPlaying=function(){return this._isPlaying},i.prototype.isPaused=function(){return this._isPaused},i.prototype.getDuration=function(){return this._duration},i.prototype.to=function(e,t){if(t===void 0&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t<0?0:t,this},i.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e<0?0:e,this},i.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},i.prototype.start=function(e,t){if(e===void 0&&(e=Tl()),t===void 0&&(t=!1),this._isPlaying)return this;if(this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var n in this._valuesStartRepeat)this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var r={};for(var s in this._valuesEnd)r[s]=this._valuesEnd[s];this._valuesEnd=r}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},i.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},i.prototype._setupProperties=function(e,t,n,r,s){for(var o in n){var a=e[o],l=Array.isArray(a),c=l?"array":typeof a,u=!l&&Array.isArray(n[o]);if(!(c==="undefined"||c==="function")){if(u){var h=n[o];if(h.length===0)continue;for(var d=[a],f=0,p=h.length;f<p;f+=1){var _=this._handleRelativeValue(a,h[f]);if(isNaN(_)){u=!1,console.warn("Found invalid interpolation list. Skipping.");break}d.push(_)}u&&(n[o]=d)}if((c==="object"||l)&&a&&!u){t[o]=l?[]:{};var g=a;for(var m in g)t[o][m]=g[m];r[o]=l?[]:{};var h=n[o];if(!this._isDynamic){var v={};for(var m in h)v[m]=h[m];n[o]=h=v}this._setupProperties(g,t[o],h,r[o],s)}else(typeof t[o]>"u"||s)&&(t[o]=a),l||(t[o]*=1),u?r[o]=n[o].slice().reverse():r[o]=t[o]||0}}},i.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},i.prototype.end=function(){return this._goToEnd=!0,this.update(this._startTime+this._duration),this},i.prototype.pause=function(e){return e===void 0&&(e=Tl()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this)},i.prototype.resume=function(e){return e===void 0&&(e=Tl()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this)},i.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},i.prototype.group=function(e){return e?(e.add(this),this):(console.warn("tween.group() without args has been removed, use group.add(tween) instead."),this)},i.prototype.remove=function(){var e;return(e=this._group)===null||e===void 0||e.remove(this),this},i.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},i.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},i.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},i.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},i.prototype.easing=function(e){return e===void 0&&(e=Js.Linear.None),this._easingFunction=e,this},i.prototype.interpolation=function(e){return e===void 0&&(e=Dp.Linear),this._interpolationFunction=e,this},i.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},i.prototype.onStart=function(e){return this._onStartCallback=e,this},i.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},i.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},i.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},i.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},i.prototype.onStop=function(e){return this._onStopCallback=e,this},i.prototype.update=function(e,t){var n=this,r;if(e===void 0&&(e=Tl()),t===void 0&&(t=i.autoStartOnUpdate),this._isPaused)return!0;var s;if(!this._goToEnd&&!this._isPlaying)if(t)this.start(e,!0);else return!1;if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var o=e-this._startTime,a=this._duration+((r=this._repeatDelayTime)!==null&&r!==void 0?r:this._delayTime),l=this._duration+this._repeat*a,c=function(){if(n._duration===0||o>l)return 1;var _=Math.trunc(o/a),g=o-_*a,m=Math.min(g/n._duration,1);return m===0&&o===n._duration?1:m},u=c(),h=this._easingFunction(u);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,h),this._onUpdateCallback&&this._onUpdateCallback(this._object,u),this._duration===0||o>=this._duration)if(this._repeat>0){var d=Math.min(Math.trunc((o-this._duration)/a)+1,this._repeat);isFinite(this._repeat)&&(this._repeat-=d);for(s in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[s]=="string"&&(this._valuesStartRepeat[s]=this._valuesStartRepeat[s]+parseFloat(this._valuesEnd[s])),this._yoyo&&this._swapEndStartRepeatValues(s),this._valuesStart[s]=this._valuesStartRepeat[s];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=a*d,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var f=0,p=this._chainedTweens.length;f<p;f++)this._chainedTweens[f].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},i.prototype._updateProperties=function(e,t,n,r){for(var s in n)if(t[s]!==void 0){var o=t[s]||0,a=n[s],l=Array.isArray(e[s]),c=Array.isArray(a),u=!l&&c;u?e[s]=this._interpolationFunction(a,r):typeof a=="object"&&a?this._updateProperties(e[s],o,a,r):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(e[s]=o+(a-o)*r))}},i.prototype._handleRelativeValue=function(e,t){return typeof t!="string"?t:t.charAt(0)==="+"||t.charAt(0)==="-"?e+parseFloat(t):parseFloat(t)},i.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],n=this._valuesEnd[e];typeof n=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(n):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},i.autoStartOnUpdate=!1,i}();CS.nextId;var mr=Lp;mr.getAll.bind(mr);mr.removeAll.bind(mr);mr.add.bind(mr);mr.remove.bind(mr);mr.update.bind(mr);var Ip="http://www.w3.org/1999/xhtml";const jy={svg:"http://www.w3.org/2000/svg",xhtml:Ip,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function NS(i){var e=i+="",t=e.indexOf(":");return t>=0&&(e=i.slice(0,t))!=="xmlns"&&(i=i.slice(t+1)),jy.hasOwnProperty(e)?{space:jy[e],local:i}:i}function Rz(i){return function(){var e=this.ownerDocument,t=this.namespaceURI;return t===Ip&&e.documentElement.namespaceURI===Ip?e.createElement(i):e.createElementNS(t,i)}}function Cz(i){return function(){return this.ownerDocument.createElementNS(i.space,i.local)}}function PS(i){var e=NS(i);return(e.local?Cz:Rz)(e)}function Nz(){}function DS(i){return i==null?Nz:function(){return this.querySelector(i)}}function Pz(i){typeof i!="function"&&(i=DS(i));for(var e=this._groups,t=e.length,n=new Array(t),r=0;r<t;++r)for(var s=e[r],o=s.length,a=n[r]=new Array(o),l,c,u=0;u<o;++u)(l=s[u])&&(c=i.call(l,l.__data__,u,s))&&("__data__"in l&&(c.__data__=l.__data__),a[u]=c);return new Bi(n,this._parents)}function Dz(i){return i==null?[]:Array.isArray(i)?i:Array.from(i)}function Lz(){return[]}function Iz(i){return i==null?Lz:function(){return this.querySelectorAll(i)}}function Uz(i){return function(){return Dz(i.apply(this,arguments))}}function Fz(i){typeof i=="function"?i=Uz(i):i=Iz(i);for(var e=this._groups,t=e.length,n=[],r=[],s=0;s<t;++s)for(var o=e[s],a=o.length,l,c=0;c<a;++c)(l=o[c])&&(n.push(i.call(l,l.__data__,c,o)),r.push(l));return new Bi(n,r)}function Bz(i){return function(){return this.matches(i)}}function LS(i){return function(e){return e.matches(i)}}var Oz=Array.prototype.find;function kz(i){return function(){return Oz.call(this.children,i)}}function Gz(){return this.firstElementChild}function zz(i){return this.select(i==null?Gz:kz(typeof i=="function"?i:LS(i)))}var Vz=Array.prototype.filter;function Hz(){return Array.from(this.children)}function Wz(i){return function(){return Vz.call(this.children,i)}}function $z(i){return this.selectAll(i==null?Hz:Wz(typeof i=="function"?i:LS(i)))}function qz(i){typeof i!="function"&&(i=Bz(i));for(var e=this._groups,t=e.length,n=new Array(t),r=0;r<t;++r)for(var s=e[r],o=s.length,a=n[r]=[],l,c=0;c<o;++c)(l=s[c])&&i.call(l,l.__data__,c,s)&&a.push(l);return new Bi(n,this._parents)}function IS(i){return new Array(i.length)}function jz(){return new Bi(this._enter||this._groups.map(IS),this._parents)}function yh(i,e){this.ownerDocument=i.ownerDocument,this.namespaceURI=i.namespaceURI,this._next=null,this._parent=i,this.__data__=e}yh.prototype={constructor:yh,appendChild:function(i){return this._parent.insertBefore(i,this._next)},insertBefore:function(i,e){return this._parent.insertBefore(i,e)},querySelector:function(i){return this._parent.querySelector(i)},querySelectorAll:function(i){return this._parent.querySelectorAll(i)}};function Xz(i){return function(){return i}}function Yz(i,e,t,n,r,s){for(var o=0,a,l=e.length,c=s.length;o<c;++o)(a=e[o])?(a.__data__=s[o],n[o]=a):t[o]=new yh(i,s[o]);for(;o<l;++o)(a=e[o])&&(r[o]=a)}function Kz(i,e,t,n,r,s,o){var a,l,c=new Map,u=e.length,h=s.length,d=new Array(u),f;for(a=0;a<u;++a)(l=e[a])&&(d[a]=f=o.call(l,l.__data__,a,e)+"",c.has(f)?r[a]=l:c.set(f,l));for(a=0;a<h;++a)f=o.call(i,s[a],a,s)+"",(l=c.get(f))?(n[a]=l,l.__data__=s[a],c.delete(f)):t[a]=new yh(i,s[a]);for(a=0;a<u;++a)(l=e[a])&&c.get(d[a])===l&&(r[a]=l)}function Zz(i){return i.__data__}function Qz(i,e){if(!arguments.length)return Array.from(this,Zz);var t=e?Kz:Yz,n=this._parents,r=this._groups;typeof i!="function"&&(i=Xz(i));for(var s=r.length,o=new Array(s),a=new Array(s),l=new Array(s),c=0;c<s;++c){var u=n[c],h=r[c],d=h.length,f=Jz(i.call(u,u&&u.__data__,c,n)),p=f.length,_=a[c]=new Array(p),g=o[c]=new Array(p),m=l[c]=new Array(d);t(u,h,_,g,m,f,e);for(var v=0,x=0,y,T;v<p;++v)if(y=_[v]){for(v>=x&&(x=v+1);!(T=g[x])&&++x<p;);y._next=T||null}}return o=new Bi(o,n),o._enter=a,o._exit=l,o}function Jz(i){return typeof i=="object"&&"length"in i?i:Array.from(i)}function eV(){return new Bi(this._exit||this._groups.map(IS),this._parents)}function tV(i,e,t){var n=this.enter(),r=this,s=this.exit();return typeof i=="function"?(n=i(n),n&&(n=n.selection())):n=n.append(i+""),e!=null&&(r=e(r),r&&(r=r.selection())),t==null?s.remove():t(s),n&&r?n.merge(r).order():r}function nV(i){for(var e=i.selection?i.selection():i,t=this._groups,n=e._groups,r=t.length,s=n.length,o=Math.min(r,s),a=new Array(r),l=0;l<o;++l)for(var c=t[l],u=n[l],h=c.length,d=a[l]=new Array(h),f,p=0;p<h;++p)(f=c[p]||u[p])&&(d[p]=f);for(;l<r;++l)a[l]=t[l];return new Bi(a,this._parents)}function iV(){for(var i=this._groups,e=-1,t=i.length;++e<t;)for(var n=i[e],r=n.length-1,s=n[r],o;--r>=0;)(o=n[r])&&(s&&o.compareDocumentPosition(s)^4&&s.parentNode.insertBefore(o,s),s=o);return this}function rV(i){i||(i=sV);function e(h,d){return h&&d?i(h.__data__,d.__data__):!h-!d}for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s){for(var o=t[s],a=o.length,l=r[s]=new Array(a),c,u=0;u<a;++u)(c=o[u])&&(l[u]=c);l.sort(e)}return new Bi(r,this._parents).order()}function sV(i,e){return i<e?-1:i>e?1:i>=e?0:NaN}function oV(){var i=arguments[0];return arguments[0]=this,i.apply(null,arguments),this}function aV(){return Array.from(this)}function lV(){for(var i=this._groups,e=0,t=i.length;e<t;++e)for(var n=i[e],r=0,s=n.length;r<s;++r){var o=n[r];if(o)return o}return null}function cV(){let i=0;for(const e of this)++i;return i}function uV(){return!this.node()}function hV(i){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],s=0,o=r.length,a;s<o;++s)(a=r[s])&&i.call(a,a.__data__,s,r);return this}function dV(i){return function(){this.removeAttribute(i)}}function fV(i){return function(){this.removeAttributeNS(i.space,i.local)}}function pV(i,e){return function(){this.setAttribute(i,e)}}function mV(i,e){return function(){this.setAttributeNS(i.space,i.local,e)}}function gV(i,e){return function(){var t=e.apply(this,arguments);t==null?this.removeAttribute(i):this.setAttribute(i,t)}}function _V(i,e){return function(){var t=e.apply(this,arguments);t==null?this.removeAttributeNS(i.space,i.local):this.setAttributeNS(i.space,i.local,t)}}function vV(i,e){var t=NS(i);if(arguments.length<2){var n=this.node();return t.local?n.getAttributeNS(t.space,t.local):n.getAttribute(t)}return this.each((e==null?t.local?fV:dV:typeof e=="function"?t.local?_V:gV:t.local?mV:pV)(t,e))}function US(i){return i.ownerDocument&&i.ownerDocument.defaultView||i.document&&i||i.defaultView}function yV(i){return function(){this.style.removeProperty(i)}}function xV(i,e,t){return function(){this.style.setProperty(i,e,t)}}function bV(i,e,t){return function(){var n=e.apply(this,arguments);n==null?this.style.removeProperty(i):this.style.setProperty(i,n,t)}}function SV(i,e,t){return arguments.length>1?this.each((e==null?yV:typeof e=="function"?bV:xV)(i,e,t??"")):TV(this.node(),i)}function TV(i,e){return i.style.getPropertyValue(e)||US(i).getComputedStyle(i,null).getPropertyValue(e)}function MV(i){return function(){delete this[i]}}function EV(i,e){return function(){this[i]=e}}function wV(i,e){return function(){var t=e.apply(this,arguments);t==null?delete this[i]:this[i]=t}}function AV(i,e){return arguments.length>1?this.each((e==null?MV:typeof e=="function"?wV:EV)(i,e)):this.node()[i]}function FS(i){return i.trim().split(/^|\s+/)}function _g(i){return i.classList||new BS(i)}function BS(i){this._node=i,this._names=FS(i.getAttribute("class")||"")}BS.prototype={add:function(i){var e=this._names.indexOf(i);e<0&&(this._names.push(i),this._node.setAttribute("class",this._names.join(" ")))},remove:function(i){var e=this._names.indexOf(i);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(i){return this._names.indexOf(i)>=0}};function OS(i,e){for(var t=_g(i),n=-1,r=e.length;++n<r;)t.add(e[n])}function kS(i,e){for(var t=_g(i),n=-1,r=e.length;++n<r;)t.remove(e[n])}function RV(i){return function(){OS(this,i)}}function CV(i){return function(){kS(this,i)}}function NV(i,e){return function(){(e.apply(this,arguments)?OS:kS)(this,i)}}function PV(i,e){var t=FS(i+"");if(arguments.length<2){for(var n=_g(this.node()),r=-1,s=t.length;++r<s;)if(!n.contains(t[r]))return!1;return!0}return this.each((typeof e=="function"?NV:e?RV:CV)(t,e))}function DV(){this.textContent=""}function LV(i){return function(){this.textContent=i}}function IV(i){return function(){var e=i.apply(this,arguments);this.textContent=e??""}}function UV(i){return arguments.length?this.each(i==null?DV:(typeof i=="function"?IV:LV)(i)):this.node().textContent}function FV(){this.innerHTML=""}function BV(i){return function(){this.innerHTML=i}}function OV(i){return function(){var e=i.apply(this,arguments);this.innerHTML=e??""}}function kV(i){return arguments.length?this.each(i==null?FV:(typeof i=="function"?OV:BV)(i)):this.node().innerHTML}function GV(){this.nextSibling&&this.parentNode.appendChild(this)}function zV(){return this.each(GV)}function VV(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function HV(){return this.each(VV)}function WV(i){var e=typeof i=="function"?i:PS(i);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function $V(){return null}function qV(i,e){var t=typeof i=="function"?i:PS(i),n=e==null?$V:typeof e=="function"?e:DS(e);return this.select(function(){return this.insertBefore(t.apply(this,arguments),n.apply(this,arguments)||null)})}function jV(){var i=this.parentNode;i&&i.removeChild(this)}function XV(){return this.each(jV)}function YV(){var i=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(i,this.nextSibling):i}function KV(){var i=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(i,this.nextSibling):i}function ZV(i){return this.select(i?KV:YV)}function QV(i){return arguments.length?this.property("__data__",i):this.node().__data__}function JV(i){return function(e){i.call(this,e,this.__data__)}}function e4(i){return i.trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}})}function t4(i){return function(){var e=this.__on;if(e){for(var t=0,n=-1,r=e.length,s;t<r;++t)s=e[t],(!i.type||s.type===i.type)&&s.name===i.name?this.removeEventListener(s.type,s.listener,s.options):e[++n]=s;++n?e.length=n:delete this.__on}}}function n4(i,e,t){return function(){var n=this.__on,r,s=JV(e);if(n){for(var o=0,a=n.length;o<a;++o)if((r=n[o]).type===i.type&&r.name===i.name){this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=s,r.options=t),r.value=e;return}}this.addEventListener(i.type,s,t),r={type:i.type,name:i.name,value:e,listener:s,options:t},n?n.push(r):this.__on=[r]}}function i4(i,e,t){var n=e4(i+""),r,s=n.length,o;if(arguments.length<2){var a=this.node().__on;if(a){for(var l=0,c=a.length,u;l<c;++l)for(r=0,u=a[l];r<s;++r)if((o=n[r]).type===u.type&&o.name===u.name)return u.value}return}for(a=e?n4:t4,r=0;r<s;++r)this.each(a(n[r],e,t));return this}function GS(i,e,t){var n=US(i),r=n.CustomEvent;typeof r=="function"?r=new r(e,t):(r=n.document.createEvent("Event"),t?(r.initEvent(e,t.bubbles,t.cancelable),r.detail=t.detail):r.initEvent(e,!1,!1)),i.dispatchEvent(r)}function r4(i,e){return function(){return GS(this,i,e)}}function s4(i,e){return function(){return GS(this,i,e.apply(this,arguments))}}function o4(i,e){return this.each((typeof e=="function"?s4:r4)(i,e))}function*a4(){for(var i=this._groups,e=0,t=i.length;e<t;++e)for(var n=i[e],r=0,s=n.length,o;r<s;++r)(o=n[r])&&(yield o)}var l4=[null];function Bi(i,e){this._groups=i,this._parents=e}function c4(){return this}Bi.prototype={constructor:Bi,select:Pz,selectAll:Fz,selectChild:zz,selectChildren:$z,filter:qz,data:Qz,enter:jz,exit:eV,join:tV,merge:nV,selection:c4,order:iV,sort:rV,call:oV,nodes:aV,node:lV,size:cV,empty:uV,each:hV,attr:vV,style:SV,property:AV,classed:PV,text:UV,html:kV,raise:zV,lower:HV,append:WV,insert:qV,remove:XV,clone:ZV,datum:QV,on:i4,dispatch:o4,[Symbol.iterator]:a4};function u4(i){return typeof i=="string"?new Bi([[document.querySelector(i)]],[document.documentElement]):new Bi([[i]],l4)}function h4(i){let e;for(;e=i.sourceEvent;)i=e;return i}function d4(i,e){if(i=h4(i),e===void 0&&(e=i.currentTarget),e){var t=e.ownerSVGElement||e;if(t.createSVGPoint){var n=t.createSVGPoint();return n.x=i.clientX,n.y=i.clientY,n=n.matrixTransform(e.getScreenCTM().inverse()),[n.x,n.y]}if(e.getBoundingClientRect){var r=e.getBoundingClientRect();return[i.clientX-r.left-e.clientLeft,i.clientY-r.top-e.clientTop]}}return[i.pageX,i.pageY]}var Ac,Wt,zS,VS,qs,Xy,HS,WS,$S,vg,Up,Fp,dc={},qS=[],f4=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,rd=Array.isArray;function ur(i,e){for(var t in e)i[t]=e[t];return i}function yg(i){i&&i.parentNode&&i.parentNode.removeChild(i)}function p4(i,e,t){var n,r,s,o={};for(s in e)s=="key"?n=e[s]:s=="ref"?r=e[s]:o[s]=e[s];if(arguments.length>2&&(o.children=arguments.length>3?Ac.call(arguments,2):t),typeof i=="function"&&i.defaultProps!=null)for(s in i.defaultProps)o[s]==null&&(o[s]=i.defaultProps[s]);return Il(i,o,n,r,null)}function Il(i,e,t,n,r){var s={type:i,props:e,key:t,ref:n,__k:null,__:null,__b:0,__e:null,__c:null,constructor:void 0,__v:r??++zS,__i:-1,__u:0};return r==null&&Wt.vnode!=null&&Wt.vnode(s),s}function sd(i){return i.children}function Zu(i,e){this.props=i,this.context=e}function Aa(i,e){if(e==null)return i.__?Aa(i.__,i.__i+1):null;for(var t;e<i.__k.length;e++)if((t=i.__k[e])!=null&&t.__e!=null)return t.__e;return typeof i.type=="function"?Aa(i):null}function jS(i){var e,t;if((i=i.__)!=null&&i.__c!=null){for(i.__e=i.__c.base=null,e=0;e<i.__k.length;e++)if((t=i.__k[e])!=null&&t.__e!=null){i.__e=i.__c.base=t.__e;break}return jS(i)}}function Yy(i){(!i.__d&&(i.__d=!0)&&qs.push(i)&&!xh.__r++||Xy!=Wt.debounceRendering)&&((Xy=Wt.debounceRendering)||HS)(xh)}function xh(){for(var i,e,t,n,r,s,o,a=1;qs.length;)qs.length>a&&qs.sort(WS),i=qs.shift(),a=qs.length,i.__d&&(t=void 0,r=(n=(e=i).__v).__e,s=[],o=[],e.__P&&((t=ur({},n)).__v=n.__v+1,Wt.vnode&&Wt.vnode(t),xg(e.__P,t,n,e.__n,e.__P.namespaceURI,32&n.__u?[r]:null,s,r??Aa(n),!!(32&n.__u),o),t.__v=n.__v,t.__.__k[t.__i]=t,KS(s,t,o),t.__e!=r&&jS(t)));xh.__r=0}function XS(i,e,t,n,r,s,o,a,l,c,u){var h,d,f,p,_,g,m=n&&n.__k||qS,v=e.length;for(l=m4(t,e,m,l,v),h=0;h<v;h++)(f=t.__k[h])!=null&&(d=f.__i==-1?dc:m[f.__i]||dc,f.__i=h,g=xg(i,f,d,r,s,o,a,l,c,u),p=f.__e,f.ref&&d.ref!=f.ref&&(d.ref&&bg(d.ref,null,f),u.push(f.ref,f.__c||p,f)),_==null&&p!=null&&(_=p),4&f.__u||d.__k===f.__k?l=YS(f,l,i):typeof f.type=="function"&&g!==void 0?l=g:p&&(l=p.nextSibling),f.__u&=-7);return t.__e=_,l}function m4(i,e,t,n,r){var s,o,a,l,c,u=t.length,h=u,d=0;for(i.__k=new Array(r),s=0;s<r;s++)(o=e[s])!=null&&typeof o!="boolean"&&typeof o!="function"?(l=s+d,(o=i.__k[s]=typeof o=="string"||typeof o=="number"||typeof o=="bigint"||o.constructor==String?Il(null,o,null,null,null):rd(o)?Il(sd,{children:o},null,null,null):o.constructor==null&&o.__b>0?Il(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o).__=i,o.__b=i.__b+1,a=null,(c=o.__i=g4(o,t,l,h))!=-1&&(h--,(a=t[c])&&(a.__u|=2)),a==null||a.__v==null?(c==-1&&(r>u?d--:r<u&&d++),typeof o.type!="function"&&(o.__u|=4)):c!=l&&(c==l-1?d--:c==l+1?d++:(c>l?d--:d++,o.__u|=4))):i.__k[s]=null;if(h)for(s=0;s<u;s++)(a=t[s])!=null&&!(2&a.__u)&&(a.__e==n&&(n=Aa(a)),QS(a,a));return n}function YS(i,e,t){var n,r;if(typeof i.type=="function"){for(n=i.__k,r=0;n&&r<n.length;r++)n[r]&&(n[r].__=i,e=YS(n[r],e,t));return e}i.__e!=e&&(e&&i.type&&!t.contains(e)&&(e=Aa(i)),t.insertBefore(i.__e,e||null),e=i.__e);do e=e&&e.nextSibling;while(e!=null&&e.nodeType==8);return e}function g4(i,e,t,n){var r,s,o=i.key,a=i.type,l=e[t];if(l===null&&i.key==null||l&&o==l.key&&a==l.type&&!(2&l.__u))return t;if(n>(l!=null&&!(2&l.__u)?1:0))for(r=t-1,s=t+1;r>=0||s<e.length;){if(r>=0){if((l=e[r])&&!(2&l.__u)&&o==l.key&&a==l.type)return r;r--}if(s<e.length){if((l=e[s])&&!(2&l.__u)&&o==l.key&&a==l.type)return s;s++}}return-1}function Ky(i,e,t){e[0]=="-"?i.setProperty(e,t??""):i[e]=t==null?"":typeof t!="number"||f4.test(e)?t:t+"px"}function Bu(i,e,t,n,r){var s;e:if(e=="style")if(typeof t=="string")i.style.cssText=t;else{if(typeof n=="string"&&(i.style.cssText=n=""),n)for(e in n)t&&e in t||Ky(i.style,e,"");if(t)for(e in t)n&&t[e]==n[e]||Ky(i.style,e,t[e])}else if(e[0]=="o"&&e[1]=="n")s=e!=(e=e.replace($S,"$1")),e=e.toLowerCase()in i||e=="onFocusOut"||e=="onFocusIn"?e.toLowerCase().slice(2):e.slice(2),i.l||(i.l={}),i.l[e+s]=t,t?n?t.u=n.u:(t.u=vg,i.addEventListener(e,s?Fp:Up,s)):i.removeEventListener(e,s?Fp:Up,s);else{if(r=="http://www.w3.org/2000/svg")e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!="width"&&e!="height"&&e!="href"&&e!="list"&&e!="form"&&e!="tabIndex"&&e!="download"&&e!="rowSpan"&&e!="colSpan"&&e!="role"&&e!="popover"&&e in i)try{i[e]=t??"";break e}catch{}typeof t=="function"||(t==null||t===!1&&e[4]!="-"?i.removeAttribute(e):i.setAttribute(e,e=="popover"&&t==1?"":t))}}function Zy(i){return function(e){if(this.l){var t=this.l[e.type+i];if(e.t==null)e.t=vg++;else if(e.t<t.u)return;return t(Wt.event?Wt.event(e):e)}}}function xg(i,e,t,n,r,s,o,a,l,c){var u,h,d,f,p,_,g,m,v,x,y,T,b,M,w,E,S,C=e.type;if(e.constructor!=null)return null;128&t.__u&&(l=!!(32&t.__u),s=[a=e.__e=t.__e]),(u=Wt.__b)&&u(e);e:if(typeof C=="function")try{if(m=e.props,v="prototype"in C&&C.prototype.render,x=(u=C.contextType)&&n[u.__c],y=u?x?x.props.value:u.__:n,t.__c?g=(h=e.__c=t.__c).__=h.__E:(v?e.__c=h=new C(m,y):(e.__c=h=new Zu(m,y),h.constructor=C,h.render=v4),x&&x.sub(h),h.props=m,h.state||(h.state={}),h.context=y,h.__n=n,d=h.__d=!0,h.__h=[],h._sb=[]),v&&h.__s==null&&(h.__s=h.state),v&&C.getDerivedStateFromProps!=null&&(h.__s==h.state&&(h.__s=ur({},h.__s)),ur(h.__s,C.getDerivedStateFromProps(m,h.__s))),f=h.props,p=h.state,h.__v=e,d)v&&C.getDerivedStateFromProps==null&&h.componentWillMount!=null&&h.componentWillMount(),v&&h.componentDidMount!=null&&h.__h.push(h.componentDidMount);else{if(v&&C.getDerivedStateFromProps==null&&m!==f&&h.componentWillReceiveProps!=null&&h.componentWillReceiveProps(m,y),!h.__e&&h.shouldComponentUpdate!=null&&h.shouldComponentUpdate(m,h.__s,y)===!1||e.__v==t.__v){for(e.__v!=t.__v&&(h.props=m,h.state=h.__s,h.__d=!1),e.__e=t.__e,e.__k=t.__k,e.__k.some(function(I){I&&(I.__=e)}),T=0;T<h._sb.length;T++)h.__h.push(h._sb[T]);h._sb=[],h.__h.length&&o.push(h);break e}h.componentWillUpdate!=null&&h.componentWillUpdate(m,h.__s,y),v&&h.componentDidUpdate!=null&&h.__h.push(function(){h.componentDidUpdate(f,p,_)})}if(h.context=y,h.props=m,h.__P=i,h.__e=!1,b=Wt.__r,M=0,v){for(h.state=h.__s,h.__d=!1,b&&b(e),u=h.render(h.props,h.state,h.context),w=0;w<h._sb.length;w++)h.__h.push(h._sb[w]);h._sb=[]}else do h.__d=!1,b&&b(e),u=h.render(h.props,h.state,h.context),h.state=h.__s;while(h.__d&&++M<25);h.state=h.__s,h.getChildContext!=null&&(n=ur(ur({},n),h.getChildContext())),v&&!d&&h.getSnapshotBeforeUpdate!=null&&(_=h.getSnapshotBeforeUpdate(f,p)),E=u,u!=null&&u.type===sd&&u.key==null&&(E=ZS(u.props.children)),a=XS(i,rd(E)?E:[E],e,t,n,r,s,o,a,l,c),h.base=e.__e,e.__u&=-161,h.__h.length&&o.push(h),g&&(h.__E=h.__=null)}catch(I){if(e.__v=null,l||s!=null)if(I.then){for(e.__u|=l?160:128;a&&a.nodeType==8&&a.nextSibling;)a=a.nextSibling;s[s.indexOf(a)]=null,e.__e=a}else for(S=s.length;S--;)yg(s[S]);else e.__e=t.__e,e.__k=t.__k;Wt.__e(I,e,t)}else s==null&&e.__v==t.__v?(e.__k=t.__k,e.__e=t.__e):a=e.__e=_4(t.__e,e,t,n,r,s,o,l,c);return(u=Wt.diffed)&&u(e),128&e.__u?void 0:a}function KS(i,e,t){for(var n=0;n<t.length;n++)bg(t[n],t[++n],t[++n]);Wt.__c&&Wt.__c(e,i),i.some(function(r){try{i=r.__h,r.__h=[],i.some(function(s){s.call(r)})}catch(s){Wt.__e(s,r.__v)}})}function ZS(i){return typeof i!="object"||i==null||i.__b&&i.__b>0?i:rd(i)?i.map(ZS):ur({},i)}function _4(i,e,t,n,r,s,o,a,l){var c,u,h,d,f,p,_,g=t.props,m=e.props,v=e.type;if(v=="svg"?r="http://www.w3.org/2000/svg":v=="math"?r="http://www.w3.org/1998/Math/MathML":r||(r="http://www.w3.org/1999/xhtml"),s!=null){for(c=0;c<s.length;c++)if((f=s[c])&&"setAttribute"in f==!!v&&(v?f.localName==v:f.nodeType==3)){i=f,s[c]=null;break}}if(i==null){if(v==null)return document.createTextNode(m);i=document.createElementNS(r,v,m.is&&m),a&&(Wt.__m&&Wt.__m(e,s),a=!1),s=null}if(v==null)g===m||a&&i.data==m||(i.data=m);else{if(s=s&&Ac.call(i.childNodes),g=t.props||dc,!a&&s!=null)for(g={},c=0;c<i.attributes.length;c++)g[(f=i.attributes[c]).name]=f.value;for(c in g)if(f=g[c],c!="children"){if(c=="dangerouslySetInnerHTML")h=f;else if(!(c in m)){if(c=="value"&&"defaultValue"in m||c=="checked"&&"defaultChecked"in m)continue;Bu(i,c,null,f,r)}}for(c in m)f=m[c],c=="children"?d=f:c=="dangerouslySetInnerHTML"?u=f:c=="value"?p=f:c=="checked"?_=f:a&&typeof f!="function"||g[c]===f||Bu(i,c,f,g[c],r);if(u)a||h&&(u.__html==h.__html||u.__html==i.innerHTML)||(i.innerHTML=u.__html),e.__k=[];else if(h&&(i.innerHTML=""),XS(e.type=="template"?i.content:i,rd(d)?d:[d],e,t,n,v=="foreignObject"?"http://www.w3.org/1999/xhtml":r,s,o,s?s[0]:t.__k&&Aa(t,0),a,l),s!=null)for(c=s.length;c--;)yg(s[c]);a||(c="value",v=="progress"&&p==null?i.removeAttribute("value"):p!=null&&(p!==i[c]||v=="progress"&&!p||v=="option"&&p!=g[c])&&Bu(i,c,p,g[c],r),c="checked",_!=null&&_!=i[c]&&Bu(i,c,_,g[c],r))}return i}function bg(i,e,t){try{if(typeof i=="function"){var n=typeof i.__u=="function";n&&i.__u(),n&&e==null||(i.__u=i(e))}else i.current=e}catch(r){Wt.__e(r,t)}}function QS(i,e,t){var n,r;if(Wt.unmount&&Wt.unmount(i),(n=i.ref)&&(n.current&&n.current!=i.__e||bg(n,null,e)),(n=i.__c)!=null){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(s){Wt.__e(s,e)}n.base=n.__P=null}if(n=i.__k)for(r=0;r<n.length;r++)n[r]&&QS(n[r],e,t||typeof i.type!="function");t||yg(i.__e),i.__c=i.__=i.__e=void 0}function v4(i,e,t){return this.constructor(i,t)}function y4(i,e,t){var n,r,s,o;e==document&&(e=document.documentElement),Wt.__&&Wt.__(i,e),r=(n=!1)?null:e.__k,s=[],o=[],xg(e,i=e.__k=p4(sd,null,[i]),r||dc,dc,e.namespaceURI,r?null:e.firstChild?Ac.call(e.childNodes):null,s,r?r.__e:e.firstChild,n,o),KS(s,i,o)}function JS(i,e,t){var n,r,s,o,a=ur({},i.props);for(s in i.type&&i.type.defaultProps&&(o=i.type.defaultProps),e)s=="key"?n=e[s]:s=="ref"?r=e[s]:a[s]=e[s]==null&&o!=null?o[s]:e[s];return arguments.length>2&&(a.children=arguments.length>3?Ac.call(arguments,2):t),Il(i.type,a,n||i.key,r||i.ref,null)}Ac=qS.slice,Wt={__e:function(i,e,t,n){for(var r,s,o;e=e.__;)if((r=e.__c)&&!r.__)try{if((s=r.constructor)&&s.getDerivedStateFromError!=null&&(r.setState(s.getDerivedStateFromError(i)),o=r.__d),r.componentDidCatch!=null&&(r.componentDidCatch(i,n||{}),o=r.__d),o)return r.__E=r}catch(a){i=a}throw i}},zS=0,VS=function(i){return i!=null&&i.constructor==null},Zu.prototype.setState=function(i,e){var t;t=this.__s!=null&&this.__s!=this.state?this.__s:this.__s=ur({},this.state),typeof i=="function"&&(i=i(ur({},t),this.props)),i&&ur(t,i),i!=null&&this.__v&&(e&&this._sb.push(e),Yy(this))},Zu.prototype.forceUpdate=function(i){this.__v&&(this.__e=!0,i&&this.__h.push(i),Yy(this))},Zu.prototype.render=sd,qs=[],HS=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,WS=function(i,e){return i.__v.__b-e.__v.__b},xh.__r=0,$S=/(PointerCapture)$|Capture$/i,vg=0,Up=Zy(!1),Fp=Zy(!0);function Qy(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function x4(i){if(Array.isArray(i))return i}function b4(i,e,t){return(e=A4(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function S4(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,r,s,o,a=[],l=!0,c=!1;try{if(s=(t=t.call(i)).next,e!==0)for(;!(l=(n=s.call(t)).done)&&(a.push(n.value),a.length!==e);l=!0);}catch(u){c=!0,r=u}finally{try{if(!l&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw r}}return a}}function T4(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Jy(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function M4(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?Jy(Object(t),!0).forEach(function(n){b4(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):Jy(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function E4(i,e){return x4(i)||S4(i,e)||R4(i,e)||T4()}function w4(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function A4(i){var e=w4(i,"string");return typeof e=="symbol"?e:e+""}function bh(i){"@babel/helpers - typeof";return bh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},bh(i)}function R4(i,e){if(i){if(typeof i=="string")return Qy(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Qy(i,e):void 0}}var Bp=function(e){if(bh(e)!=="object")return e;var t=JS(e);if(t.props){var n;t.props=M4({},t.props),t!=null&&(n=t.props)!==null&&n!==void 0&&n.children&&(t.props.children=Array.isArray(t.props.children)?t.props.children.map(Bp):Bp(t.props.children))}return t},C4=function(e){return VS(JS(e))},N4=function(e,t){delete t.__k,y4(Bp(e),t)};function P4(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css",t==="top"&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=i:r.appendChild(document.createTextNode(i))}}var D4=`.float-tooltip-kap {
  position: absolute;
  width: max-content; /* prevent shrinking near right edge */
  max-width: max(50%, 150px);
  padding: 3px 5px;
  border-radius: 3px;
  font: 12px sans-serif;
  color: #eee;
  background: rgba(0,0,0,0.6);
  pointer-events: none;
}
`;P4(D4);var L4=Oh({props:{content:{default:!1},offsetX:{triggerUpdate:!1},offsetY:{triggerUpdate:!1}},init:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=n.style,s=r===void 0?{}:r,o=!!e&&bh(e)==="object"&&!!e.node&&typeof e.node=="function",a=u4(o?e.node():e);a.style("position")==="static"&&a.style("position","relative"),t.tooltipEl=a.append("div").attr("class","float-tooltip-kap"),Object.entries(s).forEach(function(c){var u=E4(c,2),h=u[0],d=u[1];return t.tooltipEl.style(h,d)}),t.tooltipEl.style("left","-10000px").style("display","none");var l="tooltip-".concat(Math.round(Math.random()*1e12));t.mouseInside=!1,a.on("mousemove.".concat(l),function(c){t.mouseInside=!0;var u=d4(c),h=a.node(),d=h.offsetWidth,f=h.offsetHeight,p=[t.offsetX===null||t.offsetX===void 0?"-".concat(u[0]/d*100,"%"):typeof t.offsetX=="number"?"calc(-50% + ".concat(t.offsetX,"px)"):t.offsetX,t.offsetY===null||t.offsetY===void 0?f>130&&f-u[1]<100?"calc(-100% - 6px)":"21px":typeof t.offsetY=="number"?t.offsetY<0?"calc(-100% - ".concat(Math.abs(t.offsetY),"px)"):"".concat(t.offsetY,"px"):t.offsetY];t.tooltipEl.style("left",u[0]+"px").style("top",u[1]+"px").style("transform","translate(".concat(p.join(","),")")),t.content&&t.tooltipEl.style("display","inline")}),a.on("mouseover.".concat(l),function(){t.mouseInside=!0,t.content&&t.tooltipEl.style("display","inline")}),a.on("mouseout.".concat(l),function(){t.mouseInside=!1,t.tooltipEl.style("display","none")})},update:function(e){e.tooltipEl.style("display",e.content&&e.mouseInside?"inline":"none"),e.content?e.content instanceof HTMLElement?(e.tooltipEl.text(""),e.tooltipEl.append(function(){return e.content})):typeof e.content=="string"?e.tooltipEl.html(e.content):C4(e.content)?(e.tooltipEl.text(""),N4(e.content,e.tooltipEl.node())):(e.tooltipEl.style("display","none"),console.warn("Tooltip content is invalid, skipping.",e.content,e.content.toString())):e.tooltipEl.text("")}});function I4(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css",t==="top"&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=i:r.appendChild(document.createTextNode(i))}}var U4=`.scene-nav-info {
  position: absolute;
  bottom: 5px;
  width: 100%;
  text-align: center;
  color: slategrey;
  opacity: 0.7;
  font-size: 10px;
  font-family: sans-serif;
  pointer-events: none;
  user-select: none;
}

.scene-container canvas:focus {
  outline: none;
}`;I4(U4);function Op(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function F4(i){if(Array.isArray(i))return i}function B4(i){if(Array.isArray(i))return Op(i)}function O4(i,e,t){return(e=$4(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function k4(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function G4(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,r,s,o,a=[],l=!0,c=!1;try{if(s=(t=t.call(i)).next,e!==0)for(;!(l=(n=s.call(t)).done)&&(a.push(n.value),a.length!==e);l=!0);}catch(u){c=!0,r=u}finally{try{if(!l&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw r}}return a}}function z4(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function V4(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function H4(i,e){return F4(i)||G4(i,e)||eT(i,e)||z4()}function Us(i){return B4(i)||k4(i)||eT(i)||V4()}function W4(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function $4(i){var e=W4(i,"string");return typeof e=="symbol"?e:e+""}function eT(i,e){if(i){if(typeof i=="string")return Op(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Op(i,e):void 0}}var Vt=window.THREE?window.THREE:{WebGLRenderer:ZC,Scene:Nh,PerspectiveCamera:Tn,Raycaster:I0,SRGBColorSpace:Ie,TextureLoader:R0,Vector2:ae,Vector3:N,Box3:lo,Color:Le,Mesh:tn,SphereGeometry:Da,MeshBasicMaterial:or,BackSide:It,Clock:L0},tT=Oh({props:{width:{default:window.innerWidth,onChange:function(e,t,n){isNaN(e)&&(t.width=n)}},height:{default:window.innerHeight,onChange:function(e,t,n){isNaN(e)&&(t.height=n)}},viewOffset:{default:[0,0]},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},lights:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,t){t.hoverObj=null,t.tooltip&&t.tooltip.content(null)},triggerUpdate:!1},pointerRaycasterThrottleMs:{default:50,triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},pointsHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){e.controls.update&&e.controls.update(Math.min(1,e.clock.getDelta())),e.postProcessingComposer?e.postProcessingComposer.render():e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach(function(o){return o.render(e.scene,e.camera)});var t=+new Date;if(e.enablePointerInteraction&&t-e.lastRaycasterCheck>=e.pointerRaycasterThrottleMs){e.lastRaycasterCheck=t;var n=null;if(e.hoverDuringDrag||!e.isPointerDragging){var r=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y);e.hoverOrderComparator&&r.sort(function(o,a){return e.hoverOrderComparator(o.object,a.object)});var s=r.find(function(o){return e.hoverFilter(o.object)})||null;n=s?s.object:null,e.intersection=s||null}n!==e.hoverObj&&(e.onHover(n,e.hoverObj,e.intersection),e.tooltip.content(n&&vt(e.tooltipContent)(n,e.intersection)||null),e.hoverObj=n)}e.tweenGroup.update()}return this},getPointerPos:function(e){var t=e.pointerPos,n=t.x,r=t.y;return{x:n,y:r}},cameraPosition:function(e,t,n,r){var s=e.camera;if(t&&e.initialised){var o=t,a=n||{x:0,y:0,z:0};if(!r)u(o),h(a);else{var l=Object.assign({},s.position),c=d();e.tweenGroup.add(new qy(l).to(o,r).easing(Js.Quadratic.Out).onUpdate(u).start()),e.tweenGroup.add(new qy(c).to(a,r/3).easing(Js.Quadratic.Out).onUpdate(h).start())}return this}return Object.assign({},s.position,{lookAt:d()});function u(f){var p=f.x,_=f.y,g=f.z;p!==void 0&&(s.position.x=p),_!==void 0&&(s.position.y=_),g!==void 0&&(s.position.z=g)}function h(f){var p=new Vt.Vector3(f.x,f.y,f.z);e.controls.target?e.controls.target=p:s.lookAt(p)}function d(){return Object.assign(new Vt.Vector3(0,0,-1e3).applyQuaternion(s.quaternion).add(s.position))}},zoomToFit:function(e){for(var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,r=arguments.length,s=new Array(r>3?r-3:0),o=3;o<r;o++)s[o-3]=arguments[o];return this.fitToBbox(this.getBbox.apply(this,s),t,n)},fitToBbox:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:10,s=e.camera;if(t){var o=new Vt.Vector3(0,0,0),a=Math.max.apply(Math,Us(Object.entries(t).map(function(f){var p=H4(f,2),_=p[0],g=p[1];return Math.max.apply(Math,Us(g.map(function(m){return Math.abs(o[_]-m)})))})))*2,l=(1-r*2/e.height)*s.fov,c=a/Math.atan(l*Math.PI/180),u=c/s.aspect,h=Math.max(c,u);if(h>0){var d=o.clone().sub(s.position).normalize().multiplyScalar(-h);this.cameraPosition(d,o,n)}}return this},getBbox:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},n=new Vt.Box3(new Vt.Vector3(0,0,0),new Vt.Vector3(0,0,0)),r=e.objects.filter(t);return r.length?(r.forEach(function(s){return n.expandByObject(s)}),Object.assign.apply(Object,Us(["x","y","z"].map(function(s){return O4({},s,[n.min[s],n.max[s]])})))):null},getScreenCoords:function(e,t,n,r){var s=new Vt.Vector3(t,n,r);return s.project(this.camera()),{x:(s.x+1)*e.width/2,y:-(s.y-1)*e.height/2}},getSceneCoords:function(e,t,n){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,s=new Vt.Vector2(t/e.width*2-1,-(n/e.height)*2+1),o=new Vt.Raycaster;return o.setFromCamera(s,e.camera),Object.assign({},o.ray.at(r,new Vt.Vector3))},intersectingObjects:function(e,t,n){var r=new Vt.Vector2(t/e.width*2-1,-(n/e.height)*2+1),s=new Vt.Raycaster;return s.params.Line.threshold=e.lineHoverPrecision,s.params.Points.threshold=e.pointsHoverPrecision,s.setFromCamera(r,e.camera),s.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}},stateInit:function(){return{scene:new Vt.Scene,camera:new Vt.PerspectiveCamera,clock:new Vt.Clock,tweenGroup:new RS,lastRaycasterCheck:0}},init:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=n.controlType,s=r===void 0?"trackball":r,o=n.useWebGPU,a=o===void 0?!1:o,l=n.rendererConfig,c=l===void 0?{}:l,u=n.extraRenderers,h=u===void 0?[]:u,d=n.waitForLoadComplete,f=d===void 0?!0:d;e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.className="scene-container",t.container.style.position="relative",t.container.appendChild(t.navInfo=document.createElement("div")),t.navInfo.className="scene-nav-info",t.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[s]||"",t.navInfo.style.display=t.showNavInfo?null:"none",t.tooltip=new L4(t.container),t.pointerPos=new Vt.Vector2,t.pointerPos.x=-2,t.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(p){return t.container.addEventListener(p,function(_){if(p==="pointerdown"&&(t.isPointerPressed=!0),!t.isPointerDragging&&_.type==="pointermove"&&(_.pressure>0||t.isPointerPressed)&&(_.pointerType!=="touch"||_.movementX===void 0||[_.movementX,_.movementY].some(function(v){return Math.abs(v)>1}))&&(t.isPointerDragging=!0),t.enablePointerInteraction){var g=m(t.container);t.pointerPos.x=_.pageX-g.left,t.pointerPos.y=_.pageY-g.top}function m(v){var x=v.getBoundingClientRect(),y=window.pageXOffset||document.documentElement.scrollLeft,T=window.pageYOffset||document.documentElement.scrollTop;return{top:x.top+T,left:x.left+y}}},{passive:!0})}),t.container.addEventListener("pointerup",function(p){t.isPointerPressed=!1,!(t.isPointerDragging&&(t.isPointerDragging=!1,!t.clickAfterDrag))&&requestAnimationFrame(function(){p.button===0&&t.onClick(t.hoverObj||null,p,t.intersection),p.button===2&&t.onRightClick&&t.onRightClick(t.hoverObj||null,p,t.intersection)})},{passive:!0,capture:!0}),t.container.addEventListener("contextmenu",function(p){t.onRightClick&&p.preventDefault()}),t.renderer=new(a?Yk:Vt.WebGLRenderer)(Object.assign({antialias:!0,alpha:!0},c)),t.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),t.container.appendChild(t.renderer.domElement),t.extraRenderers=h,t.extraRenderers.forEach(function(p){p.domElement.style.position="absolute",p.domElement.style.top="0px",p.domElement.style.pointerEvents="none",t.container.appendChild(p.domElement)}),t.postProcessingComposer=new VG(t.renderer),t.postProcessingComposer.addPass(new HG(t.scene,t.camera)),t.controls=new{trackball:Zk,orbit:fG,fly:AG}[s](t.camera,t.renderer.domElement),s==="fly"&&(t.controls.movementSpeed=300,t.controls.rollSpeed=Math.PI/6,t.controls.dragToLook=!0),(s==="trackball"||s==="orbit")&&(t.controls.minDistance=.1,t.controls.maxDistance=t.skyRadius,t.controls.addEventListener("start",function(){t.controlsEngaged=!0}),t.controls.addEventListener("change",function(){t.controlsEngaged&&(t.controlsDragging=!0)}),t.controls.addEventListener("end",function(){t.controlsEngaged=!1,t.controlsDragging=!1})),[t.renderer,t.postProcessingComposer].concat(Us(t.extraRenderers)).forEach(function(p){return p.setSize(t.width,t.height)}),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix(),t.camera.position.z=1e3,t.scene.add(t.skysphere=new Vt.Mesh),t.skysphere.visible=!1,t.loadComplete=t.scene.visible=!f,window.scene=t.scene},update:function(e,t){if(e.width&&e.height&&(t.hasOwnProperty("width")||t.hasOwnProperty("height"))){var n,r=e.width,s=e.height;e.container.style.width="".concat(r,"px"),e.container.style.height="".concat(s,"px"),[e.renderer,e.postProcessingComposer].concat(Us(e.extraRenderers)).forEach(function(f){return f.setSize(r,s)}),e.camera.aspect=r/s;var o=e.viewOffset.slice(0,2);o.some(function(f){return f})&&(n=e.camera).setViewOffset.apply(n,[r,s].concat(Us(o),[r,s])),e.camera.updateProjectionMatrix()}if(t.hasOwnProperty("viewOffset")){var a,l=e.width,c=e.height,u=e.viewOffset.slice(0,2);u.some(function(f){return f})?(a=e.camera).setViewOffset.apply(a,[l,c].concat(Us(u),[l,c])):e.camera.clearViewOffset()}if(t.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&t.skyRadius&&(e.controls.maxDistance=Math.min(e.controls.maxDistance,e.skyRadius)),e.camera.far=e.skyRadius*2.5,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new Vt.SphereGeometry(e.skyRadius)),t.hasOwnProperty("backgroundColor")){var h=wa(e.backgroundColor).alpha;h===void 0&&(h=1),e.renderer.setClearColor(new Vt.Color(xz(1,e.backgroundColor)),h)}t.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?new Vt.TextureLoader().load(e.backgroundImageUrl,function(f){f.colorSpace=Vt.SRGBColorSpace,e.skysphere.material=new Vt.MeshBasicMaterial({map:f,side:Vt.BackSide}),e.skysphere.visible=!0,e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),!e.loadComplete&&d()}):(e.skysphere.visible=!1,e.skysphere.material.map=null,!e.loadComplete&&d())),t.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),t.hasOwnProperty("lights")&&((t.lights||[]).forEach(function(f){return e.scene.remove(f)}),e.lights.forEach(function(f){return e.scene.add(f)})),t.hasOwnProperty("objects")&&((t.objects||[]).forEach(function(f){return e.scene.remove(f)}),e.objects.forEach(function(f){return e.scene.add(f)}));function d(){e.loadComplete=e.scene.visible=!0}}});function q4(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css",t==="top"&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=i:r.appendChild(document.createTextNode(i))}}var j4=`.graph-info-msg {
  top: 50%;
  width: 100%;
  text-align: center;
  color: lavender;
  opacity: 0.7;
  font-size: 22px;
  position: absolute;
  font-family: Sans-serif;
}

.scene-container .clickable {
  cursor: pointer;
}

.scene-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.scene-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}`;q4(j4);function kp(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function X4(i){if(Array.isArray(i))return kp(i)}function Rc(i,e,t){return(e=Q4(e))in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function Y4(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function K4(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function e0(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Ou(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?e0(Object(t),!0).forEach(function(n){Rc(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):e0(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function od(i){return X4(i)||Y4(i)||J4(i)||K4()}function Z4(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function Q4(i){var e=Z4(i,"string");return typeof e=="symbol"?e:e+""}function J4(i,e){if(i){if(typeof i=="string")return kp(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?kp(i,e):void 0}}function nT(i,e){var t=new e;return t._destructor&&t._destructor(),{linkProp:function(r){return{default:t[r](),onChange:function(o,a){a[i][r](o)},triggerUpdate:!1}},linkMethod:function(r){return function(s){for(var o=s[i],a=arguments.length,l=new Array(a>1?a-1:0),c=1;c<a;c++)l[c-1]=arguments[c];var u=o[r].apply(o,l);return u===o?this:u}}}}var Qf=window.THREE?window.THREE:{AmbientLight:P0,DirectionalLight:N0,REVISION:Ra},eH=170,iT=nT("forceGraph",Ux),tH=Object.assign.apply(Object,od(["jsonUrl","graphData","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","onDagError","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeColor","nodeAutoColorBy","nodeOpacity","nodeVisibility","nodeThreeObject","nodeThreeObjectExtend","nodePositionUpdate","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","forceEngine","d3AlphaDecay","d3VelocityDecay","d3AlphaMin","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(i){return Rc({},i,iT.linkProp(i))}))),nH=Object.assign.apply(Object,od(["refresh","getGraphBbox","d3Force","d3ReheatSimulation","emitParticle"].map(function(i){return Rc({},i,iT.linkMethod(i))}))),Qu=nT("renderObjs",tT),iH=Object.assign.apply(Object,od(["width","height","backgroundColor","showNavInfo","enablePointerInteraction"].map(function(i){return Rc({},i,Qu.linkProp(i))}))),rH=Object.assign.apply(Object,od(["lights","cameraPosition","postProcessingComposer"].map(function(i){return Rc({},i,Qu.linkMethod(i))})).concat([{graph2ScreenCoords:Qu.linkMethod("getScreenCoords"),screen2GraphCoords:Qu.linkMethod("getSceneCoords")}])),sH=Oh({props:Ou(Ou({nodeLabel:{default:"name",triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:1,onChange:function(e,t){return t.renderObjs.lineHoverPrecision(e)},triggerUpdate:!1},enableNavigationControls:{default:!0,onChange:function(e,t){var n=t.renderObjs.controls();n&&(n.enabled=e,e&&n.domElement&&n.domElement.dispatchEvent(new PointerEvent("pointerup")))},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1}},tH),iH),methods:Ou(Ou({zoomToFit:function(e,t,n){for(var r,s=arguments.length,o=new Array(s>3?s-3:0),a=3;a<s;a++)o[a-3]=arguments[a];return e.renderObjs.fitToBbox((r=e.forceGraph).getGraphBbox.apply(r,o),t,n),this},pauseAnimation:function(e){return e.animationFrameRequestId!==null&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId===null&&this._animationCycle(),this},_animationCycle:function(e){e.enablePointerInteraction&&(this.renderer().domElement.style.cursor=null),e.forceGraph.tickFrame(),e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},scene:function(e){return e.renderObjs.scene()},camera:function(e){return e.renderObjs.camera()},renderer:function(e){return e.renderObjs.renderer()},controls:function(e){return e.renderObjs.controls()},tbControls:function(e){return e.renderObjs.tbControls()},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},nH),rH),stateInit:function(e){var t=e.controlType,n=e.rendererConfig,r=e.extraRenderers,s=new Ux;return{forceGraph:s,renderObjs:tT({controlType:t,rendererConfig:n,extraRenderers:r}).objects([s]).lights([new Qf.AmbientLight(13421772,Math.PI),new Qf.DirectionalLight(16777215,.6*Math.PI)])}},init:function(e,t){e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative";var n=document.createElement("div");t.container.appendChild(n),t.renderObjs(n);var r=t.renderObjs.camera(),s=t.renderObjs.renderer(),o=t.renderObjs.controls();o.enabled=!!t.enableNavigationControls,t.lastSetCameraZ=r.position.z;var a;t.container.appendChild(a=document.createElement("div")),a.className="graph-info-msg",a.textContent="",t.forceGraph.onLoading(function(){a.textContent="Loading..."}).onFinishLoading(function(){a.textContent=""}).onUpdate(function(){t.graphData=t.forceGraph.graphData(),r.position.x===0&&r.position.y===0&&r.position.z===t.lastSetCameraZ&&t.graphData.nodes.length&&(r.lookAt(t.forceGraph.position),t.lastSetCameraZ=r.position.z=Math.cbrt(t.graphData.nodes.length)*eH)}).onFinishUpdate(function(){if(t._dragControls){var l=t.graphData.nodes.find(function(u){return u.__initialFixedPos&&!u.__disposeControlsAfterDrag});l?l.__disposeControlsAfterDrag=!0:t._dragControls.dispose(),t._dragControls=void 0}if(t.enableNodeDrag&&t.enablePointerInteraction&&t.forceEngine==="d3"){var c=t._dragControls=new QC(t.graphData.nodes.map(function(u){return u.__threeObj}).filter(function(u){return u}),r,s.domElement);c.addEventListener("dragstart",function(u){var h=Mr(u.object);if(h){o.enabled=!1,u.object.__initialPos=u.object.position.clone(),u.object.__prevPos=u.object.position.clone();var d=h.__data;!d.__initialFixedPos&&(d.__initialFixedPos={fx:d.fx,fy:d.fy,fz:d.fz}),!d.__initialPos&&(d.__initialPos={x:d.x,y:d.y,z:d.z}),["x","y","z"].forEach(function(f){return d["f".concat(f)]=d[f]}),s.domElement.classList.add("grabbable")}}),c.addEventListener("drag",function(u){var h=Mr(u.object);if(h){if(!u.object.hasOwnProperty("__graphObjType")){var d=u.object.__initialPos,f=u.object.__prevPos,p=u.object.position;h.position.add(p.clone().sub(f)),f.copy(p),p.copy(d)}var _=h.__data,g=h.position,m={x:g.x-_.x,y:g.y-_.y,z:g.z-_.z};["x","y","z"].forEach(function(v){return _["f".concat(v)]=_[v]=g[v]}),t.forceGraph.d3AlphaTarget(.3).resetCountdown(),_.__dragged=!0,t.onNodeDrag(_,m)}}),c.addEventListener("dragend",function(u){var h=Mr(u.object);if(h){delete u.object.__initialPos,delete u.object.__prevPos;var d=h.__data;d.__disposeControlsAfterDrag&&(c.dispose(),delete d.__disposeControlsAfterDrag);var f=d.__initialFixedPos,p=d.__initialPos,_={x:p.x-d.x,y:p.y-d.y,z:p.z-d.z};f&&(["x","y","z"].forEach(function(g){var m="f".concat(g);f[m]===void 0&&delete d[m]}),delete d.__initialFixedPos,delete d.__initialPos,d.__dragged&&(delete d.__dragged,t.onNodeDragEnd(d,_))),t.forceGraph.d3AlphaTarget(0).resetCountdown(),t.enableNavigationControls&&(o.enabled=!0,o.domElement&&o.domElement.ownerDocument&&o.domElement.ownerDocument.dispatchEvent(new PointerEvent("pointerup",{pointerType:"touch"}))),s.domElement.classList.remove("grabbable")}})}}),Qf.REVISION<155&&(t.renderObjs.renderer().useLegacyLights=!1),t.renderObjs.hoverOrderComparator(function(l,c){var u=Mr(l);if(!u)return 1;var h=Mr(c);if(!h)return-1;var d=function(p){return p.__graphObjType==="node"};return d(h)-d(u)}).tooltipContent(function(l){var c=Mr(l);return c&&vt(t["".concat(c.__graphObjType,"Label")])(c.__data)||""}).hoverDuringDrag(!1).onHover(function(l){var c=Mr(l);if(c!==t.hoverObj){var u=t.hoverObj?t.hoverObj.__graphObjType:null,h=t.hoverObj?t.hoverObj.__data:null,d=c?c.__graphObjType:null,f=c?c.__data:null;if(u&&u!==d){var p=t["on".concat(u==="node"?"Node":"Link","Hover")];p&&p(null,h)}if(d){var _=t["on".concat(d==="node"?"Node":"Link","Hover")];_&&_(f,u===d?h:null)}s.domElement.classList[c&&t["on".concat(d==="node"?"Node":"Link","Click")]||!c&&t.onBackgroundClick?"add":"remove"]("clickable"),t.hoverObj=c}}).clickAfterDrag(!1).onClick(function(l,c){var u=Mr(l);if(u){var h=t["on".concat(u.__graphObjType==="node"?"Node":"Link","Click")];h&&h(u.__data,c)}else t.onBackgroundClick&&t.onBackgroundClick(c)}).onRightClick(function(l,c){var u=Mr(l);if(u){var h=t["on".concat(u.__graphObjType==="node"?"Node":"Link","RightClick")];h&&h(u.__data,c)}else t.onBackgroundRightClick&&t.onBackgroundRightClick(c)}),this._animationCycle()}});function Mr(i){for(var e=i;e&&!e.hasOwnProperty("__graphObjType");)e=e.parent;return e}function Gp(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=Array(e);t<e;t++)n[t]=i[t];return n}function oH(i){if(Array.isArray(i))return i}function aH(i){if(Array.isArray(i))return Gp(i)}function lH(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function cH(i,e,t){return e=Sh(e),vH(i,rT()?Reflect.construct(e,t||[],Sh(i).constructor):e.apply(i,t))}function uH(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function hH(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,xH(n.key),n)}}function dH(i,e,t){return e&&hH(i.prototype,e),Object.defineProperty(i,"prototype",{writable:!1}),i}function Sh(i){return Sh=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Sh(i)}function fH(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),e&&zp(i,e)}function rT(){try{var i=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(rT=function(){return!!i})()}function pH(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function mH(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n,r,s,o,a=[],l=!0,c=!1;try{if(s=(t=t.call(i)).next,e===0){if(Object(t)!==t)return;l=!1}else for(;!(l=(n=s.call(t)).done)&&(a.push(n.value),a.length!==e);l=!0);}catch(u){c=!0,r=u}finally{try{if(!l&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw r}}return a}}function gH(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _H(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function vH(i,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return lH(i)}function zp(i,e){return zp=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,n){return t.__proto__=n,t},zp(i,e)}function t0(i,e){return oH(i)||mH(i,e)||sT(i,e)||gH()}function ku(i){return aH(i)||pH(i)||sT(i)||_H()}function yH(i,e){if(typeof i!="object"||!i)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(i)}function xH(i){var e=yH(i,"string");return typeof e=="symbol"?e:e+""}function sT(i,e){if(i){if(typeof i=="string")return Gp(i,e);var t={}.toString.call(i).slice(8,-1);return t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set"?Array.from(i):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Gp(i,e):void 0}}var pl=typeof window<"u"&&window.THREE?window.THREE:{CanvasTexture:DM,Sprite:M0,SpriteMaterial:Ph,SRGBColorSpace:Ie},bH=function(i){function e(){var t,n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:10,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"rgba(255, 255, 255, 1)";return uH(this,e),t=cH(this,e,[new pl.SpriteMaterial]),t._text="".concat(n),t._textHeight=r,t._color=s,t._backgroundColor=!1,t._padding=0,t._borderWidth=0,t._borderRadius=0,t._borderColor="white",t._strokeWidth=0,t._strokeColor="white",t._fontFace="system-ui",t._fontSize=90,t._fontWeight="normal",t._canvas=document.createElement("canvas"),t._genCanvas(),t}return fH(e,i),dH(e,[{key:"text",get:function(){return this._text},set:function(n){this._text=n,this._genCanvas()}},{key:"textHeight",get:function(){return this._textHeight},set:function(n){this._textHeight=n,this._genCanvas()}},{key:"color",get:function(){return this._color},set:function(n){this._color=n,this._genCanvas()}},{key:"backgroundColor",get:function(){return this._backgroundColor},set:function(n){this._backgroundColor=n,this._genCanvas()}},{key:"padding",get:function(){return this._padding},set:function(n){this._padding=n,this._genCanvas()}},{key:"borderWidth",get:function(){return this._borderWidth},set:function(n){this._borderWidth=n,this._genCanvas()}},{key:"borderRadius",get:function(){return this._borderRadius},set:function(n){this._borderRadius=n,this._genCanvas()}},{key:"borderColor",get:function(){return this._borderColor},set:function(n){this._borderColor=n,this._genCanvas()}},{key:"fontFace",get:function(){return this._fontFace},set:function(n){this._fontFace=n,this._genCanvas()}},{key:"fontSize",get:function(){return this._fontSize},set:function(n){this._fontSize=n,this._genCanvas()}},{key:"fontWeight",get:function(){return this._fontWeight},set:function(n){this._fontWeight=n,this._genCanvas()}},{key:"strokeWidth",get:function(){return this._strokeWidth},set:function(n){this._strokeWidth=n,this._genCanvas()}},{key:"strokeColor",get:function(){return this._strokeColor},set:function(n){this._strokeColor=n,this._genCanvas()}},{key:"_genCanvas",value:function(){var n=this,r=this._canvas,s=r.getContext("2d"),o=1/this.textHeight,a=Array.isArray(this.borderWidth)?this.borderWidth:[this.borderWidth,this.borderWidth],l=a.map(function(w){return w*n.fontSize*o}),c=Array.isArray(this.borderRadius)?this.borderRadius:[this.borderRadius,this.borderRadius,this.borderRadius,this.borderRadius],u=c.map(function(w){return w*n.fontSize*o}),h=Array.isArray(this.padding)?this.padding:[this.padding,this.padding],d=h.map(function(w){return w*n.fontSize*o}),f=this.text.split(`
`),p="".concat(this.fontWeight," ").concat(this.fontSize,"px ").concat(this.fontFace);s.font=p;var _=Math.max.apply(Math,ku(f.map(function(w){return s.measureText(w).width}))),g=this.fontSize*f.length;if(r.width=_+l[0]*2+d[0]*2,r.height=g+l[1]*2+d[1]*2,this.borderWidth){if(s.strokeStyle=this.borderColor,l[0]){var m=l[0]/2;s.lineWidth=l[0],s.beginPath(),s.moveTo(m,u[0]),s.lineTo(m,r.height-u[3]),s.moveTo(r.width-m,u[1]),s.lineTo(r.width-m,r.height-u[2]),s.stroke()}if(l[1]){var v=l[1]/2;s.lineWidth=l[1],s.beginPath(),s.moveTo(Math.max(l[0],u[0]),v),s.lineTo(r.width-Math.max(l[0],u[1]),v),s.moveTo(Math.max(l[0],u[3]),r.height-v),s.lineTo(r.width-Math.max(l[0],u[2]),r.height-v),s.stroke()}if(this.borderRadius){var x=Math.max.apply(Math,ku(l)),y=x/2;s.lineWidth=x,s.beginPath(),[!!u[0]&&[u[0],y,y,u[0]],!!u[1]&&[r.width-u[1],r.width-y,y,u[1]],!!u[2]&&[r.width-u[2],r.width-y,r.height-y,r.height-u[2]],!!u[3]&&[u[3],y,r.height-y,r.height-u[3]]].filter(function(w){return w}).forEach(function(w){var E=t0(w,4),S=E[0],C=E[1],I=E[2],k=E[3];s.moveTo(S,I),s.quadraticCurveTo(C,I,C,k)}),s.stroke()}}this.backgroundColor&&(s.fillStyle=this.backgroundColor,this.borderRadius?(s.beginPath(),s.moveTo(l[0],u[0]),[[l[0],u[0],r.width-u[1],l[1],l[1],l[1]],[r.width-l[0],r.width-l[0],r.width-l[0],l[1],u[1],r.height-u[2]],[r.width-l[0],r.width-u[2],u[3],r.height-l[1],r.height-l[1],r.height-l[1]],[l[0],l[0],l[0],r.height-l[1],r.height-u[3],u[0]]].forEach(function(w){var E=t0(w,6),S=E[0],C=E[1],I=E[2],k=E[3],D=E[4],L=E[5];s.quadraticCurveTo(S,k,C,D),s.lineTo(I,L)}),s.closePath(),s.fill()):s.fillRect(l[0],l[1],r.width-l[0]*2,r.height-l[1]*2)),s.translate.apply(s,ku(l)),s.translate.apply(s,ku(d)),s.font=p,s.fillStyle=this.color,s.textBaseline="bottom";var T=this.strokeWidth>0;T&&(s.lineWidth=this.strokeWidth*this.fontSize/10,s.strokeStyle=this.strokeColor),f.forEach(function(w,E){var S=(_-s.measureText(w).width)/2,C=(E+1)*n.fontSize;T&&s.strokeText(w,S,C),s.fillText(w,S,C)}),this.material.map&&this.material.map.dispose();var b=this.material.map=new pl.CanvasTexture(r);b.colorSpace=pl.SRGBColorSpace;var M=this.textHeight*f.length+a[1]*2+h[1]*2;this.scale.set(M*r.width/r.height,M,0)}},{key:"clone",value:function(){return new this.constructor(this.text,this.textHeight,this.color).copy(this)}},{key:"copy",value:function(n){return pl.Sprite.prototype.copy.call(this,n),this.color=n.color,this.backgroundColor=n.backgroundColor,this.padding=n.padding,this.borderWidth=n.borderWidth,this.borderColor=n.borderColor,this.fontFace=n.fontFace,this.fontSize=n.fontSize,this.fontWeight=n.fontWeight,this.strokeWidth=n.strokeWidth,this.strokeColor=n.strokeColor,this}}])}(pl.Sprite);class wH extends Cg.Component{constructor(e){super(e),this.mainDiv=Cg.createRef(),this.graph=null,this.imgSprites={},this.renderedNodes=[],this.nodeMap={},this.willDismount=!1,this.prevTimestamp=-1,this.frameMs=0,this.animDriver=0,this.navigated=!1,this.prevNavigated=!1,this.scrollBypass=0,this.prevScrollBypass=!1}updateHighlight(){this.graph.nodeColor(this.graph.nodeColor()).linkWidth(this.graph.linkWidth())}componentDidMount(){if(this.mainDiv.current===null)return;pd.nodes.forEach(o=>{this.nodeMap[o.id]=o}),pd.links.forEach((o=>{if(!(o.source in this.nodeMap)||!(o.target in this.nodeMap))return;const a=this.nodeMap[o.source],l=this.nodeMap[o.target];!a.neighbors&&(a.neighbors=[]),!l.neighbors&&(l.neighbors=[]),a.neighbors.push(l),l.neighbors.push(a),!a.links&&(a.links=[]),!l.links&&(l.links=[]),a.links.push(o),l.links.push(o)}).bind(this));const e=new Set,t=new Set;let n=null;this.graph=sH()(this.mainDiv.current).graphData(pd).enableNodeDrag(!0).backgroundColor("rgba(0,0,0,0)").linkWidth(o=>t.has(o)?o.group==="white"?3:2:o.group==="white"?2:1).linkOpacity(.4).linkColor(o=>o.group).linkCurvature(.4).showNavInfo(!0).enableNavigationControls(!0).nodeThreeObject(o=>{const a=new js;let l=!0,c=3,u=3;const h=()=>{const d=new bH(o.text??o.id);return d.material.depthWrite=!0,d.color="#fff",d.backgroundColor="#000",d.textHeight=c,d.padding=u,d};if("img"in o){l=!1;const d=36,f=new R0().load(o.img,g=>{let m=this.imgSprites[o.id],v=g.image.width,x=g.image.height,y=v>x?v/x:1,T=x>v?x/v:1;m.scale.set(d*y,d*T)});f.minFilter=en,f.maxFilter=en,f.generateMipmaps=!1,f.colorSpace=Ie;const p=new Ph({map:f,transparent:!1}),_=new M0(p);if(_.scale.set(d,d),this.imgSprites[o.id]=_,a.add(_),"text"in o){const g=h();g.center=new ae(.5,d/c/4),a.add(g)}}else if(o.group==="text"){const d=h();d.center=new ae(.5,-.1),a.add(d)}if(l){let d=new tn(new Da(2),new Mm({color:"#FFFFFF"}));a.add(d)}return this.renderedNodes.push(a),a}).onNodeHover(o=>{!o&&!e.size||o&&n===o||(e.clear(),t.clear(),o&&(e.add(o),o.neighbors.forEach(a=>e.add(a)),o.links.forEach(a=>t.add(a))),n=o||null)}).onLinkHover(o=>{e.clear(),t.clear(),o&&(t.add(o),e.add(o.source),e.add(o.target))});const r=650;let s=(o=>{if(this.willDismount)return;this.frameMs=this.prevTimestamp==-1?1:o-this.prevTimestamp,this.animDriver+=this.frameMs,this.scrollBypass-=this.frameMs;let a=this.scrollBypass>0;if(a&&!this.prevScrollBypass&&this.graph.enableNavigationControls(!1),!a&&this.prevScrollBypass&&this.graph.enableNavigationControls(!0),!this.navigated){let l=this.animDriver*Math.PI/12600;this.graph.cameraPosition({x:r*Math.sin(l),z:r*Math.cos(l)})}this.prevNavigated=this.navigated,this.prevScrollBypass=a,this.prevTimestamp=o,window.requestAnimationFrame(s)}).bind(this);window.requestAnimationFrame(s)}componentWillUnmount(){this.imgSprites={},this.renderedNodes=[],this.nodeMap={},this.willDismount=!0}render(){return dT.jsx("div",{ref:this.mainDiv,className:this.props.className,onWheel:e=>{e.ctrlKey||(this.graph.enableNavigationControls(!1),this.scrollBypass=1500)},onMouseDown:e=>this.navigated=!0,onPointerDown:e=>this.navigated=!0})}}export{wH as default};
